export const abi = {
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_eas",
          "type": "address",
          "internalType": "contract IEAS"
        },
        {
          "name": "_schemaRegistry",
          "type": "address",
          "internalType": "contract ISchemaRegistry"
        },
        {
          "name": "_escrowContract",
          "type": "address",
          "internalType": "contract AttestationEscrowObligation2"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        {
          "name": "schema",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "expirationTime",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "revocable",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "refUID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "attestAndCreateEscrow",
      "inputs": [
        {
          "name": "schema",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "attestationExpirationTime",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "revocable",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "refUID",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "attestationData",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "arbiter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "demand",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "escrowExpirationTime",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "outputs": [
        {
          "name": "attestationUid",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "escrowUid",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "eas",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IEAS"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "escrowContract",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract AttestationEscrowObligation2"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSchema",
      "inputs": [
        {
          "name": "schemaId",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SchemaRecord",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "resolver",
              "type": "address",
              "internalType": "contract ISchemaResolver"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "schema",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isPayable",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "multiAttest",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multiRevoke",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "registerSchema",
      "inputs": [
        {
          "name": "schema",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "resolver",
          "type": "address",
          "internalType": "contract SchemaResolver"
        },
        {
          "name": "revocable",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "schemaRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract ISchemaRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "schemaResolvers",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "SchemaRegistered",
      "inputs": [
        {
          "name": "schemaId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "schema",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        },
        {
          "name": "resolver",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessDenied",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientValue",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidEAS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidResolver",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSchema",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotPayable",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x6101603461012557601f6110cb38819003918201601f19168301916001600160401b03831184841017610129578084926060946040528339810103126101255780516001600160a01b0381169190828103610125576020820151916001600160a01b03831683036101255760400151926001600160a01b0384168403610125576001608052600360a0525f60c05215610116578060e052610100526101205261014052604051610f8d908161013e8239608051816106e1015260a0518161070c015260c05181610737015260e05181610f180152610100518181816103eb0152818161053a0152610a230152610120518181816101a201528181610853015261094701526101405181818161010101526106000152f35b6341bc07ff60e11b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610029575b50361561001a575f80fd5b631574f9f360e01b5f5260045ffd5b5f3560e01c90816313bbebfc14610a98575080632ac17f32146109765780634441bbd91461093257806353d55cc0146107c457806354fd4d50146106c257806359c5f9f71461041a5780638150864d146103d657806388e5b2d91461037a57806391db0b7e14610300578063a2ea7c6e1461014e578063ce46e04614610134578063e42a96e7146100ec578063e49617e1146100cf5763e60c3505146100cf575f61000f565b6100d836610bd5565b506100e1610f16565b602060405160018152f35b34610130575f366003190112610130576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5f80fd5b34610130575f3660031901126101305760206040515f8152f35b346101305760203660031901126101305760608060405161016e81610c3f565b5f81525f60208201525f604082015201526040516351753e3760e11b815260043560048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156102f5575f9061021b575b606090610217604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a0830190610b31565b0390f35b503d805f833e61022b8183610c5a565b810190602081830312610130578051906001600160401b0382116101305701608081830312610130576040519061026182610c3f565b8051825260208101516001600160a01b0381168103610130576020830152604081015180151581036101305760408301526060810151906001600160401b03821161013057019180601f840112156101305782516102be81610c7b565b916102cc6040519384610c5a565b81835260208286010111610130576020815f9282606097018386015e83010152828201526101d1565b6040513d5f823e3d90fd5b61030936610b85565b610314929192610f16565b80820361036b575f90345b83831061033157602060405160018152f35b61033c838387610d62565b3581811161035c5760019161035285878a610d86565b500392019161031f565b63044044a560e21b5f5260045ffd5b63251f56a160e21b5f5260045ffd5b61038336610b85565b61038e929192610f16565b80820361036b575f90345b8383106103ab57602060405160018152f35b6103b6838387610d62565b3581811161035c576001916103cc85878a610d86565b5003920191610399565b34610130575f366003190112610130576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101305761012036600319011261013057610434610ac9565b61043c610adf565b90610445610af5565b9060a4356001600160401b03811161013057610465903690600401610b04565b92909360c4359160018060a01b0383168093036101305760e4356001600160401b0381116101305761049b903690600401610b04565b94909261010435976001600160401b03891680990361013057610535976020946001600160401b036104fa94604051966104d488610c09565b6001600160a01b0316875216868601521515604085015260843560608501523691610c96565b60808201525f60a08201526040519061051282610c24565b6004358252828201526040518096819263f17325e760e01b835260048301610ccc565b03815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19384156102f5575f9461068e575b506040519060608201908282106001600160401b0383111761067a576020946105a8926040528684528584019485523691610c96565b94604082019586526105f36040519687948594631cba5b3360e21b86526040600487015251604486015260018060a01b039051166064850152516060608485015260a4840190610b31565b602483019190915203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156102f5575f90610647575b6040809350519182526020820152f35b506020823d602011610672575b8161066160209383610c5a565b810103126101305760409151610637565b3d9150610654565b634e487b7160e01b5f52604160045260245ffd5b9093506020813d6020116106ba575b816106aa60209383610c5a565b8101031261013057519285610572565b3d915061069d565b34610130575f3660031901126101305761021760206107b060016107057f0000000000000000000000000000000000000000000000000000000000000000610da9565b81846107307f0000000000000000000000000000000000000000000000000000000000000000610da9565b818061075b7f0000000000000000000000000000000000000000000000000000000000000000610da9565b9260405199878b985191829101848a015e870190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e01015f838201520301601f198101835282610c5a565b604051918291602083526020830190610b31565b34610130576060366003190112610130576004356001600160401b038111610130576107f4903690600401610b04565b6024356001600160a01b03811691908290036101305760443591821515809303610130576020604051808095630c1af44f60e31b82526060600483015261083f60648301878a610d42565b60248301869052604483019190915203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19283156102f5575f936108fb575b5060209383927fe1de970d17b45f7e907a7d4a1b40501d574c2d5ac3426c2ac4acb06f43c1b35a92845f525f875260405f20816bffffffffffffffffffffffff60a01b8254161790556108eb604051938493604085526040850191610d42565b90878301520390a2604051908152f35b909192506020813d60201161092a575b8161091860209383610c5a565b8101031261013057519190602061088b565b3d915061090b565b34610130575f366003190112610130576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101305760c03660031901126101305761098f610ac9565b610997610adf565b906109a0610af5565b9060a435916001600160401b03831161013057610a1e936001600160401b036109e3926109d36020963690600401610b04565b929093604051966104d488610c09565b60808201525f60a0820152604051906109fb82610c24565b6004358252828201526040518093819263f17325e760e01b835260048301610ccc565b03815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156102f5575f90610a65575b602090604051908152f35b506020813d602011610a90575b81610a7f60209383610c5a565b810103126101305760209051610a5a565b3d9150610a72565b34610130576020366003190112610130576004355f90815260208181526040909120546001600160a01b0316825290f35b602435906001600160a01b038216820361013057565b604435906001600160401b038216820361013057565b60643590811515820361013057565b9181601f84011215610130578235916001600160401b038311610130576020838186019501011161013057565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610130578235916001600160401b038311610130576020808501948460051b01011161013057565b6040600319820112610130576004356001600160401b0381116101305781610baf91600401610b55565b92909291602435906001600160401b03821161013057610bd191600401610b55565b9091565b602060031982011261013057600435906001600160401b038211610130576101409082900360031901126101305760040190565b60c081019081106001600160401b0382111761067a57604052565b604081019081106001600160401b0382111761067a57604052565b608081019081106001600160401b0382111761067a57604052565b90601f801991011681019081106001600160401b0382111761067a57604052565b6001600160401b03811161067a57601f01601f191660200190565b929192610ca282610c7b565b91610cb06040519384610c5a565b829481845281830111610130578281602093845f960137010152565b9060209081835280518284015201519060408082015260018060a01b0382511660608201526001600160401b0360208301511660808201526040820151151560a0820152606082015160c082015261010060a0610d39608085015160c060e0860152610120850190610b31565b93015191015290565b908060209392818452848401375f828201840152601f01601f1916010190565b9190811015610d725760051b0190565b634e487b7160e01b5f52603260045260245ffd5b9190811015610d725760051b8101359061013e1981360301821215610130570190565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015610ef3575b806d04ee2d6d415b85acef8100000000600a921015610ed8575b662386f26fc10000811015610ec4575b6305f5e100811015610eb3575b612710811015610ea4575b6064811015610e96575b1015610e8b575b600a60216001840193610e3085610c7b565b94610e3e6040519687610c5a565b808652610e4d601f1991610c7b565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353048015610e8657600a9091610e58565b505090565b600190910190610e1e565b606460029104930192610e17565b61271060049104930192610e0d565b6305f5e10060089104930192610e02565b662386f26fc1000060109104930192610df5565b6d04ee2d6d415b85acef810000000060209104930192610de5565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104610dcb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610f4857565b634ca8886760e01b5f5260045ffdfea264697066735822122046ca25b09c1d4b32409b7090ece0e727cf76c71a3a5583b091fd4176e2fca20764736f6c634300081a0033",
    "sourceMap": "420:3693:39:-:0;;;;;;;;;;;;;-1:-1:-1;;420:3693:39;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;685:1:6;759:14:4;;688:1:6;783:14:4;;-1:-1:-1;807:14:4;;708:26:6;704:76;;790:10;;;1022::39;;1042:32;;1084;;420:3693;;;;;;;;759:14:4;420:3693:39;;;;;783:14:4;420:3693:39;;;;;807:14:4;420:3693:39;;;;;790:10:6;420:3693:39;;;;;1022:10;420:3693;;;;;;;;;;;;;;;1042:32;420:3693;;;;;;;;;;;;;;;1084:32;420:3693;;;;;;;;;;;704:76:6;757:12;;;-1:-1:-1;757:12:6;;-1:-1:-1;757:12:6;420:3693:39;-1:-1:-1;420:3693:39;;;;;;-1:-1:-1;420:3693:39;;;;;-1:-1:-1;420:3693:39",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610029575b50361561001a575f80fd5b631574f9f360e01b5f5260045ffd5b5f3560e01c90816313bbebfc14610a98575080632ac17f32146109765780634441bbd91461093257806353d55cc0146107c457806354fd4d50146106c257806359c5f9f71461041a5780638150864d146103d657806388e5b2d91461037a57806391db0b7e14610300578063a2ea7c6e1461014e578063ce46e04614610134578063e42a96e7146100ec578063e49617e1146100cf5763e60c3505146100cf575f61000f565b6100d836610bd5565b506100e1610f16565b602060405160018152f35b34610130575f366003190112610130576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5f80fd5b34610130575f3660031901126101305760206040515f8152f35b346101305760203660031901126101305760608060405161016e81610c3f565b5f81525f60208201525f604082015201526040516351753e3760e11b815260043560048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156102f5575f9061021b575b606090610217604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a0830190610b31565b0390f35b503d805f833e61022b8183610c5a565b810190602081830312610130578051906001600160401b0382116101305701608081830312610130576040519061026182610c3f565b8051825260208101516001600160a01b0381168103610130576020830152604081015180151581036101305760408301526060810151906001600160401b03821161013057019180601f840112156101305782516102be81610c7b565b916102cc6040519384610c5a565b81835260208286010111610130576020815f9282606097018386015e83010152828201526101d1565b6040513d5f823e3d90fd5b61030936610b85565b610314929192610f16565b80820361036b575f90345b83831061033157602060405160018152f35b61033c838387610d62565b3581811161035c5760019161035285878a610d86565b500392019161031f565b63044044a560e21b5f5260045ffd5b63251f56a160e21b5f5260045ffd5b61038336610b85565b61038e929192610f16565b80820361036b575f90345b8383106103ab57602060405160018152f35b6103b6838387610d62565b3581811161035c576001916103cc85878a610d86565b5003920191610399565b34610130575f366003190112610130576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101305761012036600319011261013057610434610ac9565b61043c610adf565b90610445610af5565b9060a4356001600160401b03811161013057610465903690600401610b04565b92909360c4359160018060a01b0383168093036101305760e4356001600160401b0381116101305761049b903690600401610b04565b94909261010435976001600160401b03891680990361013057610535976020946001600160401b036104fa94604051966104d488610c09565b6001600160a01b0316875216868601521515604085015260843560608501523691610c96565b60808201525f60a08201526040519061051282610c24565b6004358252828201526040518096819263f17325e760e01b835260048301610ccc565b03815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19384156102f5575f9461068e575b506040519060608201908282106001600160401b0383111761067a576020946105a8926040528684528584019485523691610c96565b94604082019586526105f36040519687948594631cba5b3360e21b86526040600487015251604486015260018060a01b039051166064850152516060608485015260a4840190610b31565b602483019190915203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156102f5575f90610647575b6040809350519182526020820152f35b506020823d602011610672575b8161066160209383610c5a565b810103126101305760409151610637565b3d9150610654565b634e487b7160e01b5f52604160045260245ffd5b9093506020813d6020116106ba575b816106aa60209383610c5a565b8101031261013057519285610572565b3d915061069d565b34610130575f3660031901126101305761021760206107b060016107057f0000000000000000000000000000000000000000000000000000000000000000610da9565b81846107307f0000000000000000000000000000000000000000000000000000000000000000610da9565b818061075b7f0000000000000000000000000000000000000000000000000000000000000000610da9565b9260405199878b985191829101848a015e870190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e01015f838201520301601f198101835282610c5a565b604051918291602083526020830190610b31565b34610130576060366003190112610130576004356001600160401b038111610130576107f4903690600401610b04565b6024356001600160a01b03811691908290036101305760443591821515809303610130576020604051808095630c1af44f60e31b82526060600483015261083f60648301878a610d42565b60248301869052604483019190915203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19283156102f5575f936108fb575b5060209383927fe1de970d17b45f7e907a7d4a1b40501d574c2d5ac3426c2ac4acb06f43c1b35a92845f525f875260405f20816bffffffffffffffffffffffff60a01b8254161790556108eb604051938493604085526040850191610d42565b90878301520390a2604051908152f35b909192506020813d60201161092a575b8161091860209383610c5a565b8101031261013057519190602061088b565b3d915061090b565b34610130575f366003190112610130576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101305760c03660031901126101305761098f610ac9565b610997610adf565b906109a0610af5565b9060a435916001600160401b03831161013057610a1e936001600160401b036109e3926109d36020963690600401610b04565b929093604051966104d488610c09565b60808201525f60a0820152604051906109fb82610c24565b6004358252828201526040518093819263f17325e760e01b835260048301610ccc565b03815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156102f5575f90610a65575b602090604051908152f35b506020813d602011610a90575b81610a7f60209383610c5a565b810103126101305760209051610a5a565b3d9150610a72565b34610130576020366003190112610130576004355f90815260208181526040909120546001600160a01b0316825290f35b602435906001600160a01b038216820361013057565b604435906001600160401b038216820361013057565b60643590811515820361013057565b9181601f84011215610130578235916001600160401b038311610130576020838186019501011161013057565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610130578235916001600160401b038311610130576020808501948460051b01011161013057565b6040600319820112610130576004356001600160401b0381116101305781610baf91600401610b55565b92909291602435906001600160401b03821161013057610bd191600401610b55565b9091565b602060031982011261013057600435906001600160401b038211610130576101409082900360031901126101305760040190565b60c081019081106001600160401b0382111761067a57604052565b604081019081106001600160401b0382111761067a57604052565b608081019081106001600160401b0382111761067a57604052565b90601f801991011681019081106001600160401b0382111761067a57604052565b6001600160401b03811161067a57601f01601f191660200190565b929192610ca282610c7b565b91610cb06040519384610c5a565b829481845281830111610130578281602093845f960137010152565b9060209081835280518284015201519060408082015260018060a01b0382511660608201526001600160401b0360208301511660808201526040820151151560a0820152606082015160c082015261010060a0610d39608085015160c060e0860152610120850190610b31565b93015191015290565b908060209392818452848401375f828201840152601f01601f1916010190565b9190811015610d725760051b0190565b634e487b7160e01b5f52603260045260245ffd5b9190811015610d725760051b8101359061013e1981360301821215610130570190565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015610ef3575b806d04ee2d6d415b85acef8100000000600a921015610ed8575b662386f26fc10000811015610ec4575b6305f5e100811015610eb3575b612710811015610ea4575b6064811015610e96575b1015610e8b575b600a60216001840193610e3085610c7b565b94610e3e6040519687610c5a565b808652610e4d601f1991610c7b565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353048015610e8657600a9091610e58565b505090565b600190910190610e1e565b606460029104930192610e17565b61271060049104930192610e0d565b6305f5e10060089104930192610e02565b662386f26fc1000060109104930192610df5565b6d04ee2d6d415b85acef810000000060209104930192610de5565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104610dcb565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610f4857565b634ca8886760e01b5f5260045ffdfea264697066735822122046ca25b09c1d4b32409b7090ece0e727cf76c71a3a5583b091fd4176e2fca20764736f6c634300081a0033",
    "sourceMap": "420:3693:39:-:0;;;;;;;;;;-1:-1:-1;420:3693:39;;;;;;;;;1183:12:6;;;1054:5;1183:12;420:3693:39;1054:5:6;1183:12;420:3693:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;881:58:6;;:::i;:::-;420:3693:39;;;3916:4;420:3693;;;;;;;;;-1:-1:-1;;420:3693:39;;;;;;560:60;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;;;-1:-1:-1;;420:3693:39;;;;;;;;;;;;;;;;;-1:-1:-1;;420:3693:39;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4070:34;;420:3693;;;4070:34;;420:3693;;;4070:34;420:3693;;;;;;4070:14;420:3693;4070:34;;;;;;420:3693;4070:34;;;420:3693;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4070:34;;;;420:3693;4070:34;;;;;;:::i;:::-;;;420:3693;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4070:34;;;420:3693;;;;;;;;;;;;;:::i;:::-;881:58:6;;;;;:::i;:::-;1649:23;;;1645:76;;420:3693:39;;2153:9:6;2193:10;;;;;;420:3693:39;;;1489:1:0;420:3693:39;;;2205:19:6;2346:9;;;;;:::i;:::-;420:3693:39;2373:22:6;;;2369:87;;1489:1:0;2594:15:6;;;;;;:::i;:::-;;420:3693:39;2205:19:6;420:3693:39;2178:13:6;;;2369:87;4113:19;;;420:3693:39;2422:19:6;420:3693:39;;2422:19:6;1645:76;3386:15;;;420:3693:39;1695:15:6;420:3693:39;;1695:15:6;420:3693:39;;;;:::i;:::-;881:58:6;;;;;:::i;:::-;3340:23;;;3336:76;;420:3693:39;;3844:9:6;3884:10;;;;;;420:3693:39;;;1489:1:0;420:3693:39;;;3896:19:6;4037:9;;;;;:::i;:::-;420:3693:39;4064:22:6;;;4060:87;;1489:1:0;4284:15:6;;;;;;:::i;:::-;;420:3693:39;3896:19:6;420:3693:39;3869:13:6;;;420:3693:39;;;;;;-1:-1:-1;;420:3693:39;;;;;;476:25;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;-1:-1:-1;;420:3693:39;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;2741:422;420:3693;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;:::i;:::-;-1:-1:-1;;;;;420:3693:39;;;;2840:298;;;420:3693;;;;2840:298;;420:3693;;;;2840:298;;420:3693;;;;:::i;:::-;;2840:298;;420:3693;;;2840:298;;420:3693;;;;;;;:::i;:::-;;;;;2765:388;;;420:3693;;;;;;;;;;2741:422;;420:3693;2741:422;;;:::i;:::-;;420:3693;;2741:3;-1:-1:-1;;;;;420:3693:39;2741:422;;;;;;;420:3693;2741:422;;;420:3693;;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;3293:172;;;420:3693;;;;;;:::i;:::-;3293:172;420:3693;3293:172;;420:3693;;;;;;;;;;;;;;3488:96;;420:3693;;3488:96;;420:3693;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3488:96;420:3693;;3488:14;-1:-1:-1;;;;;420:3693:39;3488:96;;;;;;420:3693;3488:96;;;420:3693;;;;;;;;;;;;;;3488:96;;420:3693;3488:96;;420:3693;3488:96;;;;;;420:3693;3488:96;;;:::i;:::-;;;420:3693;;;;;;;3488:96;;;;;-1:-1:-1;3488:96:39;;420:3693;;;;;;;;;;;;2741:422;;;;420:3693;2741:422;;420:3693;2741:422;;;;;;420:3693;2741:422;;;:::i;:::-;;;420:3693;;;;;2741:422;;;;;;;-1:-1:-1;2741:422:39;;420:3693;;;;;;-1:-1:-1;;420:3693:39;;;;;1055:104:4;;420:3693:39;1072:24:4;1089:6;1072:24;:::i;:::-;1120:6;;1103:24;1120:6;1103:24;:::i;:::-;1151:6;;1134:24;1151:6;1134:24;:::i;:::-;420:3693:39;;;;;;;;;;;;1055:104:4;;;420:3693:39;;;;-1:-1:-1;;;420:3693:39;;;;;;;;;;;;;;;;;-1:-1:-1;;;420:3693:39;;;;;;;;;;;;;;;;;;;;;1055:104:4;;;;;;;;;;:::i;:::-;420:3693:39;;;;;1055:104:4;420:3693:39;;1055:104:4;420:3693:39;;;;:::i;:::-;;;;;;-1:-1:-1;;420:3693:39;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:52;;420:3693;;1304:52;;420:3693;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1304:52;420:3693;-1:-1:-1;1304:14:39;-1:-1:-1;;;;;420:3693:39;1304:52;;;;;;;420:3693;1304:52;;;420:3693;;;;;;1426:53;420:3693;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1426:53;;;420:3693;;;;;;1304:52;;;;;420:3693;1304:52;;420:3693;1304:52;;;;;;420:3693;1304:52;;;:::i;:::-;;;420:3693;;;;;;1304:52;420:3693;1304:52;;;;;-1:-1:-1;1304:52:39;;420:3693;;;;;;-1:-1:-1;;420:3693:39;;;;;;507:47;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;-1:-1:-1;;420:3693:39;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;;;;420:3693:39;;;;1754:448;420:3693;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;1865:304;;420:3693;;;1865:304;;420:3693;;;;;;;:::i;:::-;;;;;1782:406;;;420:3693;;;;;;;;;;1754:448;;420:3693;1754:448;;;:::i;:::-;;420:3693;;1754:3;-1:-1:-1;;;;;420:3693:39;1754:448;;;;;;420:3693;1754:448;;;420:3693;;;;;;;;;1754:448;;420:3693;1754:448;;420:3693;1754:448;;;;;;420:3693;1754:448;;;:::i;:::-;;;420:3693;;;;;;;1754:448;;;;;-1:-1:-1;1754:448:39;;420:3693;;;;;;-1:-1:-1;;420:3693:39;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;420:3693:39;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;420:3693:39;;;;;;;;-1:-1:-1;;420:3693:39;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;420:3693:39;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;420:3693:39;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;-1:-1:-1;;420:3693:39;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;:::o;:::-;;;1055:104:4;;420:3693:39;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;:::o;:::-;-1:-1:-1;;;;;420:3693:39;;;;;;-1:-1:-1;;420:3693:39;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;420:3693:39;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;420:3693:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;420:3693:39;;;;;;;;-1:-1:-1;;420:3693:39;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;637:632:31:-;759:17;-1:-1:-1;25444:17:32;-1:-1:-1;;;25444:17:32;;;25440:103;;637:632:31;25560:17:32;25569:8;26140:7;25560:17;;;25556:103;;637:632:31;25685:8:32;25676:17;;;25672:103;;637:632:31;25801:7:32;25792:16;;;25788:100;;637:632:31;25914:7:32;25905:16;;;25901:100;;637:632:31;26027:7:32;26018:16;;;26014:100;;637:632:31;26131:16:32;;26127:66;;637:632:31;26140:7:32;874:92:31;779:1;420:3693:39;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1055:104:4;;420:3693:39;;:::i;:::-;;;;;;;874:92:31;;;979:247;-1:-1:-1;;420:3693:39;;-1:-1:-1;;;1033:111:31;;;;420:3693:39;1033:111:31;420:3693:39;1194:10:31;;1190:21;;26140:7:32;979:247:31;;;;1190:21;1206:5;;637:632;:::o;26127:66:32:-;26177:1;420:3693:39;;;;26127:66:32;;26014:100;26027:7;26098:1;420:3693:39;;;;26014:100:32;;;25901;25914:7;25985:1;420:3693:39;;;;25901:100:32;;;25788;25801:7;25872:1;420:3693:39;;;;25788:100:32;;;25672:103;25685:8;25758:2;420:3693:39;;;;25672:103:32;;;25556;25569:8;25642:2;420:3693:39;;;;25556:103:32;;;25440;-1:-1:-1;25526:2:32;;-1:-1:-1;;;;420:3693:39;;25440:103:32;;6040:128:6;6109:4;-1:-1:-1;;;;;420:3693:39;6087:10:6;:27;6083:79;;6040:128::o;6083:79::-;6137:14;;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "446": [
        {
          "start": 1761,
          "length": 32
        }
      ],
      "448": [
        {
          "start": 1804,
          "length": 32
        }
      ],
      "450": [
        {
          "start": 1847,
          "length": 32
        }
      ],
      "588": [
        {
          "start": 3864,
          "length": 32
        }
      ],
      "44343": [
        {
          "start": 1003,
          "length": 32
        },
        {
          "start": 1338,
          "length": 32
        },
        {
          "start": 2595,
          "length": 32
        }
      ],
      "44346": [
        {
          "start": 418,
          "length": 32
        },
        {
          "start": 2131,
          "length": 32
        },
        {
          "start": 2375,
          "length": 32
        }
      ],
      "44349": [
        {
          "start": 257,
          "length": 32
        },
        {
          "start": 1536,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
    "attest(bytes32,address,uint64,bool,bytes32,bytes)": "2ac17f32",
    "attestAndCreateEscrow(bytes32,address,uint64,bool,bytes32,bytes,address,bytes,uint64)": "59c5f9f7",
    "eas()": "8150864d",
    "escrowContract()": "e42a96e7",
    "getSchema(bytes32)": "a2ea7c6e",
    "isPayable()": "ce46e046",
    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
    "registerSchema(string,address,bool)": "53d55cc0",
    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
    "schemaRegistry()": "4441bbd9",
    "schemaResolvers(bytes32)": "13bbebfc",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"_schemaRegistry\",\"type\":\"address\"},{\"internalType\":\"contract AttestationEscrowObligation2\",\"name\":\"_escrowContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidResolver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSchema\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schemaId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"SchemaRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"attestationExpirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"attestationData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"arbiter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"escrowExpirationTime\",\"type\":\"uint64\"}],\"name\":\"attestAndCreateEscrow\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"attestationUid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"escrowUid\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eas\",\"outputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escrowContract\",\"outputs\":[{\"internalType\":\"contract AttestationEscrowObligation2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"schemaId\",\"type\":\"bytes32\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"contract SchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"registerSchema\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schemaRegistry\",\"outputs\":[{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"schemaResolvers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Utils/AttestationBarterUtils.sol\":\"AttestationBarterUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"lib/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808\",\"dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f\",\"dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR\"]},\"lib/eas-contracts/contracts/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828\",\"dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440\",\"dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426\",\"dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY\"]},\"src/ArbiterUtils.sol\":{\"keccak256\":\"0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265\",\"dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ\"]},\"src/BaseStatement.sol\":{\"keccak256\":\"0x8d64fa267e4ef6bcef60b0e17c91047c9cce3ccbf21d18b7ff8a515928ce5f57\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c5e0154a9580018f78392a77155b90a9554738f9807854c85d8f84e370ef8147\",\"dweb:/ipfs/QmQiekLr7CwwCK4iGDKJyJTzFqbdrJmKD1i64p9uGR9w2Q\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778\",\"dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp\"]},\"src/Statements/AttestationEscrowObligation2.sol\":{\"keccak256\":\"0x10e3ab2f2b9c8b1613b68109100fd16dd49c319a2d489b18689f260ca835ec37\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0b2c698e2815871662137f9b19eb893de38cf0c8ef8edafce9af7f06b43557f1\",\"dweb:/ipfs/QmeGogzRTdrWKXiomPxgJtNfuLxuso9UsDgikNeaUdMbrQ\"]},\"src/Utils/AttestationBarterUtils.sol\":{\"keccak256\":\"0xd9edd384c3dc26d3fcab08912201342e1a64b6a85f8a4caa4bec0a29447630f5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8717081652862fb74c7f3072ba2624d193b1468da86bad29cf4f89654236a702\",\"dweb:/ipfs/QmSjCUb17CUR9fA6njGMr9s5nwQCF5CsgY72ooE25dncWB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEAS",
              "name": "_eas",
              "type": "address"
            },
            {
              "internalType": "contract ISchemaRegistry",
              "name": "_schemaRegistry",
              "type": "address"
            },
            {
              "internalType": "contract AttestationEscrowObligation2",
              "name": "_escrowContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessDenied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEAS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidResolver"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSchema"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPayable"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "schemaId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "schema",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "resolver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SchemaRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "attest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "attestationExpirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "attestationData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "arbiter",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "demand",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "escrowExpirationTime",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attestAndCreateEscrow",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "attestationUid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "escrowUid",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eas",
          "outputs": [
            {
              "internalType": "contract IEAS",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "escrowContract",
          "outputs": [
            {
              "internalType": "contract AttestationEscrowObligation2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "schemaId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "struct SchemaRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isPayable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiAttest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiRevoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            },
            {
              "internalType": "contract SchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerSchema",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "schemaRegistry",
          "outputs": [
            {
              "internalType": "contract ISchemaRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "schemaResolvers",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The new attestation."
            },
            "returns": {
              "_0": "Whether the attestation is valid."
            }
          },
          "isPayable()": {
            "returns": {
              "_0": "Whether the resolver supports ETH transfers."
            }
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The new attestations.",
              "values": "Explicit ETH amounts which were sent with each attestation."
            },
            "returns": {
              "_0": "Whether all the attestations are valid."
            }
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The existing attestations to be revoked.",
              "values": "Explicit ETH amounts which were sent with each revocation."
            },
            "returns": {
              "_0": "Whether the attestations can be revoked."
            }
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The existing attestation to be revoked."
            },
            "returns": {
              "_0": "Whether the attestation can be revoked."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation and verifies whether it's valid."
          },
          "isPayable()": {
            "notice": "Checks if the resolver can be sent ETH."
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes multiple attestations and verifies whether they are valid."
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation revocation and verifies if it can be revoked."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@eas/=lib/eas-contracts/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/eas-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Utils/AttestationBarterUtils.sol": "AttestationBarterUtils"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/eas-contracts/contracts/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/IEAS.sol": {
        "keccak256": "0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12",
        "urls": [
          "bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880",
          "dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
        "keccak256": "0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754",
        "urls": [
          "bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158",
          "dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISemver.sol": {
        "keccak256": "0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18",
        "urls": [
          "bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0",
          "dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/Semver.sol": {
        "keccak256": "0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9",
        "urls": [
          "bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808",
          "dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb",
        "urls": [
          "bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f",
          "dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
        "keccak256": "0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983",
        "urls": [
          "bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828",
          "dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c",
        "urls": [
          "bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4",
          "dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2",
        "urls": [
          "bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440",
          "dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c",
        "urls": [
          "bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966",
          "dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481",
        "urls": [
          "bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb",
          "dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0",
        "urls": [
          "bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426",
          "dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"
        ],
        "license": "MIT"
      },
      "src/ArbiterUtils.sol": {
        "keccak256": "0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c",
        "urls": [
          "bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265",
          "dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ"
        ],
        "license": "UNLICENSED"
      },
      "src/BaseStatement.sol": {
        "keccak256": "0x8d64fa267e4ef6bcef60b0e17c91047c9cce3ccbf21d18b7ff8a515928ce5f57",
        "urls": [
          "bzz-raw://c5e0154a9580018f78392a77155b90a9554738f9807854c85d8f84e370ef8147",
          "dweb:/ipfs/QmQiekLr7CwwCK4iGDKJyJTzFqbdrJmKD1i64p9uGR9w2Q"
        ],
        "license": "UNLICENSED"
      },
      "src/IArbiter.sol": {
        "keccak256": "0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647",
        "urls": [
          "bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778",
          "dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp"
        ],
        "license": "UNLICENSED"
      },
      "src/Statements/AttestationEscrowObligation2.sol": {
        "keccak256": "0x10e3ab2f2b9c8b1613b68109100fd16dd49c319a2d489b18689f260ca835ec37",
        "urls": [
          "bzz-raw://0b2c698e2815871662137f9b19eb893de38cf0c8ef8edafce9af7f06b43557f1",
          "dweb:/ipfs/QmeGogzRTdrWKXiomPxgJtNfuLxuso9UsDgikNeaUdMbrQ"
        ],
        "license": "UNLICENSED"
      },
      "src/Utils/AttestationBarterUtils.sol": {
        "keccak256": "0xd9edd384c3dc26d3fcab08912201342e1a64b6a85f8a4caa4bec0a29447630f5",
        "urls": [
          "bzz-raw://8717081652862fb74c7f3072ba2624d193b1468da86bad29cf4f89654236a702",
          "dweb:/ipfs/QmSjCUb17CUR9fA6njGMr9s5nwQCF5CsgY72ooE25dncWB"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 39
} as const;