export const abi = {
  abi: [
    {
      type: "constructor",
      inputs: [
        {
          name: "_eas",
          type: "address",
          internalType: "contract IEAS",
        },
        {
          name: "_schemaRegistry",
          type: "address",
          internalType: "contract ISchemaRegistry",
        },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "receive",
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "ATTESTATION_SCHEMA",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "bytes32",
          internalType: "bytes32",
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "attest",
      inputs: [
        {
          name: "attestation",
          type: "tuple",
          internalType: "struct Attestation",
          components: [
            {
              name: "uid",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "schema",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "time",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "expirationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "revocationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "refUID",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "recipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "attester",
              type: "address",
              internalType: "address",
            },
            {
              name: "revocable",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
        },
      ],
      outputs: [
        {
          name: "",
          type: "bool",
          internalType: "bool",
        },
      ],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "checkObligation",
      inputs: [
        {
          name: "obligation",
          type: "tuple",
          internalType: "struct Attestation",
          components: [
            {
              name: "uid",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "schema",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "time",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "expirationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "revocationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "refUID",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "recipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "attester",
              type: "address",
              internalType: "address",
            },
            {
              name: "revocable",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
        },
        {
          name: "demand",
          type: "bytes",
          internalType: "bytes",
        },
        {
          name: "",
          type: "bytes32",
          internalType: "bytes32",
        },
      ],
      outputs: [
        {
          name: "",
          type: "bool",
          internalType: "bool",
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "decodeObligationData",
      inputs: [
        {
          name: "data",
          type: "bytes",
          internalType: "bytes",
        },
      ],
      outputs: [
        {
          name: "",
          type: "tuple",
          internalType: "struct TokenBundlePaymentObligation.ObligationData",
          components: [
            {
              name: "erc20Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc20Amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc721Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc721TokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc1155Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc1155TokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc1155Amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "payee",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      stateMutability: "pure",
    },
    {
      type: "function",
      name: "doObligation",
      inputs: [
        {
          name: "data",
          type: "tuple",
          internalType: "struct TokenBundlePaymentObligation.ObligationData",
          components: [
            {
              name: "erc20Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc20Amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc721Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc721TokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc1155Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc1155TokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc1155Amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "payee",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      outputs: [
        {
          name: "uid_",
          type: "bytes32",
          internalType: "bytes32",
        },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "doObligationFor",
      inputs: [
        {
          name: "data",
          type: "tuple",
          internalType: "struct TokenBundlePaymentObligation.ObligationData",
          components: [
            {
              name: "erc20Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc20Amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc721Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc721TokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc1155Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc1155TokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc1155Amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "payee",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          name: "payer",
          type: "address",
          internalType: "address",
        },
        {
          name: "recipient",
          type: "address",
          internalType: "address",
        },
      ],
      outputs: [
        {
          name: "uid_",
          type: "bytes32",
          internalType: "bytes32",
        },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "doObligationForRaw",
      inputs: [
        {
          name: "data",
          type: "bytes",
          internalType: "bytes",
        },
        {
          name: "expirationTime",
          type: "uint64",
          internalType: "uint64",
        },
        {
          name: "payer",
          type: "address",
          internalType: "address",
        },
        {
          name: "recipient",
          type: "address",
          internalType: "address",
        },
        {
          name: "refUID",
          type: "bytes32",
          internalType: "bytes32",
        },
      ],
      outputs: [
        {
          name: "uid_",
          type: "bytes32",
          internalType: "bytes32",
        },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "doObligationRaw",
      inputs: [
        {
          name: "data",
          type: "bytes",
          internalType: "bytes",
        },
        {
          name: "expirationTime",
          type: "uint64",
          internalType: "uint64",
        },
        {
          name: "refUID",
          type: "bytes32",
          internalType: "bytes32",
        },
      ],
      outputs: [
        {
          name: "uid_",
          type: "bytes32",
          internalType: "bytes32",
        },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "getObligationData",
      inputs: [
        {
          name: "uid",
          type: "bytes32",
          internalType: "bytes32",
        },
      ],
      outputs: [
        {
          name: "",
          type: "tuple",
          internalType: "struct TokenBundlePaymentObligation.ObligationData",
          components: [
            {
              name: "erc20Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc20Amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc721Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc721TokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc1155Tokens",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "erc1155TokenIds",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "erc1155Amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "payee",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "getSchema",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "tuple",
          internalType: "struct SchemaRecord",
          components: [
            {
              name: "uid",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "resolver",
              type: "address",
              internalType: "contract ISchemaResolver",
            },
            {
              name: "revocable",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "schema",
              type: "string",
              internalType: "string",
            },
          ],
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "isPayable",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "bool",
          internalType: "bool",
        },
      ],
      stateMutability: "pure",
    },
    {
      type: "function",
      name: "multiAttest",
      inputs: [
        {
          name: "attestations",
          type: "tuple[]",
          internalType: "struct Attestation[]",
          components: [
            {
              name: "uid",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "schema",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "time",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "expirationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "revocationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "refUID",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "recipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "attester",
              type: "address",
              internalType: "address",
            },
            {
              name: "revocable",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
        },
        {
          name: "values",
          type: "uint256[]",
          internalType: "uint256[]",
        },
      ],
      outputs: [
        {
          name: "",
          type: "bool",
          internalType: "bool",
        },
      ],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "multiRevoke",
      inputs: [
        {
          name: "attestations",
          type: "tuple[]",
          internalType: "struct Attestation[]",
          components: [
            {
              name: "uid",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "schema",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "time",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "expirationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "revocationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "refUID",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "recipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "attester",
              type: "address",
              internalType: "address",
            },
            {
              name: "revocable",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
        },
        {
          name: "values",
          type: "uint256[]",
          internalType: "uint256[]",
        },
      ],
      outputs: [
        {
          name: "",
          type: "bool",
          internalType: "bool",
        },
      ],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "revoke",
      inputs: [
        {
          name: "attestation",
          type: "tuple",
          internalType: "struct Attestation",
          components: [
            {
              name: "uid",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "schema",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "time",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "expirationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "revocationTime",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "refUID",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "recipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "attester",
              type: "address",
              internalType: "address",
            },
            {
              name: "revocable",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
        },
      ],
      outputs: [
        {
          name: "",
          type: "bool",
          internalType: "bool",
        },
      ],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "version",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "string",
          internalType: "string",
        },
      ],
      stateMutability: "view",
    },
    {
      type: "event",
      name: "BundleTransferred",
      inputs: [
        {
          name: "payment",
          type: "bytes32",
          indexed: true,
          internalType: "bytes32",
        },
        {
          name: "from",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "to",
          type: "address",
          indexed: true,
          internalType: "address",
        },
      ],
      anonymous: false,
    },
    {
      type: "error",
      name: "AccessDenied",
      inputs: [],
    },
    {
      type: "error",
      name: "ArrayLengthMismatch",
      inputs: [],
    },
    {
      type: "error",
      name: "AttestationRevoked",
      inputs: [],
    },
    {
      type: "error",
      name: "DeadlineExpired",
      inputs: [],
    },
    {
      type: "error",
      name: "InsufficientValue",
      inputs: [],
    },
    {
      type: "error",
      name: "InvalidEAS",
      inputs: [],
    },
    {
      type: "error",
      name: "InvalidLength",
      inputs: [],
    },
    {
      type: "error",
      name: "InvalidSchema",
      inputs: [],
    },
    {
      type: "error",
      name: "NotFromThisAttester",
      inputs: [],
    },
    {
      type: "error",
      name: "NotPayable",
      inputs: [],
    },
  ],
  bytecode: {
    object:
      "",
    sourceMap:
      "620:6299:129:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1602:4;620:6299;759:14:6;688:1:9;620:6299:129;783:14:6;-1:-1:-1;620:6299:129;807:14:6;708:26:9;704:76;;620:6299:129;790:10:9;;620:6299:129;790:10:9;620:6299:129;790:10:9;789::77;;809:32;;-1:-1:-1;620:6299:129;;;;;;;;;;;872:48:77;;620:6299:129;872:48:77;;;620:6299:129;;;;;;;;;;;;;;;;;;;;;904:4:77;620:6299:129;;;;1602:4;620:6299;;;;;;-1:-1:-1;;620:6299:129;;;872:48:77;;;;;;;;;;-1:-1:-1;872:48:77;;;-1:-1:-1;851:69:77;;;620:6299:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;809:32:77;620:6299:129;;;;;789:10:77;620:6299:129;;;;;;;;;;851:69:77;620:6299:129;;;;;;;;;;;;;;;;;;;;;;;;;;872:48:77;;;620:6299:129;872:48:77;;620:6299:129;872:48:77;;;;;;620:6299:129;872:48:77;;;:::i;:::-;;;620:6299:129;;;;;872:48:77;;;620:6299:129;-1:-1:-1;620:6299:129;;872:48:77;;;-1:-1:-1;872:48:77;;;620:6299:129;;;-1:-1:-1;620:6299:129;;;;;704:76:9;757:12;;;-1:-1:-1;757:12:9;;-1:-1:-1;757:12:9;620:6299:129;;;;-1:-1:-1;620:6299:129;;;;;-1:-1:-1;620:6299:129;;;;;;-1:-1:-1;;620:6299:129;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::o",
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      "0x60806040526004361015610027575b3615610018575f80fd5b631574f9f360e01b5f5260045ffd5b5f3560e01c806354fd4d501461097a5780635bf2f20d146109405780635fc86150146108d457806368c0553a146107f05780636b122fe01461065a57806388e5b2d91461063b57806391db0b7e1461063b578063b3b902d4146105f0578063c6ec5070146103d7578063c93844be14610380578063ce46e04614610366578063e49617e114610341578063e60c350514610341578063e6c9714d146101415763f0ffa1850361000e573461013d5760a036600319011261013d576004356001600160401b03811161013d57610100903690600401610b46565b610108610b73565b91610111610a9c565b606435906001600160a01b038216820361013d57602094610135946084359461152a565b604051908152f35b5f80fd5b3461013d57606036600319011261013d576004356001600160401b03811161013d57610140600319823603011261013d576040519061017f82610d37565b8060040135825260208201906024810135825261019e60448201610b89565b60408401526101af60648201610b89565b606084019081526101c260848301610b89565b916080850192835260a481013560a08601526101e060c48201610ab2565b60c08601526101f160e48201610ab2565b60e0860152610104810135801515810361013d576101008601526101248101356001600160401b03811161013d576101209160046102329236920101610de1565b94019384526024356001600160401b03811161013d57610256903690600401610de1565b927f000000000000000000000000000000000000000000000000000000000000000090510361033257516001600160401b03168015159081610328575b5061031957516001600160401b031661030a576102cd6102be602093518480825183010191016111f4565b918380825183010191016111f4565b6102d78183611c21565b91826102ea575b50506040519015158152f35b60e0908101519101516001600160a01b03908116911614905082806102de565b637b6227e960e11b5f5260045ffd5b631ab7da6b60e01b5f5260045ffd5b9050421184610293565b635f9bd90760e11b5f5260045ffd5b602061035c61034f36610cd4565b610357611b9f565b611be0565b6040519015158152f35b3461013d575f36600319011261013d5760206040515f8152f35b3461013d57602036600319011261013d576004356001600160401b03811161013d576103c76103b66103d3923690600401610b46565b6103be6110c5565b508101906113f4565b60405191829182610c0c565b0390f35b3461013d57602036600319011261013d576103f06110c5565b50606061012060405161040281610d37565b5f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f61010082015201526040516328c44a9960e21b815260043560048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156105e5575f916104e0575b5060208101517f0000000000000000000000000000000000000000000000000000000000000000036104d1576103c76101206103d3920151602080825183010191016111f4565b635527981560e11b5f5260045ffd5b90503d805f833e6104f18183610d6f565b81019060208183031261013d578051906001600160401b03821161013d5701906101408282031261013d576040519161052983610d37565b805183526020810151602084015261054360408201611bf9565b604084015261055460608201611bf9565b606084015261056560808201611bf9565b608084015260a081015160a084015261058060c0820161111e565b60c084015261059160e0820161111e565b60e08401526105a36101008201610fde565b610100840152610120810151906001600160401b03821161013d57019080601f8301121561013d5781516105d992602001610feb565b6101208201528161048a565b6040513d5f823e3d90fd5b3461013d57606036600319011261013d576004356001600160401b03811161013d576101356106256020923690600401610b46565b61062d610b73565b91604435923392339261152a565b602061035c61064936610af6565b92610655929192611b9f565b611021565b3461013d575f36600319011261013d5760608060405161067981610d08565b5f81525f60208201525f604082015201526040516351753e3760e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156105e5575f90610740575b6060906103d3604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a0830190610a78565b503d805f833e6107508183610d6f565b81019060208183031261013d578051906001600160401b03821161013d570160808183031261013d576040519061078682610d08565b8051825260208101516001600160a01b038116810361013d5760208301526107b060408201610fde565b60408301526060810151906001600160401b03821161013d570182601f8201121561013d576060928160206107e793519101610feb565b828201526106fa565b3461013d57606036600319011261013d576004356001600160401b03811161013d57610100600319823603011261013d576024356001600160a01b038116810361013d57602090610857610865610845610a9c565b94604051928391600401868301610e96565b03601f198101835282610d6f565b610883604051948593849363f0ffa18560e01b855260048501610fa4565b03815f305af180156105e5575f906108a1575b602090604051908152f35b506020813d6020116108cc575b816108bb60209383610d6f565b8101031261013d5760209051610896565b3d91506108ae565b3461013d57602036600319011261013d576004356001600160401b03811161013d57610100600319823603011261013d57602061085761092261088393604051928391600401858301610e96565b6040518093819263f0ffa18560e01b83523390339060048501610fa4565b3461013d575f36600319011261013d5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461013d575f36600319011261013d576103d36020610a6860016109bd7f0000000000000000000000000000000000000000000000000000000000000000611a32565b81846109e87f0000000000000000000000000000000000000000000000000000000000000000611a32565b8180610a137f0000000000000000000000000000000000000000000000000000000000000000611a32565b9260405199878b985191829101848a015e870190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e01015f838201520301601f198101835282610d6f565b6040519182916020835260208301905b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b604435906001600160a01b038216820361013d57565b35906001600160a01b038216820361013d57565b9181601f8401121561013d578235916001600160401b03831161013d576020808501948460051b01011161013d57565b604060031982011261013d576004356001600160401b03811161013d5781610b2091600401610ac6565b92909291602435906001600160401b03821161013d57610b4291600401610ac6565b9091565b9181601f8401121561013d578235916001600160401b03831161013d576020838186019501011161013d57565b602435906001600160401b038216820361013d57565b35906001600160401b038216820361013d57565b90602080835192838152019201905f5b818110610bba5750505090565b82516001600160a01b0316845260209384019390920191600101610bad565b90602080835192838152019201905f5b818110610bf65750505090565b8251845260209384019390920191600101610be9565b60208152610100610cbf610ca9610c93610c7d610c67610c51610c3b89518860208b01526101208a0190610b9d565b60208a0151898203601f190160408b0152610bd9565b6040890151888203601f190160608a0152610b9d565b6060880151878203601f19016080890152610bd9565b6080870151868203601f190160a0880152610b9d565b60a0860151858203601f190160c0870152610bd9565b60c0850151848203601f190160e0860152610bd9565b60e0909301516001600160a01b031691015290565b602060031982011261013d57600435906001600160401b03821161013d5761014090829003600319011261013d5760040190565b608081019081106001600160401b03821117610d2357604052565b634e487b7160e01b5f52604160045260245ffd5b61014081019081106001600160401b03821117610d2357604052565b61010081019081106001600160401b03821117610d2357604052565b90601f801991011681019081106001600160401b03821117610d2357604052565b6001600160401b038111610d2357601f01601f191660200190565b929192610db782610d90565b91610dc56040519384610d6f565b82948184528183011161013d578281602093845f960137010152565b9080601f8301121561013d57816020610dfc93359101610dab565b90565b9035601e198236030181121561013d5701602081359101916001600160401b03821161013d578160051b3603831361013d57565b916020908281520191905f5b818110610e4c5750505090565b909192602080600192838060a01b03610e6488610ab2565b168152019401929101610e3f565b81835290916001600160fb1b03831161013d5760209260051b809284830137010190565b60208152610100610f87610f68610f49610f2a610f0b610eec610ecd610ebc8a80610dff565b8960208c01526101208b0191610e33565b610eda60208b018b610dff565b8a8303601f190160408c015290610e72565b610ef960408a018a610dff565b898303601f190160608b015290610e33565b610f186060890189610dff565b888303601f190160808a015290610e72565b610f376080880188610dff565b878303601f190160a089015290610e33565b610f5660a0870187610dff565b868303601f190160c088015290610e72565b610f7560c0860186610dff565b858303601f190160e087015290610e72565b926001600160a01b0390610f9d9060e001610ab2565b1691015290565b5f929493610fbc60809360a0845260a0840190610a78565b602083018590526001600160a01b039687166040840152951660608201520152565b5190811515820361013d57565b929192610ff782610d90565b916110056040519384610d6f565b82948184528183011161013d578281602093845f96015e010152565b9290928184036110b6575f91345b858410156110ab5781841015611097578360051b80860135908282116110885784013561013e198536030181121561013d5761106c908501611be0565b1561107d576001910393019261102f565b505050505050505f90565b63044044a560e21b5f5260045ffd5b634e487b7160e01b5f52603260045260245ffd5b505050505050600190565b63251f56a160e21b5f5260045ffd5b604051906110d282610d53565b5f60e08360608152606060208201526060604082015260608082015260606080820152606060a0820152606060c08201520152565b6001600160401b038111610d235760051b60200190565b51906001600160a01b038216820361013d57565b9080601f8301121561013d57815161114981611107565b926111576040519485610d6f565b81845260208085019260051b82010192831161013d57602001905b82821061117f5750505090565b6020809161118c8461111e565b815201910190611172565b9080601f8301121561013d5781516111ae81611107565b926111bc6040519485610d6f565b81845260208085019260051b82010192831161013d57602001905b8282106111e45750505090565b81518152602091820191016111d7565b60208183031261013d578051906001600160401b03821161013d57016101008183031261013d576040519161122883610d53565b81516001600160401b03811161013d5781611244918401611132565b835260208201516001600160401b03811161013d5781611265918401611197565b602084015260408201516001600160401b03811161013d5781611289918401611132565b604084015260608201516001600160401b03811161013d57816112ad918401611197565b606084015260808201516001600160401b03811161013d57816112d1918401611132565b608084015260a08201516001600160401b03811161013d57816112f5918401611197565b60a084015260c0820151916001600160401b03831161013d5761131f60e09261132a948301611197565b60c08501520161111e565b60e082015290565b9080601f8301121561013d57813561134981611107565b926113576040519485610d6f565b81845260208085019260051b82010192831161013d57602001905b82821061137f5750505090565b6020809161138c84610ab2565b815201910190611372565b9080601f8301121561013d5781356113ae81611107565b926113bc6040519485610d6f565b81845260208085019260051b82010192831161013d57602001905b8282106113e45750505090565b81358152602091820191016113d7565b60208183031261013d578035906001600160401b03821161013d57016101008183031261013d576040519161142883610d53565b81356001600160401b03811161013d5781611444918401611332565b835260208201356001600160401b03811161013d5781611465918401611397565b602084015260408201356001600160401b03811161013d5781611489918401611332565b604084015260608201356001600160401b03811161013d57816114ad918401611397565b606084015260808201356001600160401b03811161013d57816114d1918401611332565b608084015260a08201356001600160401b03811161013d57816114f5918401611397565b60a084015260c0820135916001600160401b03831161013d5761151f60e09261132a948301611397565b60c085015201610ab2565b949293959091958286019361153f85886113f4565b9485515160208701515103611a1357604086019384515195606088019687515103611a135760808801928351519260a08a0193845151811490811591611a22575b50611a13575f5b8a51805182101561169c5760208d8d611606936115ab8660018060a01b0392611c0d565b5116905f6115c9878660018060a01b0360e086015116940151611c0d565b516040516323b872dd60e01b81526001600160a01b0395861660048201529290941660248301526044820193909352938492839182906064820190565b03925af19081156105e5575f91611663575b501561162657600101611587565b60405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b90506020813d8211611694575b8161167d60209383610d6f565b8101031261013d5761168e90610fde565b5f611618565b3d9150611670565b5050919395979b909294969a5f5b8c51805182101561175e57908e6116e5828e946116ce8260018060a01b0392611c0d565b51169460e060018060a01b03910151169251611c0d565b51833b1561013d57611734938f925f8094604051978895869485936323b872dd60e01b855260048501604091949392606082019560018060a01b0316825260018060a01b031660208201520152565b03925af19182156105e55760019261174e575b50016116aa565b5f61175891610d6f565b5f611747565b505092959a509295989a509296955f9860c088019b60018060a01b0316995b8b5180518210156118305790898b8f93836117be816117c6936117a78260018060a01b0392611c0d565b51169560e060018060a01b03910151169451611c0d565b519551611c0d565b51823b1561013d578e5f809460c4936040519889968795637921219560e11b8752600487015260248601526044850152606484015260a060848401528160a48401525af19182156105e557600192611820575b500161177d565b5f61182a91610d6f565b5f611819565b5050949a509491979650945061184a919750369085610dab565b916040519560c08701918783106001600160401b03841117610d23576001600160401b039260405260018060a01b0316875216602086015260016040860152606085015260808401525f60a084015260405160408101908082106001600160401b03831117610d23576020916040527f000000000000000000000000000000000000000000000000000000000000000081528181019485526040518095819263f17325e760e01b8352846004840152516024830152516040604483015260018060a01b0381511660648301526001600160401b03848201511660848301526040810151151560a4830152606081015160c483015260a061195a608083015160c060e4860152610124850190610a78565b91015161010483015203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19283156105e5575f936119df575b5060e06119b5849660018060a01b03936113f4565b015116917ff499ed54dafb173ee5c0ac81d260b37d4ceba55eb489caab761ba8a1bc663a345f80a4565b9092506020813d602011611a0b575b816119fb60209383610d6f565b8101031261013d5751915f6119a0565b3d91506119ee565b63512509d360e11b5f5260045ffd5b905060c08b01515114155f611580565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015611b7c575b806d04ee2d6d415b85acef8100000000600a921015611b61575b662386f26fc10000811015611b4d575b6305f5e100811015611b3c575b612710811015611b2d575b6064811015611b1f575b1015611b14575b600a60216001840193611ab985610d90565b94611ac76040519687610d6f565b808652611ad6601f1991610d90565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353048015611b0f57600a9091611ae1565b505090565b600190910190611aa7565b606460029104930192611aa0565b61271060049104930192611a96565b6305f5e10060089104930192611a8b565b662386f26fc1000060109104930192611a7e565b6d04ee2d6d415b85acef810000000060209104930192611a6e565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104611a54565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303611bd157565b634ca8886760e01b5f5260045ffd5b60e0013560018060a01b03811680910361013d57301490565b51906001600160401b038216820361013d57565b80518210156110975760209160051b010190565b80515182515111611e02575f5b825151811015611ca55781516001600160a01b0390611c4e908390611c0d565b511660018060a01b03611c62838651611c0d565b511614801590611c80575b611c7957600101611c2e565b5050505f90565b50611c8f816020840151611c0d565b51611c9e826020860151611c0d565b5111611c6d565b506040810191825151604082019081515111611dfa575f5b815151811015611d375784516001600160a01b0390611cdd908390611c0d565b511660018060a01b03611cf1838551611c0d565b511614801590611d11575b611d0857600101611cbd565b50505050505f90565b50611d20816060860151611c0d565b51611d2f826060860151611c0d565b511415611cfc565b50509150608081019182515192608082019384515111611dfa575f5b845151811015611df05781516001600160a01b0390611d73908390611c0d565b511660018060a01b03611d87838851611c0d565b511614801590611dca575b8015611da5575b611d0857600101611d53565b50611db48160c0860151611c0d565b51611dc38260c0860151611c0d565b5111611d99565b50611dd98160a0860151611c0d565b51611de88260a0860151611c0d565b511415611d92565b5050505050600190565b505050505f90565b50505f9056fea264697066735822122048f7dfd682e98638677ca1b9b25456361bc02f6f5833f29725ea400d761447cd64736f6c634300081b0033",
    sourceMap:
      "620:6299:129:-:0;;;;;;;;;-1:-1:-1;620:6299:129;;;;;;;;1183:12:9;;;1054:5;1183:12;620:6299:129;1054:5:9;1183:12;620:6299:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;:::i;:::-;4552:573;4765:18;620:6299;;1016:27:76;1012:55;;620:6299:129;-1:-1:-1;;;;;620:6299:129;353:30:76;;;;;:89;;620:6299:129;721:55:76;;;620:6299:129;-1:-1:-1;;;;;620:6299:129;786:58:76;;4965:36:129;4841:79;620:6299;4865:15;;620:6299;;;;4841:79;;;;;;:::i;:::-;620:6299;;;;;4965:36;;;;;;:::i;:::-;5031:38;;;;:::i;:::-;:87;;;;620:6299;5012:106;;620:6299;;;;;;;;5031:87;620:6299;5085:13;;;620:6299;5102:16;;620:6299;-1:-1:-1;;;;;620:6299:129;;;;;5085:33;;-1:-1:-1;5031:87:129;;;;786:58:76;824:20;;;620:6299:129;824:20:76;620:6299:129;;824:20:76;721:55;759:17;;;620:6299:129;759:17:76;620:6299:129;;759:17:76;353:89;427:15;;;-1:-1:-1;353:89:76;;;1012:55;1052:15;;;620:6299:129;1052:15:76;620:6299:129;;1052:15:76;620:6299:129;;3045:39:9;620:6299:129;;;:::i;:::-;881:58:9;;:::i;:::-;3045:39;:::i;:::-;620:6299:129;;;;;;;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;;;;;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;-1:-1:-1;;;;;620:6299:129;;;;6876:34;620:6299;;;;;;;;:::i;:::-;;;:::i;:::-;;6876:34;;;;:::i;:::-;620:6299;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:23:77;;620:6299:129;;;2392:23:77;;620:6299:129;;;2392:23:77;620:6299:129;;;;;;2392:3:77;620:6299:129;2392:23:77;;;;;;;620:6299:129;2392:23:77;;;620:6299:129;2429:19:77;620:6299:129;2429:19:77;;620:6299:129;2452:18:77;2429:41;2425:87;;6691:46:129;620:6299;;6702:16;;;620:6299;;;;6691:46;;;;;;:::i;2425:87:77:-;2491:21;;;620:6299:129;2491:21:77;620:6299:129;;2491:21:77;2392:23;;;;;620:6299:129;2392:23:77;;;;;;:::i;:::-;;;620:6299:129;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2392:23:77;;;;620:6299:129;;;;;;;;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;-1:-1:-1;;;;;620:6299:129;;;;716:142:80;620:6299:129;;;;;;;;:::i;:::-;;;:::i;:::-;;;;794:10:80;;;;716:142;;:::i;620:6299:129:-;;1442:1461:9;620:6299:129;;;:::i;:::-;881:58:9;;;;;;:::i;:::-;1442:1461;:::i;620:6299:129:-;;;;;;-1:-1:-1;;620:6299:129;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1497:44:77;;1522:18;620:6299:129;1497:44:77;;620:6299:129;;;1497:44:77;620:6299:129;;;;;;1497:14:77;620:6299:129;1497:44:77;;;;;;620:6299:129;1497:44:77;;;620:6299:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1497:44:77:-;;;;620:6299:129;1497:44:77;;;;;;:::i;:::-;;;620:6299:129;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1497:44:77;;620:6299:129;;;;;;-1:-1:-1;;620:6299:129;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;2139:16;;620:6299;;:::i;:::-;;;;;;;;;2139:16;;;;:::i;:::-;;1055:104:6;;2139:16:129;;;;;;:::i;:::-;2172:139;620:6299;;;;;;;;;;2172:139;;620:6299;2172:139;;;:::i;:::-;;:4;620:6299;2172:4;:139;;;;;;620:6299;2172:139;;;620:6299;;;;;;;;;2172:139;;620:6299;2172:139;;620:6299;2172:139;;;;;;620:6299;2172:139;;;:::i;:::-;;;620:6299;;;;;;;2172:139;;;;;-1:-1:-1;2172:139:129;;620:6299;;;;;;-1:-1:-1;;620:6299:129;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;1762:16;;1795:145;620:6299;;;;;;;;1762:16;;;;:::i;:::-;620:6299;;;;;;;;;1795:145;;1872:10;;;1795:145;620:6299;1795:145;;;:::i;620:6299::-;;;;;;-1:-1:-1;;620:6299:129;;;;;;;542:43:77;620:6299:129;;;;;;;;;-1:-1:-1;;620:6299:129;;;;;1055:104:6;;620:6299:129;1072:24:6;1089:6;1072:24;:::i;:::-;1120:6;;1103:24;1120:6;1103:24;:::i;:::-;1151:6;;1134:24;1151:6;1134:24;:::i;:::-;620:6299:129;;;;;;;;;;;;1055:104:6;;;620:6299:129;;;;-1:-1:-1;;;620:6299:129;;;;;;;;;;;;;;;;;-1:-1:-1;;;620:6299:129;;;;;;;;;;;;;;;;;;;;;1055:104:6;;;;;;;;;;:::i;:::-;620:6299:129;;;;;1055:104:6;620:6299:129;;1055:104:6;620:6299:129;;;;;;;;;;;;;;;;;;;;-1:-1:-1;620:6299:129;;;;;;;;-1:-1:-1;;620:6299:129;;;;:::o;:::-;;;;-1:-1:-1;;;;;620:6299:129;;;;;;:::o;:::-;;;-1:-1:-1;;;;;620:6299:129;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;620:6299:129;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;620:6299:129;;;;;;:::o;:::-;;;-1:-1:-1;;;;;620:6299:129;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;620:6299:129;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;620:6299:129;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;:::o;:::-;;-1:-1:-1;;620:6299:129;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;-1:-1:-1;;620:6299:129;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;:::o;:::-;;;;-1:-1:-1;620:6299:129;;;;;-1:-1:-1;620:6299:129;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;:::o;:::-;;;1055:104:6;;620:6299:129;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;:::o;:::-;-1:-1:-1;;;;;620:6299:129;;;;;;-1:-1:-1;;620:6299:129;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;620:6299:129;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;620:6299:129;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;620:6299:129;;;;;1055:104:6;620:6299:129;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;620:6299:129;;;;;1055:104:6;620:6299:129;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;620:6299:129;;;;;1055:104:6;620:6299:129;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;620:6299:129;;;;;1055:104:6;620:6299:129;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;620:6299:129;;;;;1055:104:6;620:6299:129;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;620:6299:129;;;;;1055:104:6;620:6299:129;:::i;:::-;;-1:-1:-1;;;;;620:6299:129;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;620:6299:129;;;;;;:::o;3133:1460:9:-;;;;3340:23;;;3336:76;;3881:1;;3844:9;3896:19;3884:10;;;;;;620:6299:129;;;;;;;;;;;;;4064:22:9;;;;4060:87;;620:6299:129;;;;;;;;;;;;;;4274:33:9;620:6299:129;;;4274:33:9;:::i;:::-;;4270:84;;1489:1:0;620:6299:129;;3896:19:9;620:6299:129;3869:13:9;;;4270:84;4327:12;;;;;;;3881:1;4327:12;:::o;4060:87::-;4113:19;;;3881:1;4113:19;;3881:1;4113:19;620:6299:129;;;;3881:1:9;620:6299:129;;;;;3881:1:9;620:6299:129;3884:10:9;;;;;;;1489:1:0;3133:1460:9;:::o;3336:76::-;3386:15;;;;;;;;620:6299:129;;;;;;;:::i;:::-;-1:-1:-1;620:6299:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;620:6299:129;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;620:6299:129;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;871:377:80:-;;;;;;;;2505:68:129;;;;;;;;:::i;:::-;3114:16;;;620:6299;3141:17;;;;620:6299;3114:51;3110:97;;3221:17;;;;;;620:6299;3249:19;;;;;;;620:6299;3221:54;3217:100;;3344:18;;;;;;620:6299;3373:20;;;;;;;620:6299;3344:56;;;;;:127;;;871:377:80;3327:183:129;;;-1:-1:-1;3681:3:129;3656:16;;620:6299;;3652:27;;;;;3141:17;620:6299;;3725:158;620:6299;3732:19;620:6299;;;;;;3732:19;;:::i;:::-;620:6299;;;-1:-1:-1;3845:20:129;620:6299;;;;;;;;3813:10;;620:6299;;3141:17;;3845;:20;:::i;:::-;620:6299;3221:17;620:6299;-1:-1:-1;;;3725:158:129;;-1:-1:-1;;;;;620:6299:129;;;3725:158;;;620:6299;;;;;;;;;;;;;;;;;;;;;;;;;;;;3725:158;;;;;;;;;;-1:-1:-1;3725:158:129;;;3681:3;620:6299;;;;;;3640:10;;620:6299;3221:17;620:6299;-1:-1:-1;;;620:6299:129;;3141:17;3725:158;620:6299;;;;;;;;-1:-1:-1;;;620:6299:129;;;;;;;3725:158;;;3141:17;3725:158;;;;;;;;;3141:17;3725:158;;;:::i;:::-;;;620:6299;;;;;;;:::i;:::-;3725:158;;;;;;-1:-1:-1;3725:158:129;;3652:27;;;;;;;;;;;;;-1:-1:-1;4034:3:129;4008:17;;620:6299;;4004:28;;;;;620:6299;;4163:22;620:6299;;;4061:20;620:6299;;;;;;4061:20;;:::i;:::-;620:6299;;;;;;;;;3813:10;;620:6299;;4163:19;;:22;:::i;:::-;620:6299;4053:146;;;;;;620:6299;;;-1:-1:-1;620:6299:129;;3221:17;620:6299;;;;;;;;;;;4053:146;;3725:158;4053:146;;620:6299;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4053:146;;;;;;;;;;620:6299;4053:146;;;4034:3;;620:6299;3992:10;;4053:146;-1:-1:-1;4053:146:129;;;:::i;:::-;;;;4004:28;;;;;;;;;;;;;;;-1:-1:-1;4473:19:129;;;;620:6299;;;;;;;4249:291;4297:3;4270:18;;620:6299;;4266:29;;;;;620:6299;;;;;;4432:23;620:6299;4473:22;620:6299;4325:21;620:6299;;;;;;4325:21;;:::i;:::-;620:6299;;;;;;;;;3813:10;;620:6299;;4432:20;;:23;:::i;:::-;620:6299;4473:19;;:22;:::i;:::-;620:6299;4316:213;;;;;620:6299;-1:-1:-1;620:6299:129;;4316:213;620:6299;3221:17;620:6299;;;;;;;;;4316:213;;3725:158;4316:213;;620:6299;;;;;;;;;;;;;3373:20;620:6299;;;;;;;;;4316:213;;;;;;;620:6299;4316:213;;;4297:3;;620:6299;4254:10;;4316:213;-1:-1:-1;4316:213:129;;;:::i;:::-;;;;4266:29;;;;;;;;;;;;;620:6299;4266:29;;;620:6299;;;;:::i;:::-;;3221:17;620:6299;;4473:19;620:6299;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;-1:-1:-1;;;;;620:6299:129;3221:17;620:6299;;;;;;;;;;3141:17;1914:299:77;;620:6299:129;;3221:17;1914:299:77;;620:6299:129;3249:19;1914:299:77;;620:6299:129;3344:18;1914:299:77;;620:6299:129;-1:-1:-1;3373:20:129;1914:299:77;;620:6299:129;3221:17;620:6299;3221:17;620:6299;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;3141:17;620:6299;3221:17;620:6299;1868:18:77;620:6299:129;;1819:413:77;;;620:6299:129;;;3221:17;620:6299;;;;;;;;1791:455:77;;;3725:158:129;1791:455:77;;620:6299:129;;;;;;;3221:17;620:6299;;;;;;;;;;;;;;;;-1:-1:-1;;;;;620:6299:129;;;;;;;;;3221:17;620:6299;;;;;;;;;3249:19;620:6299;;;4316:213;620:6299;;;3373:20;620:6299;3344:18;620:6299;;;4473:19;620:6299;;;;;;;;;:::i;:::-;;;;;;;;1791:455:77;620:6299:129;-1:-1:-1;1791:3:77;-1:-1:-1;;;;;620:6299:129;1791:455:77;;;;;;;-1:-1:-1;1791:455:77;;;4249:291:129;1134:55:80;620:6299:129;2881:68;1134:55:80;620:6299:129;;;;;;2881:68;;:::i;:::-;2994:20;620:6299;;2964:51;;-1:-1:-1;2964:51:129;;871:377:80:o;1791:455:77:-;;;;3141:17:129;1791:455:77;;3141:17:129;1791:455:77;;;;;;620:6299:129;1791:455:77;;;:::i;:::-;;;620:6299:129;;;;;1791:455:77;;;;;;;-1:-1:-1;1791:455:77;;3327:183:129;3186:21;;;-1:-1:-1;3489:21:129;;-1:-1:-1;3489:21:129;3344:127;3445:19;;;;;;620:6299;3416:55;;3344:127;;;637:632:63;759:17;-1:-1:-1;25444:17:70;-1:-1:-1;;;25444:17:70;;;25440:103;;637:632:63;25560:17:70;25569:8;26140:7;25560:17;;;25556:103;;637:632:63;25685:8:70;25676:17;;;25672:103;;637:632:63;25801:7:70;25792:16;;;25788:100;;637:632:63;25914:7:70;25905:16;;;25901:100;;637:632:63;26027:7:70;26018:16;;;26014:100;;637:632:63;26131:16:70;;26127:66;;637:632:63;26140:7:70;874:92:63;779:1;620:6299:129;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1055:104:6;;620:6299:129;;:::i;:::-;;;;;;;874:92:63;;;979:247;-1:-1:-1;;620:6299:129;;-1:-1:-1;;;1033:111:63;;;;620:6299:129;1033:111:63;620:6299:129;1194:10:63;;1190:21;;26140:7:70;979:247:63;;;;1190:21;1206:5;;637:632;:::o;26127:66:70:-;26177:1;620:6299:129;;;;26127:66:70;;26014:100;26027:7;26098:1;620:6299:129;;;;26014:100:70;;;25901;25914:7;25985:1;620:6299:129;;;;25901:100:70;;;25788;25801:7;25872:1;620:6299:129;;;;25788:100:70;;;25672:103;25685:8;25758:2;620:6299:129;;;;25672:103:70;;;25556;25569:8;25642:2;620:6299:129;;;;25556:103:70;;;25440;-1:-1:-1;25526:2:70;;-1:-1:-1;;;;620:6299:129;;25440:103:70;;6040:128:9;6109:4;-1:-1:-1;;;;;620:6299:129;6087:10:9;:27;6083:79;;6040:128::o;6083:79::-;6137:14;;;;;;;;1174:235:77;1365:20;;620:6299:129;;;;;;;;;;;;;1397:4:77;1365:37;1174:235;:::o;620:6299:129:-;;;-1:-1:-1;;;;;620:6299:129;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;5131:1376::-;5308:19;;620:6299;5337:18;;620:6299;-1:-1:-1;5304:84:129;;620:6299;5446:3;5419:18;;620:6299;5415:29;;;;;5486:19;;-1:-1:-1;;;;;620:6299:129;5486:22;;:19;;:22;:::i;:::-;620:6299;;;;;;;5512:21;:18;;;:21;:::i;:::-;620:6299;;5486:47;;;:115;;;5446:3;5465:163;;620:6299;;5403:10;;5465:163;5616:12;;;620:6299;5616:12;:::o;5486:115::-;5553:20;:23;:20;;;;;:23;:::i;:::-;620:6299;5579:22;:19;5553:20;5579:19;;;:22;:::i;:::-;620:6299;-1:-1:-1;5486:115:129;;5415:29;;5678:20;;;;;;620:6299;5678:20;5708:19;;;;;620:6299;-1:-1:-1;5674:86:129;;620:6299;5819:3;5791:19;;620:6299;5787:30;;;;;5859:20;;-1:-1:-1;;;;;620:6299:129;5859:23;;:20;;:23;:::i;:::-;620:6299;;;;;;;5886:22;:19;;;:22;:::i;:::-;620:6299;;5859:49;;;:122;;;5819:3;5838:170;;620:6299;;5775:10;;5838:170;5996:12;;;;;620:6299;5996:12;:::o;5859:122::-;5928:22;:25;:22;;;;;:25;:::i;:::-;620:6299;5957:24;:21;5928:22;5957:21;;;:24;:::i;:::-;620:6299;5928:53;;5859:122;;5787:30;;;;;6059:21;;;;;;620:6299;6090:20;6059:21;6090:20;;;;;620:6299;-1:-1:-1;6055:88:129;;620:6299;6203:3;6174:20;;620:6299;6170:31;;;;;6243:21;;-1:-1:-1;;;;;620:6299:129;6243:24;;:21;;:24;:::i;:::-;620:6299;;;;;;;6271:23;:20;;;:23;:::i;:::-;620:6299;;6243:51;;;:126;;;6203:3;6243:198;;;;6203:3;6222:246;;620:6299;;6158:10;;6243:198;6389:22;:25;:22;;;;;:25;:::i;:::-;620:6299;6417:24;:21;6389:22;6417:21;;;:24;:::i;:::-;620:6299;-1:-1:-1;6243:198:129;;:126;6314:23;:26;:23;;;;;:26;:::i;:::-;620:6299;6344:25;:22;6314:23;6344:22;;;:25;:::i;:::-;620:6299;6314:55;;6243:126;;6170:31;;;;;;620:6299;5131:1376;:::o;6055:88::-;6131:12;;;;620:6299;6131:12;:::o;5304:84::-;5376:12;;620:6299;5376:12;:::o",
    linkReferences: {},
    immutableReferences: {
      "2532": [
        {
          start: 2457,
          length: 32,
        },
      ],
      "2534": [
        {
          start: 2500,
          length: 32,
        },
      ],
      "2536": [
        {
          start: 2543,
          length: 32,
        },
      ],
      "3008": [
        {
          start: 7073,
          length: 32,
        },
      ],
      "54658": [
        {
          start: 1739,
          length: 32,
        },
      ],
      "54661": [
        {
          start: 1114,
          length: 32,
        },
        {
          start: 6504,
          length: 32,
        },
      ],
      "54663": [
        {
          start: 601,
          length: 32,
        },
        {
          start: 1170,
          length: 32,
        },
        {
          start: 1689,
          length: 32,
        },
        {
          start: 2391,
          length: 32,
        },
        {
          start: 6331,
          length: 32,
        },
      ],
    },
  },
  methodIdentifiers: {
    "ATTESTATION_SCHEMA()": "5bf2f20d",
    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
    "checkObligation((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)":
      "e6c9714d",
    "decodeObligationData(bytes)": "c93844be",
    "doObligation((address[],uint256[],address[],uint256[],address[],uint256[],uint256[],address))": "5fc86150",
    "doObligationFor((address[],uint256[],address[],uint256[],address[],uint256[],uint256[],address),address,address)":
      "68c0553a",
    "doObligationForRaw(bytes,uint64,address,address,bytes32)": "f0ffa185",
    "doObligationRaw(bytes,uint64,bytes32)": "b3b902d4",
    "getObligationData(bytes32)": "c6ec5070",
    "getSchema()": "6b122fe0",
    "isPayable()": "ce46e046",
    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
    "version()": "54fd4d50",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IEAS","name":"_eas","type":"address"},{"internalType":"contract ISchemaRegistry","name":"_schemaRegistry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessDenied","type":"error"},{"inputs":[],"name":"ArrayLengthMismatch","type":"error"},{"inputs":[],"name":"AttestationRevoked","type":"error"},{"inputs":[],"name":"DeadlineExpired","type":"error"},{"inputs":[],"name":"InsufficientValue","type":"error"},{"inputs":[],"name":"InvalidEAS","type":"error"},{"inputs":[],"name":"InvalidLength","type":"error"},{"inputs":[],"name":"InvalidSchema","type":"error"},{"inputs":[],"name":"NotFromThisAttester","type":"error"},{"inputs":[],"name":"NotPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"payment","type":"bytes32"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"BundleTransferred","type":"event"},{"inputs":[],"name":"ATTESTATION_SCHEMA","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"}],"name":"attest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"obligation","type":"tuple"},{"internalType":"bytes","name":"demand","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"checkObligation","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"decodeObligationData","outputs":[{"components":[{"internalType":"address[]","name":"erc20Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc20Amounts","type":"uint256[]"},{"internalType":"address[]","name":"erc721Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc721TokenIds","type":"uint256[]"},{"internalType":"address[]","name":"erc1155Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc1155TokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"erc1155Amounts","type":"uint256[]"},{"internalType":"address","name":"payee","type":"address"}],"internalType":"struct TokenBundlePaymentObligation.ObligationData","name":"","type":"tuple"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address[]","name":"erc20Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc20Amounts","type":"uint256[]"},{"internalType":"address[]","name":"erc721Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc721TokenIds","type":"uint256[]"},{"internalType":"address[]","name":"erc1155Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc1155TokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"erc1155Amounts","type":"uint256[]"},{"internalType":"address","name":"payee","type":"address"}],"internalType":"struct TokenBundlePaymentObligation.ObligationData","name":"data","type":"tuple"}],"name":"doObligation","outputs":[{"internalType":"bytes32","name":"uid_","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address[]","name":"erc20Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc20Amounts","type":"uint256[]"},{"internalType":"address[]","name":"erc721Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc721TokenIds","type":"uint256[]"},{"internalType":"address[]","name":"erc1155Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc1155TokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"erc1155Amounts","type":"uint256[]"},{"internalType":"address","name":"payee","type":"address"}],"internalType":"struct TokenBundlePaymentObligation.ObligationData","name":"data","type":"tuple"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"recipient","type":"address"}],"name":"doObligationFor","outputs":[{"internalType":"bytes32","name":"uid_","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes32","name":"refUID","type":"bytes32"}],"name":"doObligationForRaw","outputs":[{"internalType":"bytes32","name":"uid_","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"}],"name":"doObligationRaw","outputs":[{"internalType":"bytes32","name":"uid_","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"uid","type":"bytes32"}],"name":"getObligationData","outputs":[{"components":[{"internalType":"address[]","name":"erc20Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc20Amounts","type":"uint256[]"},{"internalType":"address[]","name":"erc721Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc721TokenIds","type":"uint256[]"},{"internalType":"address[]","name":"erc1155Tokens","type":"address[]"},{"internalType":"uint256[]","name":"erc1155TokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"erc1155Amounts","type":"uint256[]"},{"internalType":"address","name":"payee","type":"address"}],"internalType":"struct TokenBundlePaymentObligation.ObligationData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSchema","outputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"contract ISchemaResolver","name":"resolver","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"string","name":"schema","type":"string"}],"internalType":"struct SchemaRecord","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPayable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"multiAttest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"multiRevoke","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"}],"name":"revoke","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":{"params":{"attestation":"The new attestation."},"returns":{"_0":"Whether the attestation is valid."}},"isPayable()":{"returns":{"_0":"Whether the resolver supports ETH transfers."}},"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":{"params":{"attestations":"The new attestations.","values":"Explicit ETH amounts which were sent with each attestation."},"returns":{"_0":"Whether all the attestations are valid."}},"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":{"params":{"attestations":"The existing attestations to be revoked.","values":"Explicit ETH amounts which were sent with each revocation."},"returns":{"_0":"Whether the attestations can be revoked."}},"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":{"params":{"attestation":"The existing attestation to be revoked."},"returns":{"_0":"Whether the attestation can be revoked."}},"version()":{"returns":{"_0":"Semver contract version as a string."}}},"version":1},"userdoc":{"kind":"user","methods":{"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":{"notice":"Processes an attestation and verifies whether it\'s valid."},"isPayable()":{"notice":"Checks if the resolver can be sent ETH."},"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":{"notice":"Processes multiple attestations and verifies whether they are valid."},"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":{"notice":"Processes revocation of multiple attestation and verifies they can be revoked."},"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":{"notice":"Processes an attestation revocation and verifies if it can be revoked."},"version()":{"notice":"Returns the full semver contract version."}},"version":1}},"settings":{"compilationTarget":{"src/obligations/TokenBundlePaymentObligation.sol":"TokenBundlePaymentObligation"},"evmVersion":"cancun","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@eas/=lib/eas-contracts/contracts/",":@openzeppelin/=lib/openzeppelin-contracts/",":@src/=src/",":@test/=test/",":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",":eas-contracts/=lib/eas-contracts/contracts/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/"],"viaIR":true},"sources":{"lib/eas-contracts/contracts/Common.sol":{"keccak256":"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685","license":"MIT","urls":["bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d","dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"]},"lib/eas-contracts/contracts/IEAS.sol":{"keccak256":"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12","license":"MIT","urls":["bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880","dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR"]},"lib/eas-contracts/contracts/ISchemaRegistry.sol":{"keccak256":"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754","license":"MIT","urls":["bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158","dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz"]},"lib/eas-contracts/contracts/ISemver.sol":{"keccak256":"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18","license":"MIT","urls":["bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0","dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6"]},"lib/eas-contracts/contracts/Semver.sol":{"keccak256":"0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9","license":"MIT","urls":["bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808","dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh"]},"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol":{"keccak256":"0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb","license":"MIT","urls":["bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f","dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR"]},"lib/eas-contracts/contracts/resolver/SchemaResolver.sol":{"keccak256":"0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983","license":"MIT","urls":["bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828","dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q"]},"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol":{"keccak256":"0xb6503f663515b6713adb63eb2acf19401d8f73af39c7194f7dc3d8249c8643c7","license":"MIT","urls":["bzz-raw://abdedc1b84ae26c1a151825e9f785fa8187ead91be438671fd18c7a41958b746","dweb:/ipfs/QmdYFTdzQbrWJsJgH8mX1rPTt8V7DZFAXxjxNTaY6LEa6b"]},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","license":"MIT","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"]},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de","license":"MIT","urls":["bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827","dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA"]},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c","license":"MIT","urls":["bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4","dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2","license":"MIT","urls":["bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440","dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"]},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c","license":"MIT","urls":["bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e","dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c","license":"MIT","urls":["bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966","dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"]},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481","license":"MIT","urls":["bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb","dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"]},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0","license":"MIT","urls":["bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426","dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"]},"src/ArbiterUtils.sol":{"keccak256":"0x331f8ec571b787c47c25bffd13ae354ac37b737e8776b04330895bce0eb3f7ab","license":"UNLICENSED","urls":["bzz-raw://acec88f2f4780f0ce633ce968c34aa5ecee60a6462ec6d2c972e8712c05aca12","dweb:/ipfs/QmXcTvFKsyqHKxNBoAM46NGwuzj8ASuCPbCde4idcQbqit"]},"src/BaseAttester.sol":{"keccak256":"0x3f26ee96b6ef02860fafb1c2c97399fc3aa8e183d32063a8736b3761ecbe25aa","license":"UNLICENSED","urls":["bzz-raw://c6568d73465cc18236f309bd56fae4bbd541ca3eb8cb35c481318279c956d084","dweb:/ipfs/QmWJfeD2KPjU5G3gKcbKzMf6cnDUtkE4kE7ANne43pjVAa"]},"src/BaseObligationNew.sol":{"keccak256":"0xb6f62aaa01bbb8c7d87a4437b466e5e95e9d6086626b780f367d3071ee20e8be","license":"UNLICENSED","urls":["bzz-raw://9216c00ddf06a890e591fc21969211be2b7a98aba8615021dd26352af5f472bc","dweb:/ipfs/Qmbc2MAT1DaT2e5Ue3PzjJmQRKb2CMNcB7YCPdjHS2Fjtc"]},"src/IArbiter.sol":{"keccak256":"0x5e37834970553135dbd3f5cdf4aa9cd8dc20f57a8642cee85366b211b1d111ab","license":"UNLICENSED","urls":["bzz-raw://b57275fcd9c40acc33af244aa3d19b62bb7291a9b1b3cb3592ecedb0202d1038","dweb:/ipfs/Qmd9YTFnardXdksfuUQkm2TcxREaFNG2j4MazYmaui5Bff"]},"src/obligations/TokenBundlePaymentObligation.sol":{"keccak256":"0xe1b3b3fe28d357ed0b80818f69c28dd9ab3002783559208aea13f8f3667ecde4","license":"UNLICENSED","urls":["bzz-raw://8e6cca29c7a742cbf94d92b8ce9f01a3f8d2ee07816997bb6417f1987fff5258","dweb:/ipfs/QmbEaXmYwPZ1esj6hLdHSr4Evrx7kxynetm63yMpRKi3Gd"]}},"version":1}',
  metadata: {
    compiler: {
      version: "0.8.27+commit.40a35a09",
    },
    language: "Solidity",
    output: {
      abi: [
        {
          inputs: [
            {
              internalType: "contract IEAS",
              name: "_eas",
              type: "address",
            },
            {
              internalType: "contract ISchemaRegistry",
              name: "_schemaRegistry",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          type: "error",
          name: "AccessDenied",
        },
        {
          inputs: [],
          type: "error",
          name: "ArrayLengthMismatch",
        },
        {
          inputs: [],
          type: "error",
          name: "AttestationRevoked",
        },
        {
          inputs: [],
          type: "error",
          name: "DeadlineExpired",
        },
        {
          inputs: [],
          type: "error",
          name: "InsufficientValue",
        },
        {
          inputs: [],
          type: "error",
          name: "InvalidEAS",
        },
        {
          inputs: [],
          type: "error",
          name: "InvalidLength",
        },
        {
          inputs: [],
          type: "error",
          name: "InvalidSchema",
        },
        {
          inputs: [],
          type: "error",
          name: "NotFromThisAttester",
        },
        {
          inputs: [],
          type: "error",
          name: "NotPayable",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "payment",
              type: "bytes32",
              indexed: true,
            },
            {
              internalType: "address",
              name: "from",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
              indexed: true,
            },
          ],
          type: "event",
          name: "BundleTransferred",
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "ATTESTATION_SCHEMA",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation",
              name: "attestation",
              type: "tuple",
              components: [
                {
                  internalType: "bytes32",
                  name: "uid",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "schema",
                  type: "bytes32",
                },
                {
                  internalType: "uint64",
                  name: "time",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                {
                  internalType: "bytes32",
                  name: "refUID",
                  type: "bytes32",
                },
                {
                  internalType: "address",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "attester",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "revocable",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
              ],
            },
          ],
          stateMutability: "payable",
          type: "function",
          name: "attest",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation",
              name: "obligation",
              type: "tuple",
              components: [
                {
                  internalType: "bytes32",
                  name: "uid",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "schema",
                  type: "bytes32",
                },
                {
                  internalType: "uint64",
                  name: "time",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                {
                  internalType: "bytes32",
                  name: "refUID",
                  type: "bytes32",
                },
                {
                  internalType: "address",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "attester",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "revocable",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
              ],
            },
            {
              internalType: "bytes",
              name: "demand",
              type: "bytes",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "checkObligation",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          stateMutability: "pure",
          type: "function",
          name: "decodeObligationData",
          outputs: [
            {
              internalType: "struct TokenBundlePaymentObligation.ObligationData",
              name: "",
              type: "tuple",
              components: [
                {
                  internalType: "address[]",
                  name: "erc20Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc20Amounts",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "erc721Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc721TokenIds",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "erc1155Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc1155TokenIds",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc1155Amounts",
                  type: "uint256[]",
                },
                {
                  internalType: "address",
                  name: "payee",
                  type: "address",
                },
              ],
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "struct TokenBundlePaymentObligation.ObligationData",
              name: "data",
              type: "tuple",
              components: [
                {
                  internalType: "address[]",
                  name: "erc20Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc20Amounts",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "erc721Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc721TokenIds",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "erc1155Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc1155TokenIds",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc1155Amounts",
                  type: "uint256[]",
                },
                {
                  internalType: "address",
                  name: "payee",
                  type: "address",
                },
              ],
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "doObligation",
          outputs: [
            {
              internalType: "bytes32",
              name: "uid_",
              type: "bytes32",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "struct TokenBundlePaymentObligation.ObligationData",
              name: "data",
              type: "tuple",
              components: [
                {
                  internalType: "address[]",
                  name: "erc20Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc20Amounts",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "erc721Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc721TokenIds",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "erc1155Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc1155TokenIds",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc1155Amounts",
                  type: "uint256[]",
                },
                {
                  internalType: "address",
                  name: "payee",
                  type: "address",
                },
              ],
            },
            {
              internalType: "address",
              name: "payer",
              type: "address",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "doObligationFor",
          outputs: [
            {
              internalType: "bytes32",
              name: "uid_",
              type: "bytes32",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "uint64",
              name: "expirationTime",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "payer",
              type: "address",
            },
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "refUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "doObligationForRaw",
          outputs: [
            {
              internalType: "bytes32",
              name: "uid_",
              type: "bytes32",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "uint64",
              name: "expirationTime",
              type: "uint64",
            },
            {
              internalType: "bytes32",
              name: "refUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "doObligationRaw",
          outputs: [
            {
              internalType: "bytes32",
              name: "uid_",
              type: "bytes32",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "uid",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "getObligationData",
          outputs: [
            {
              internalType: "struct TokenBundlePaymentObligation.ObligationData",
              name: "",
              type: "tuple",
              components: [
                {
                  internalType: "address[]",
                  name: "erc20Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc20Amounts",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "erc721Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc721TokenIds",
                  type: "uint256[]",
                },
                {
                  internalType: "address[]",
                  name: "erc1155Tokens",
                  type: "address[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc1155TokenIds",
                  type: "uint256[]",
                },
                {
                  internalType: "uint256[]",
                  name: "erc1155Amounts",
                  type: "uint256[]",
                },
                {
                  internalType: "address",
                  name: "payee",
                  type: "address",
                },
              ],
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "getSchema",
          outputs: [
            {
              internalType: "struct SchemaRecord",
              name: "",
              type: "tuple",
              components: [
                {
                  internalType: "bytes32",
                  name: "uid",
                  type: "bytes32",
                },
                {
                  internalType: "contract ISchemaResolver",
                  name: "resolver",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "revocable",
                  type: "bool",
                },
                {
                  internalType: "string",
                  name: "schema",
                  type: "string",
                },
              ],
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "pure",
          type: "function",
          name: "isPayable",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation[]",
              name: "attestations",
              type: "tuple[]",
              components: [
                {
                  internalType: "bytes32",
                  name: "uid",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "schema",
                  type: "bytes32",
                },
                {
                  internalType: "uint64",
                  name: "time",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                {
                  internalType: "bytes32",
                  name: "refUID",
                  type: "bytes32",
                },
                {
                  internalType: "address",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "attester",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "revocable",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
              ],
            },
            {
              internalType: "uint256[]",
              name: "values",
              type: "uint256[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
          name: "multiAttest",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation[]",
              name: "attestations",
              type: "tuple[]",
              components: [
                {
                  internalType: "bytes32",
                  name: "uid",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "schema",
                  type: "bytes32",
                },
                {
                  internalType: "uint64",
                  name: "time",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                {
                  internalType: "bytes32",
                  name: "refUID",
                  type: "bytes32",
                },
                {
                  internalType: "address",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "attester",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "revocable",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
              ],
            },
            {
              internalType: "uint256[]",
              name: "values",
              type: "uint256[]",
            },
          ],
          stateMutability: "payable",
          type: "function",
          name: "multiRevoke",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation",
              name: "attestation",
              type: "tuple",
              components: [
                {
                  internalType: "bytes32",
                  name: "uid",
                  type: "bytes32",
                },
                {
                  internalType: "bytes32",
                  name: "schema",
                  type: "bytes32",
                },
                {
                  internalType: "uint64",
                  name: "time",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                {
                  internalType: "bytes32",
                  name: "refUID",
                  type: "bytes32",
                },
                {
                  internalType: "address",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "attester",
                  type: "address",
                },
                {
                  internalType: "bool",
                  name: "revocable",
                  type: "bool",
                },
                {
                  internalType: "bytes",
                  name: "data",
                  type: "bytes",
                },
              ],
            },
          ],
          stateMutability: "payable",
          type: "function",
          name: "revoke",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "payable",
          type: "receive",
        },
      ],
      devdoc: {
        kind: "dev",
        methods: {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            params: {
              attestation: "The new attestation.",
            },
            returns: {
              _0: "Whether the attestation is valid.",
            },
          },
          "isPayable()": {
            returns: {
              _0: "Whether the resolver supports ETH transfers.",
            },
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            params: {
              attestations: "The new attestations.",
              values: "Explicit ETH amounts which were sent with each attestation.",
            },
            returns: {
              _0: "Whether all the attestations are valid.",
            },
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            params: {
              attestations: "The existing attestations to be revoked.",
              values: "Explicit ETH amounts which were sent with each revocation.",
            },
            returns: {
              _0: "Whether the attestations can be revoked.",
            },
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            params: {
              attestation: "The existing attestation to be revoked.",
            },
            returns: {
              _0: "Whether the attestation can be revoked.",
            },
          },
          "version()": {
            returns: {
              _0: "Semver contract version as a string.",
            },
          },
        },
        version: 1,
      },
      userdoc: {
        kind: "user",
        methods: {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            notice: "Processes an attestation and verifies whether it's valid.",
          },
          "isPayable()": {
            notice: "Checks if the resolver can be sent ETH.",
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            notice: "Processes multiple attestations and verifies whether they are valid.",
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            notice: "Processes revocation of multiple attestation and verifies they can be revoked.",
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            notice: "Processes an attestation revocation and verifies if it can be revoked.",
          },
          "version()": {
            notice: "Returns the full semver contract version.",
          },
        },
        version: 1,
      },
    },
    settings: {
      remappings: [
        "@eas/=lib/eas-contracts/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@src/=src/",
        "@test/=test/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/eas-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ],
      optimizer: {
        enabled: true,
        runs: 200,
      },
      metadata: {
        bytecodeHash: "ipfs",
      },
      compilationTarget: {
        "src/obligations/TokenBundlePaymentObligation.sol": "TokenBundlePaymentObligation",
      },
      evmVersion: "cancun",
      libraries: {},
      viaIR: true,
    },
    sources: {
      "lib/eas-contracts/contracts/Common.sol": {
        keccak256: "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        urls: [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/IEAS.sol": {
        keccak256: "0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12",
        urls: [
          "bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880",
          "dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
        keccak256: "0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754",
        urls: [
          "bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158",
          "dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/ISemver.sol": {
        keccak256: "0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18",
        urls: [
          "bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0",
          "dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/Semver.sol": {
        keccak256: "0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9",
        urls: [
          "bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808",
          "dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        keccak256: "0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb",
        urls: [
          "bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f",
          "dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
        keccak256: "0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983",
        urls: [
          "bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828",
          "dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        keccak256: "0xb6503f663515b6713adb63eb2acf19401d8f73af39c7194f7dc3d8249c8643c7",
        urls: [
          "bzz-raw://abdedc1b84ae26c1a151825e9f785fa8187ead91be438671fd18c7a41958b746",
          "dweb:/ipfs/QmdYFTdzQbrWJsJgH8mX1rPTt8V7DZFAXxjxNTaY6LEa6b",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        keccak256: "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        urls: [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        keccak256: "0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de",
        urls: [
          "bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827",
          "dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        keccak256: "0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c",
        urls: [
          "bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4",
          "dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        keccak256: "0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2",
        urls: [
          "bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440",
          "dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        keccak256: "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        urls: [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        keccak256: "0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c",
        urls: [
          "bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966",
          "dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        keccak256: "0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481",
        urls: [
          "bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb",
          "dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        keccak256: "0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0",
        urls: [
          "bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426",
          "dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY",
        ],
        license: "MIT",
      },
      "src/ArbiterUtils.sol": {
        keccak256: "0x331f8ec571b787c47c25bffd13ae354ac37b737e8776b04330895bce0eb3f7ab",
        urls: [
          "bzz-raw://acec88f2f4780f0ce633ce968c34aa5ecee60a6462ec6d2c972e8712c05aca12",
          "dweb:/ipfs/QmXcTvFKsyqHKxNBoAM46NGwuzj8ASuCPbCde4idcQbqit",
        ],
        license: "UNLICENSED",
      },
      "src/BaseAttester.sol": {
        keccak256: "0x3f26ee96b6ef02860fafb1c2c97399fc3aa8e183d32063a8736b3761ecbe25aa",
        urls: [
          "bzz-raw://c6568d73465cc18236f309bd56fae4bbd541ca3eb8cb35c481318279c956d084",
          "dweb:/ipfs/QmWJfeD2KPjU5G3gKcbKzMf6cnDUtkE4kE7ANne43pjVAa",
        ],
        license: "UNLICENSED",
      },
      "src/BaseObligationNew.sol": {
        keccak256: "0xb6f62aaa01bbb8c7d87a4437b466e5e95e9d6086626b780f367d3071ee20e8be",
        urls: [
          "bzz-raw://9216c00ddf06a890e591fc21969211be2b7a98aba8615021dd26352af5f472bc",
          "dweb:/ipfs/Qmbc2MAT1DaT2e5Ue3PzjJmQRKb2CMNcB7YCPdjHS2Fjtc",
        ],
        license: "UNLICENSED",
      },
      "src/IArbiter.sol": {
        keccak256: "0x5e37834970553135dbd3f5cdf4aa9cd8dc20f57a8642cee85366b211b1d111ab",
        urls: [
          "bzz-raw://b57275fcd9c40acc33af244aa3d19b62bb7291a9b1b3cb3592ecedb0202d1038",
          "dweb:/ipfs/Qmd9YTFnardXdksfuUQkm2TcxREaFNG2j4MazYmaui5Bff",
        ],
        license: "UNLICENSED",
      },
      "src/obligations/TokenBundlePaymentObligation.sol": {
        keccak256: "0xe1b3b3fe28d357ed0b80818f69c28dd9ab3002783559208aea13f8f3667ecde4",
        urls: [
          "bzz-raw://8e6cca29c7a742cbf94d92b8ce9f01a3f8d2ee07816997bb6417f1987fff5258",
          "dweb:/ipfs/QmbEaXmYwPZ1esj6hLdHSr4Evrx7kxynetm63yMpRKi3Gd",
        ],
        license: "UNLICENSED",
      },
    },
    version: 1,
  },
  id: 129,
} as const;
