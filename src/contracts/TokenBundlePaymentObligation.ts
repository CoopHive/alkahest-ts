export const abi = {
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_eas",
          "type": "address",
          "internalType": "contract IEAS"
        },
        {
          "name": "_schemaRegistry",
          "type": "address",
          "internalType": "contract ISchemaRegistry"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "ATTESTATION_SCHEMA",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "checkStatement",
      "inputs": [
        {
          "name": "statement",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "demand",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSchema",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SchemaRecord",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "resolver",
              "type": "address",
              "internalType": "contract ISchemaResolver"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "schema",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStatement",
      "inputs": [
        {
          "name": "uid",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isPayable",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "makeStatement",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct TokenBundlePaymentObligation.StatementData",
          "components": [
            {
              "name": "erc20Tokens",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "erc20Amounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "erc721Tokens",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "erc721TokenIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "erc1155Tokens",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "erc1155TokenIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "erc1155Amounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "payee",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "makeStatementFor",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct TokenBundlePaymentObligation.StatementData",
          "components": [
            {
              "name": "erc20Tokens",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "erc20Amounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "erc721Tokens",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "erc721TokenIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "erc1155Tokens",
              "type": "address[]",
              "internalType": "address[]"
            },
            {
              "name": "erc1155TokenIds",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "erc1155Amounts",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "payee",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "payer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "multiAttest",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multiRevoke",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "onERC1155BatchReceived",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "onERC1155Received",
      "inputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "BundleTransferred",
      "inputs": [
        {
          "name": "payment",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessDenied",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AttestationRevoked",
      "inputs": []
    },
    {
      "type": "error",
      "name": "DeadlineExpired",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientValue",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidEAS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSchema",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidTransfer",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotFromStatement",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotPayable",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610160806040523461027b57604081611e5b803803809161002082856102b5565b83398101031261027b5780516001600160a01b0381169182820361027b5760200151916001600160a01b03831680840361027b5760405160e081016001600160401b038111828210176102a15760405260bc815260208101927f616464726573735b5d206572633230546f6b656e732c2075696e743235365b5d84527f206572633230416d6f756e74732c20616464726573735b5d206572633732315460408301527f6f6b656e732c2075696e743235365b5d20657263373231546f6b656e4964732c60608301527f20616464726573735b5d2065726331313535546f6b656e732c2075696e74323560808301527f365b5d2065726331313535546f6b656e4964732c2075696e743235365b5d206560a08301527f726331313535416d6f756e74732c20616464726573732070617965650000000060c08301526001608052600360a0525f60c05215610292576084948460209560e05261012052610100525f604051958680958194630c1af44f60e31b8352606060048401525180918160648501528484015e818101830184905230602483015260016044830152601f01601f191681010301925af1908115610287575f91610251575b5061014052604051611b8290816102d9823960805181610766015260a05181610791015260c051816107bc015260e05181611b0d015261010051816103490152610120518181816104f70152611584015261014051818181610317015281816105300152818161072401528181610a0801526114d70152f35b90506020813d60201161027f575b8161026c602093836102b5565b8101031261027b57515f6101d8565b5f80fd5b3d915061025f565b6040513d5f823e3d90fd5b6341bc07ff60e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b601f909101601f19168101906001600160401b038211908210176102a15760405256fe6080806040526004361015610029575b50361561001a575f80fd5b631574f9f360e01b5f5260045ffd5b5f3560e01c90816301ffc9a714610af0575080631272ff8b146108f05780631d6f87dd146108945780634f4a9b191461084957806354fd4d50146107475780635bf2f20d1461070d5780635cc02d2f1461047d5780636b122fe0146102d857806388e5b2d91461025e57806391db0b7e14610235578063bc197c811461019d578063ce46e04614610183578063e49617e114610166578063e60c3505146101345763f23a6e61146100da575f61000f565b346101305760a0366003190112610130576100f3610bbc565b506100fc610ba6565b506084356001600160401b0381116101305761011c903690600401610ceb565b505060405163f23a6e6160e01b8152602090f35b5f80fd5b602061015260e061014436610d18565b61014c611b0b565b0161101f565b6040516001600160a01b0390911630148152f35b61016f36610d18565b50610178611b0b565b602060405160018152f35b34610130575f3660031901126101305760206040515f8152f35b346101305760a0366003190112610130576101b6610bbc565b506101bf610ba6565b506044356001600160401b038111610130576101df903690600401610c6b565b50506064356001600160401b03811161013057610200903690600401610c6b565b50506084356001600160401b03811161013057610221903690600401610ceb565b505060405163bc197c8160e01b8152602090f35b602061025461024336610c9b565b9261024f929192611b0b565b6116fc565b6040519015158152f35b61026736610c9b565b610272929192611b0b565b8082036102c9575f90345b83831061028f57602060405160018152f35b61029a8383876116b5565b358181116102ba576001916102b085878a6116d9565b500392019161027d565b63044044a560e21b5f5260045ffd5b63251f56a160e21b5f5260045ffd5b34610130575f366003190112610130576060806040516102f781610b56565b5f81525f60208201525f604082015201526040516351753e3760e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa8015610472575f906103c2575b6060906103be604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a0830190610c47565b0390f35b503d805f833e6103d28183610b71565b810190602081830312610130578051906001600160401b0382116101305701608081830312610130576040519061040882610b56565b8051825260208101516001600160a01b038116810361013057602083015261043260408201611672565b60408301526060810151906001600160401b038211610130570182601f82011215610130576060928160206104699351910161167f565b82820152610378565b6040513d5f823e3d90fd5b3461013057602036600319011261013057606061012060405161049f81610b26565b5f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f61010082015201526040516328c44a9960e21b815260043560048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610472575f91610608575b506020810180517f0000000000000000000000000000000000000000000000000000000000000000036105f9576103be61012060405193849360208552815160208601525160408501526001600160401b0360408201511660608501526001600160401b0360608201511660808501526001600160401b0360808201511660a085015260a081015160c085015260018060a01b0360c08201511660e085015260018060a01b0360e082015116610100850152610100810151151582850152015161014080840152610160830190610c47565b63295d5f3960e01b5f5260045ffd5b90503d805f833e6106198183610b71565b810190602081830312610130578051906001600160401b03821161013057019061014082820312610130576040519161065183610b26565b805183526020810151602084015261066b6040820161165e565b604084015261067c6060820161165e565b606084015261068d6080820161165e565b608084015260a081015160a08401526106a860c08201610d63565b60c08401526106b960e08201610d63565b60e08401526106cb6101008201611672565b610100840152610120810151906001600160401b03821161013057019080601f830112156101305781516107019260200161167f565b61012082015281610527565b34610130575f3660031901126101305760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610130575f366003190112610130576103be6020610835600161078a7f000000000000000000000000000000000000000000000000000000000000000061199e565b81846107b57f000000000000000000000000000000000000000000000000000000000000000061199e565b81806107e07f000000000000000000000000000000000000000000000000000000000000000061199e565b9260405199878b985191829101848a015e870190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e01015f838201520301601f198101835282610b71565b604051918291602083526020830190610c47565b34610130576020366003190112610130576004356001600160401b0381116101305761010060031982360301126101305761088c60209133903390600401611033565b604051908152f35b34610130576060366003190112610130576004356001600160401b038111610130576101006003198236030112610130576108cd610ba6565b906044356001600160a01b03811681036101305760209261088c92600401611033565b34610130576060366003190112610130576004356001600160401b038111610130576101406003198236030112610130576040519061092e82610b26565b8060040135825260208201906024810135825261094d60448201610b92565b604084015261095e60648201610b92565b6060840190815261097160848301610b92565b916080850192835260a481013560a086015261098f60c48201610bd2565b60c08601526109a060e48201610bd2565b60e08601526101048101358015158103610130576101008601526101248101356001600160401b038111610130576101209160046109e19236920101610c01565b94019384526024356001600160401b03811161013057610a05903690600401610c01565b927f0000000000000000000000000000000000000000000000000000000000000000905103610ae157516001600160401b03168015159081610ad7575b50610ac857516001600160401b0316610ab957610a7c610a6d60209351848082518301019101610e39565b91838082518301019101610e39565b610a868183611782565b9182610a99575b50506040519015158152f35b60e0908101519101516001600160a01b0390811691161490508280610a8d565b637b6227e960e11b5f5260045ffd5b631ab7da6b60e01b5f5260045ffd5b9050421184610a42565b635f9bd90760e11b5f5260045ffd5b34610130576020366003190112610130576004359063ffffffff60e01b821680920361013057602091630271189760e51b148152f35b61014081019081106001600160401b03821117610b4257604052565b634e487b7160e01b5f52604160045260245ffd5b608081019081106001600160401b03821117610b4257604052565b90601f801991011681019081106001600160401b03821117610b4257604052565b35906001600160401b038216820361013057565b602435906001600160a01b038216820361013057565b600435906001600160a01b038216820361013057565b35906001600160a01b038216820361013057565b6001600160401b038111610b4257601f01601f191660200190565b81601f8201121561013057803590610c1882610be6565b92610c266040519485610b71565b8284526020838301011161013057815f926020809301838601378301015290565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610130578235916001600160401b038311610130576020808501948460051b01011161013057565b6040600319820112610130576004356001600160401b0381116101305781610cc591600401610c6b565b92909291602435906001600160401b03821161013057610ce791600401610c6b565b9091565b9181601f84011215610130578235916001600160401b038311610130576020838186019501011161013057565b602060031982011261013057600435906001600160401b038211610130576101409082900360031901126101305760040190565b6001600160401b038111610b425760051b60200190565b51906001600160a01b038216820361013057565b9080601f83011215610130578151610d8e81610d4c565b92610d9c6040519485610b71565b81845260208085019260051b82010192831161013057602001905b828210610dc45750505090565b60208091610dd184610d63565b815201910190610db7565b9080601f83011215610130578151610df381610d4c565b92610e016040519485610b71565b81845260208085019260051b82010192831161013057602001905b828210610e295750505090565b8151815260209182019101610e1c565b602081830312610130578051906001600160401b038211610130570161010081830312610130576040519161010083018381106001600160401b03821117610b425760405281516001600160401b0381116101305781610e9a918401610d77565b835260208201516001600160401b0381116101305781610ebb918401610ddc565b602084015260408201516001600160401b0381116101305781610edf918401610d77565b604084015260608201516001600160401b0381116101305781610f03918401610ddc565b606084015260808201516001600160401b0381116101305781610f27918401610d77565b608084015260a08201516001600160401b0381116101305781610f4b918401610ddc565b60a084015260c0820151916001600160401b03831161013057610f7560e092610f80948301610ddc565b60c085015201610d63565b60e082015290565b9035601e19823603018112156101305701602081359101916001600160401b038211610130578160051b3603831361013057565b916020908281520191905f5b818110610fd55750505090565b909192602080600192838060a01b03610fed88610bd2565b168152019401929101610fc8565b81835290916001600160fb1b0383116101305760209260051b809284830137010190565b356001600160a01b03811681036101305790565b9261103e8480611969565b60208601915061104e8287611969565b9190500361162b5760408501936110658587611969565b6060880191506110758289611969565b9190500361162b57608087019561108c8789611969565b60a08a01915061109c828b611969565b9190501480159061163a575b61162b57949660e0890195905f5b8a6110c18180611969565b90508210156111b95760208a8a835f611116876111108f61110a836111036110fe6110ef8a6111519f611969565b6001600160a01b0394916116b5565b61101f565b169761101f565b95611969565b906116b5565b6040516323b872dd60e01b81526001600160a01b03958616600482015292909416602483015292356044820152938492839182906064820190565b03925af1908115610472575f91611180575b5015611171576001016110b6565b632f35253160e01b5f5260045ffd5b90506020813d82116111b1575b8161119a60209383610b71565b81010312610130576111ab90611672565b5f611163565b3d915061118d565b5050909193979492945f5b8a6111cf8782611969565b90508210156112665790816111ff826111108b6111f9838f986110fe8f6110ef9061110393611969565b94611969565b35833b15610130576040516323b872dd60e01b81526001600160a01b038d811660048301529290921660248301526044820152915f908390606490829084905af191821561047257600192611256575b50016111c4565b5f61126091610b71565b5f61124f565b505091959497909296935f9760c08b019560018060a01b0316985b61128b868d611969565b90508110156113445780888a6112d28f946111108c6112cb836111108f826112bd6110fe6110ef8f946112c495611969565b169961101f565b978b611969565b3597611969565b35823b15610130578d5f809460c4936040519889968795637921219560e11b8752600487015260018060a01b031660248601526044850152606484015260a060848401528160a48401525af191821561047257600192611334575b5001611281565b5f61133e91610b71565b5f61132d565b50949390959992989796919760405196879660208801602090526113688680610f88565b60408a0161010090526101408a019061138092610fbc565b9061138b9087610f88565b898303603f190160608b01526113a19291610ffb565b906113ac9086610f88565b888303603f190160808a01526113c29291610fbc565b906113cd9085610f88565b878303603f190160a08901526113e39291610ffb565b906113ee9084610f88565b868303603f190160c08801526114049291610fbc565b9061140f9083610f88565b858303603f190160e08701526114259291610ffb565b9161142f91610f88565b838303603f19016101008501526114469291610ffb565b6001600160a01b0361145788610bd2565b1661012083015203601f19810182526114709082610b71565b6040519260c084018481106001600160401b03821117610b425760405260018060a01b031683525f6020840152600160408401525f606084015260808301525f60a083015260405160408101908082106001600160401b03831117610b42576020916040527f000000000000000000000000000000000000000000000000000000000000000081528181019384526040518094819263f17325e760e01b8352846004840152516024830152516040604483015260018060a01b0381511660648301526001600160401b03848201511660848301526040810151151560a4830152606081015160c483015260a0611576608083015160c060e4860152610124850190610c47565b91015161010483015203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1918215610472575f926115f7575b5081936115cf60018060a01b039161101f565b16917ff499ed54dafb173ee5c0ac81d260b37d4ceba55eb489caab761ba8a1bc663a345f80a4565b9091506020813d602011611623575b8161161360209383610b71565b810103126101305751905f6115bc565b3d9150611606565b63512509d360e11b5f5260045ffd5b50611645888a611969565b905061165460c08b018b611969565b91905014156110a8565b51906001600160401b038216820361013057565b5190811515820361013057565b92919261168b82610be6565b916116996040519384610b71565b829481845281830111610130578281602093845f96015e010152565b91908110156116c55760051b0190565b634e487b7160e01b5f52603260045260245ffd5b91908110156116c55760051b8101359061013e1981360301821215610130570190565b9192908181036102c9575f91345b82841061171c57505050505050600190565b6117278483886116b5565b358181116102ba5761173a8585886116d9565b30906001600160a01b03906117519060e00161101f565b1603611763576001910393019261170a565b505050505050505f90565b80518210156116c55760209160051b010190565b80515182515111611963575f5b8251518110156118065781516001600160a01b03906117af90839061176e565b511660018060a01b036117c383865161176e565b5116148015906117e1575b6117da5760010161178f565b5050505f90565b506117f081602084015161176e565b516117ff82602086015161176e565b51116117ce565b50604081019182515160408201908151511161195b575f5b8151518110156118985784516001600160a01b039061183e90839061176e565b511660018060a01b0361185283855161176e565b511614801590611872575b6118695760010161181e565b50505050505f90565b5061188181606086015161176e565b5161189082606086015161176e565b51141561185d565b5050915060808101918251519260808201938451511161195b575f5b8451518110156119515781516001600160a01b03906118d490839061176e565b511660018060a01b036118e883885161176e565b51161480159061192b575b8015611906575b611869576001016118b4565b506119158160c086015161176e565b516119248260c086015161176e565b51116118fa565b5061193a8160a086015161176e565b516119498260a086015161176e565b5114156118f3565b5050505050600190565b505050505f90565b50505f90565b903590601e198136030182121561013057018035906001600160401b03821161013057602001918160051b3603831361013057565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015611ae8575b806d04ee2d6d415b85acef8100000000600a921015611acd575b662386f26fc10000811015611ab9575b6305f5e100811015611aa8575b612710811015611a99575b6064811015611a8b575b1015611a80575b600a60216001840193611a2585610be6565b94611a336040519687610b71565b808652611a42601f1991610be6565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353048015611a7b57600a9091611a4d565b505090565b600190910190611a13565b606460029104930192611a0c565b61271060049104930192611a02565b6305f5e100600891049301926119f7565b662386f26fc10000601091049301926119ea565b6d04ee2d6d415b85acef8100000000602091049301926119da565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b81046119c0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303611b3d57565b634ca8886760e01b5f5260045ffdfea2646970667358221220ad6be991fef8b53cefdc8af44368a6184ce9db7e8dadee4ed382455b8709743e64736f6c634300081a0033",
    "sourceMap": "667:6134:51:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1705:4;667:6134;759:14:4;688:1:6;667:6134:51;783:14:4;-1:-1:-1;667:6134:51;807:14:4;708:26:6;704:76;;667:6134:51;790:10:6;;667:6134:51;790:10:6;667:6134:51;790:10:6;712::39;;732:32;;-1:-1:-1;667:6134:51;;;;;;;;;;;795:48:39;;667:6134:51;795:48:39;;;667:6134:51;;;;;;;;;;;;;;;;;;;;;827:4:39;667:6134:51;;;;1705:4;667:6134;;;;;;-1:-1:-1;;667:6134:51;;;795:48:39;;;;;;;;;;-1:-1:-1;795:48:39;;;-1:-1:-1;774:69:39;;;667:6134:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:32:39;667:6134:51;;;;;712:10:39;667:6134:51;;;;;;;;;;774:69:39;667:6134:51;;;;;;;;;;;;;;;;;;;;;;;;;;795:48:39;;;667:6134:51;795:48:39;;667:6134:51;795:48:39;;;;;;667:6134:51;795:48:39;;;:::i;:::-;;;667:6134:51;;;;;795:48:39;;;667:6134:51;-1:-1:-1;667:6134:51;;795:48:39;;;-1:-1:-1;795:48:39;;;667:6134:51;;;-1:-1:-1;667:6134:51;;;;;704:76:6;757:12;;;-1:-1:-1;757:12:6;;-1:-1:-1;757:12:6;667:6134:51;;;;-1:-1:-1;667:6134:51;;;;;-1:-1:-1;667:6134:51;;;;;;-1:-1:-1;;667:6134:51;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610029575b50361561001a575f80fd5b631574f9f360e01b5f5260045ffd5b5f3560e01c90816301ffc9a714610af0575080631272ff8b146108f05780631d6f87dd146108945780634f4a9b191461084957806354fd4d50146107475780635bf2f20d1461070d5780635cc02d2f1461047d5780636b122fe0146102d857806388e5b2d91461025e57806391db0b7e14610235578063bc197c811461019d578063ce46e04614610183578063e49617e114610166578063e60c3505146101345763f23a6e61146100da575f61000f565b346101305760a0366003190112610130576100f3610bbc565b506100fc610ba6565b506084356001600160401b0381116101305761011c903690600401610ceb565b505060405163f23a6e6160e01b8152602090f35b5f80fd5b602061015260e061014436610d18565b61014c611b0b565b0161101f565b6040516001600160a01b0390911630148152f35b61016f36610d18565b50610178611b0b565b602060405160018152f35b34610130575f3660031901126101305760206040515f8152f35b346101305760a0366003190112610130576101b6610bbc565b506101bf610ba6565b506044356001600160401b038111610130576101df903690600401610c6b565b50506064356001600160401b03811161013057610200903690600401610c6b565b50506084356001600160401b03811161013057610221903690600401610ceb565b505060405163bc197c8160e01b8152602090f35b602061025461024336610c9b565b9261024f929192611b0b565b6116fc565b6040519015158152f35b61026736610c9b565b610272929192611b0b565b8082036102c9575f90345b83831061028f57602060405160018152f35b61029a8383876116b5565b358181116102ba576001916102b085878a6116d9565b500392019161027d565b63044044a560e21b5f5260045ffd5b63251f56a160e21b5f5260045ffd5b34610130575f366003190112610130576060806040516102f781610b56565b5f81525f60208201525f604082015201526040516351753e3760e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa8015610472575f906103c2575b6060906103be604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a0830190610c47565b0390f35b503d805f833e6103d28183610b71565b810190602081830312610130578051906001600160401b0382116101305701608081830312610130576040519061040882610b56565b8051825260208101516001600160a01b038116810361013057602083015261043260408201611672565b60408301526060810151906001600160401b038211610130570182601f82011215610130576060928160206104699351910161167f565b82820152610378565b6040513d5f823e3d90fd5b3461013057602036600319011261013057606061012060405161049f81610b26565b5f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f61010082015201526040516328c44a9960e21b815260043560048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610472575f91610608575b506020810180517f0000000000000000000000000000000000000000000000000000000000000000036105f9576103be61012060405193849360208552815160208601525160408501526001600160401b0360408201511660608501526001600160401b0360608201511660808501526001600160401b0360808201511660a085015260a081015160c085015260018060a01b0360c08201511660e085015260018060a01b0360e082015116610100850152610100810151151582850152015161014080840152610160830190610c47565b63295d5f3960e01b5f5260045ffd5b90503d805f833e6106198183610b71565b810190602081830312610130578051906001600160401b03821161013057019061014082820312610130576040519161065183610b26565b805183526020810151602084015261066b6040820161165e565b604084015261067c6060820161165e565b606084015261068d6080820161165e565b608084015260a081015160a08401526106a860c08201610d63565b60c08401526106b960e08201610d63565b60e08401526106cb6101008201611672565b610100840152610120810151906001600160401b03821161013057019080601f830112156101305781516107019260200161167f565b61012082015281610527565b34610130575f3660031901126101305760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610130575f366003190112610130576103be6020610835600161078a7f000000000000000000000000000000000000000000000000000000000000000061199e565b81846107b57f000000000000000000000000000000000000000000000000000000000000000061199e565b81806107e07f000000000000000000000000000000000000000000000000000000000000000061199e565b9260405199878b985191829101848a015e870190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e01015f838201520301601f198101835282610b71565b604051918291602083526020830190610c47565b34610130576020366003190112610130576004356001600160401b0381116101305761010060031982360301126101305761088c60209133903390600401611033565b604051908152f35b34610130576060366003190112610130576004356001600160401b038111610130576101006003198236030112610130576108cd610ba6565b906044356001600160a01b03811681036101305760209261088c92600401611033565b34610130576060366003190112610130576004356001600160401b038111610130576101406003198236030112610130576040519061092e82610b26565b8060040135825260208201906024810135825261094d60448201610b92565b604084015261095e60648201610b92565b6060840190815261097160848301610b92565b916080850192835260a481013560a086015261098f60c48201610bd2565b60c08601526109a060e48201610bd2565b60e08601526101048101358015158103610130576101008601526101248101356001600160401b038111610130576101209160046109e19236920101610c01565b94019384526024356001600160401b03811161013057610a05903690600401610c01565b927f0000000000000000000000000000000000000000000000000000000000000000905103610ae157516001600160401b03168015159081610ad7575b50610ac857516001600160401b0316610ab957610a7c610a6d60209351848082518301019101610e39565b91838082518301019101610e39565b610a868183611782565b9182610a99575b50506040519015158152f35b60e0908101519101516001600160a01b0390811691161490508280610a8d565b637b6227e960e11b5f5260045ffd5b631ab7da6b60e01b5f5260045ffd5b9050421184610a42565b635f9bd90760e11b5f5260045ffd5b34610130576020366003190112610130576004359063ffffffff60e01b821680920361013057602091630271189760e51b148152f35b61014081019081106001600160401b03821117610b4257604052565b634e487b7160e01b5f52604160045260245ffd5b608081019081106001600160401b03821117610b4257604052565b90601f801991011681019081106001600160401b03821117610b4257604052565b35906001600160401b038216820361013057565b602435906001600160a01b038216820361013057565b600435906001600160a01b038216820361013057565b35906001600160a01b038216820361013057565b6001600160401b038111610b4257601f01601f191660200190565b81601f8201121561013057803590610c1882610be6565b92610c266040519485610b71565b8284526020838301011161013057815f926020809301838601378301015290565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610130578235916001600160401b038311610130576020808501948460051b01011161013057565b6040600319820112610130576004356001600160401b0381116101305781610cc591600401610c6b565b92909291602435906001600160401b03821161013057610ce791600401610c6b565b9091565b9181601f84011215610130578235916001600160401b038311610130576020838186019501011161013057565b602060031982011261013057600435906001600160401b038211610130576101409082900360031901126101305760040190565b6001600160401b038111610b425760051b60200190565b51906001600160a01b038216820361013057565b9080601f83011215610130578151610d8e81610d4c565b92610d9c6040519485610b71565b81845260208085019260051b82010192831161013057602001905b828210610dc45750505090565b60208091610dd184610d63565b815201910190610db7565b9080601f83011215610130578151610df381610d4c565b92610e016040519485610b71565b81845260208085019260051b82010192831161013057602001905b828210610e295750505090565b8151815260209182019101610e1c565b602081830312610130578051906001600160401b038211610130570161010081830312610130576040519161010083018381106001600160401b03821117610b425760405281516001600160401b0381116101305781610e9a918401610d77565b835260208201516001600160401b0381116101305781610ebb918401610ddc565b602084015260408201516001600160401b0381116101305781610edf918401610d77565b604084015260608201516001600160401b0381116101305781610f03918401610ddc565b606084015260808201516001600160401b0381116101305781610f27918401610d77565b608084015260a08201516001600160401b0381116101305781610f4b918401610ddc565b60a084015260c0820151916001600160401b03831161013057610f7560e092610f80948301610ddc565b60c085015201610d63565b60e082015290565b9035601e19823603018112156101305701602081359101916001600160401b038211610130578160051b3603831361013057565b916020908281520191905f5b818110610fd55750505090565b909192602080600192838060a01b03610fed88610bd2565b168152019401929101610fc8565b81835290916001600160fb1b0383116101305760209260051b809284830137010190565b356001600160a01b03811681036101305790565b9261103e8480611969565b60208601915061104e8287611969565b9190500361162b5760408501936110658587611969565b6060880191506110758289611969565b9190500361162b57608087019561108c8789611969565b60a08a01915061109c828b611969565b9190501480159061163a575b61162b57949660e0890195905f5b8a6110c18180611969565b90508210156111b95760208a8a835f611116876111108f61110a836111036110fe6110ef8a6111519f611969565b6001600160a01b0394916116b5565b61101f565b169761101f565b95611969565b906116b5565b6040516323b872dd60e01b81526001600160a01b03958616600482015292909416602483015292356044820152938492839182906064820190565b03925af1908115610472575f91611180575b5015611171576001016110b6565b632f35253160e01b5f5260045ffd5b90506020813d82116111b1575b8161119a60209383610b71565b81010312610130576111ab90611672565b5f611163565b3d915061118d565b5050909193979492945f5b8a6111cf8782611969565b90508210156112665790816111ff826111108b6111f9838f986110fe8f6110ef9061110393611969565b94611969565b35833b15610130576040516323b872dd60e01b81526001600160a01b038d811660048301529290921660248301526044820152915f908390606490829084905af191821561047257600192611256575b50016111c4565b5f61126091610b71565b5f61124f565b505091959497909296935f9760c08b019560018060a01b0316985b61128b868d611969565b90508110156113445780888a6112d28f946111108c6112cb836111108f826112bd6110fe6110ef8f946112c495611969565b169961101f565b978b611969565b3597611969565b35823b15610130578d5f809460c4936040519889968795637921219560e11b8752600487015260018060a01b031660248601526044850152606484015260a060848401528160a48401525af191821561047257600192611334575b5001611281565b5f61133e91610b71565b5f61132d565b50949390959992989796919760405196879660208801602090526113688680610f88565b60408a0161010090526101408a019061138092610fbc565b9061138b9087610f88565b898303603f190160608b01526113a19291610ffb565b906113ac9086610f88565b888303603f190160808a01526113c29291610fbc565b906113cd9085610f88565b878303603f190160a08901526113e39291610ffb565b906113ee9084610f88565b868303603f190160c08801526114049291610fbc565b9061140f9083610f88565b858303603f190160e08701526114259291610ffb565b9161142f91610f88565b838303603f19016101008501526114469291610ffb565b6001600160a01b0361145788610bd2565b1661012083015203601f19810182526114709082610b71565b6040519260c084018481106001600160401b03821117610b425760405260018060a01b031683525f6020840152600160408401525f606084015260808301525f60a083015260405160408101908082106001600160401b03831117610b42576020916040527f000000000000000000000000000000000000000000000000000000000000000081528181019384526040518094819263f17325e760e01b8352846004840152516024830152516040604483015260018060a01b0381511660648301526001600160401b03848201511660848301526040810151151560a4830152606081015160c483015260a0611576608083015160c060e4860152610124850190610c47565b91015161010483015203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1918215610472575f926115f7575b5081936115cf60018060a01b039161101f565b16917ff499ed54dafb173ee5c0ac81d260b37d4ceba55eb489caab761ba8a1bc663a345f80a4565b9091506020813d602011611623575b8161161360209383610b71565b810103126101305751905f6115bc565b3d9150611606565b63512509d360e11b5f5260045ffd5b50611645888a611969565b905061165460c08b018b611969565b91905014156110a8565b51906001600160401b038216820361013057565b5190811515820361013057565b92919261168b82610be6565b916116996040519384610b71565b829481845281830111610130578281602093845f96015e010152565b91908110156116c55760051b0190565b634e487b7160e01b5f52603260045260245ffd5b91908110156116c55760051b8101359061013e1981360301821215610130570190565b9192908181036102c9575f91345b82841061171c57505050505050600190565b6117278483886116b5565b358181116102ba5761173a8585886116d9565b30906001600160a01b03906117519060e00161101f565b1603611763576001910393019261170a565b505050505050505f90565b80518210156116c55760209160051b010190565b80515182515111611963575f5b8251518110156118065781516001600160a01b03906117af90839061176e565b511660018060a01b036117c383865161176e565b5116148015906117e1575b6117da5760010161178f565b5050505f90565b506117f081602084015161176e565b516117ff82602086015161176e565b51116117ce565b50604081019182515160408201908151511161195b575f5b8151518110156118985784516001600160a01b039061183e90839061176e565b511660018060a01b0361185283855161176e565b511614801590611872575b6118695760010161181e565b50505050505f90565b5061188181606086015161176e565b5161189082606086015161176e565b51141561185d565b5050915060808101918251519260808201938451511161195b575f5b8451518110156119515781516001600160a01b03906118d490839061176e565b511660018060a01b036118e883885161176e565b51161480159061192b575b8015611906575b611869576001016118b4565b506119158160c086015161176e565b516119248260c086015161176e565b51116118fa565b5061193a8160a086015161176e565b516119498260a086015161176e565b5114156118f3565b5050505050600190565b505050505f90565b50505f90565b903590601e198136030182121561013057018035906001600160401b03821161013057602001918160051b3603831361013057565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015611ae8575b806d04ee2d6d415b85acef8100000000600a921015611acd575b662386f26fc10000811015611ab9575b6305f5e100811015611aa8575b612710811015611a99575b6064811015611a8b575b1015611a80575b600a60216001840193611a2585610be6565b94611a336040519687610b71565b808652611a42601f1991610be6565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353048015611a7b57600a9091611a4d565b505090565b600190910190611a13565b606460029104930192611a0c565b61271060049104930192611a02565b6305f5e100600891049301926119f7565b662386f26fc10000601091049301926119ea565b6d04ee2d6d415b85acef8100000000602091049301926119da565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b81046119c0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303611b3d57565b634ca8886760e01b5f5260045ffdfea2646970667358221220ad6be991fef8b53cefdc8af44368a6184ce9db7e8dadee4ed382455b8709743e64736f6c634300081a0033",
    "sourceMap": "667:6134:51:-:0;;;;;;;;;;-1:-1:-1;667:6134:51;;;;;;;;;1183:12:6;;;1054:5;1183:12;667:6134:51;1054:5:6;1183:12;667:6134:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;667:6134:51;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;:::i;:::-;-1:-1:-1;;667:6134:51;;-1:-1:-1;;;667:6134:51;;;;;;;;;;;1052:20:39;;667:6134:51;;;:::i;:::-;881:58:6;;:::i;:::-;1052:20:39;;:::i;:::-;667:6134:51;;-1:-1:-1;;;;;667:6134:51;;;1084:4:39;1052:37;667:6134:51;;;;;;;:::i;:::-;;881:58:6;;:::i;:::-;667:6134:51;;;1240:4:39;667:6134:51;;;;;;;;;-1:-1:-1;;667:6134:51;;;;;;;;;;;;;;;;;-1:-1:-1;;667:6134:51;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;:::i;:::-;-1:-1:-1;;667:6134:51;;-1:-1:-1;;;667:6134:51;;;;;;;1442:1461:6;667:6134:51;;;:::i;:::-;881:58:6;;;;;;:::i;:::-;1442:1461;:::i;:::-;667:6134:51;;;;;;;;;;;;:::i;:::-;881:58:6;;;;;:::i;:::-;3340:23;;;3336:76;;667:6134:51;;3844:9:6;3884:10;;;;;;667:6134:51;;;1489:1:0;667:6134:51;;;3896:19:6;4037:9;;;;;:::i;:::-;667:6134:51;4064:22:6;;;4060:87;;1489:1:0;4284:15:6;;;;;;:::i;:::-;;667:6134:51;3896:19:6;667:6134:51;3869:13:6;;;4060:87;4113:19;;;667:6134:51;4113:19:6;667:6134:51;;4113:19:6;3336:76;3386:15;;;667:6134:51;3386:15:6;667:6134:51;;3386:15:6;667:6134:51;;;;;;-1:-1:-1;;667:6134:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1619:44:39;;1644:18;667:6134:51;1619:44:39;;667:6134:51;;;1619:44:39;667:6134:51;;;;;;1619:14:39;667:6134:51;1619:44:39;;;;;;667:6134:51;1619:44:39;;;667:6134:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1619:44:39;;;;667:6134:51;1619:44:39;;;;;;:::i;:::-;;;667:6134:51;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1619:44:39;;;667:6134:51;;;;;;;;;;;;;;;-1:-1:-1;;667:6134:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:23:39;;667:6134:51;;;1392:23:39;;667:6134:51;;;1392:23:39;667:6134:51;;;;;;1392:3:39;667:6134:51;1392:23:39;;;;;;;667:6134:51;1392:23:39;;;667:6134:51;1429:18:39;667:6134:51;1429:18:39;;667:6134:51;;1451:18:39;1429:40;1425:71;;667:6134:51;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1425:71:39:-;1478:18;;;667:6134:51;1478:18:39;667:6134:51;;1478:18:39;1392:23;;;;;667:6134:51;1392:23:39;;;;;;:::i;:::-;;;667:6134:51;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1392:23:39;;;667:6134:51;;;;;;-1:-1:-1;;667:6134:51;;;;;;;468:43:39;667:6134:51;;;;;;;;;-1:-1:-1;;667:6134:51;;;;;1055:104:4;;667:6134:51;1072:24:4;1089:6;1072:24;:::i;:::-;1120:6;;1103:24;1120:6;1103:24;:::i;:::-;1151:6;;1134:24;1151:6;1134:24;:::i;:::-;667:6134:51;;;;;;;;;;;;1055:104:4;;;667:6134:51;;;;-1:-1:-1;;;667:6134:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;667:6134:51;;;;;;;;;;;;;;;;;;;;;1055:104:4;;;;;;;;;;:::i;:::-;667:6134:51;;;;;1055:104:4;667:6134:51;;1055:104:4;667:6134:51;;;;:::i;:::-;;;;;;-1:-1:-1;;667:6134:51;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;4094:46;667:6134;4117:10;;;;667:6134;;;4094:46;:::i;:::-;667:6134;;;;;;;;;;;;-1:-1:-1;;667:6134:51;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;667:6134:51;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;:::i;:::-;4153:565;4363:18;667:6134;;1006:26:38;1002:54;;667:6134:51;-1:-1:-1;;;;;667:6134:51;351:29:38;;;;;:87;;667:6134:51;714:54:38;;;667:6134:51;-1:-1:-1;;;;;667:6134:51;778:57:38;;4559:35:51;4438:77;667:6134;4462:14;;667:6134;;;;4438:77;;;;;;:::i;:::-;667:6134;;;;;4559:35;;;;;;:::i;:::-;4624:38;;;;:::i;:::-;:87;;;;667:6134;4605:106;;667:6134;;;;;;;;4624:87;667:6134;4678:13;;;667:6134;4695:16;;667:6134;-1:-1:-1;;;;;667:6134:51;;;;;4678:33;;-1:-1:-1;4624:87:51;;;;778:57:38;815:20;;;667:6134:51;815:20:38;667:6134:51;;815:20:38;714:54;751:17;;;667:6134:51;751:17:38;667:6134:51;;751:17:38;351:87;423:15;;;-1:-1:-1;351:87:38;;;1002:54;1041:15;;;667:6134:51;1041:15:38;667:6134:51;;1041:15:38;667:6134:51;;;;;;-1:-1:-1;;667:6134:51;;;;;;;;;;;;;;;;;;6758:34;;;;6743:49;667:6134;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;:::o;:::-;;;;-1:-1:-1;667:6134:51;;;;;-1:-1:-1;667:6134:51;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;:::o;:::-;;;1055:104:4;;667:6134:51;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;667:6134:51;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;667:6134:51;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;667:6134:51;;;;;;:::o;:::-;;;-1:-1:-1;;;;;667:6134:51;;;;;;:::o;:::-;-1:-1:-1;;;;;667:6134:51;;;;;;-1:-1:-1;;667:6134:51;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;667:6134:51;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;667:6134:51;;;;;;;;-1:-1:-1;;667:6134:51;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;667:6134:51;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;667:6134:51;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;-1:-1:-1;;667:6134:51;;;;;;;:::o;:::-;-1:-1:-1;;;;;667:6134:51;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;667:6134:51;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;667:6134:51;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;667:6134:51;;;;;;;:::o;3261:714::-;;1819:16;;;;:::i;:::-;1846:17;;;;-1:-1:-1;1846:17:51;;;;:::i;:::-;1819:51;;;;1815:97;;1926:17;;;;;;;;:::i;:::-;1954:19;;;;-1:-1:-1;1954:19:51;;;;:::i;:::-;1926:54;;;;1922:100;;2049:18;;;;;;;;:::i;:::-;2078:20;;;;-1:-1:-1;2078:20:51;;;;:::i;:::-;2049:56;;;;;;:127;;;3261:714;2032:183;;2368:10;;667:6134;2538:10;;;-1:-1:-1;2377:1:51;2409:3;2384:16;;;;;:::i;:::-;2380:27;;;;;;;1846:17;2457:16;;;2377:1;2570:20;2457:16;2570:17;2457:16;2538:10;2457:16;:19;;:16;;2450:158;2457:16;;:::i;:::-;-1:-1:-1;;;;;667:6134:51;;2457:19;:::i;:::-;;:::i;:::-;667:6134;2538:10;;:::i;:::-;2570:17;;:::i;:::-;:20;;:::i;:::-;1926:17;667:6134;-1:-1:-1;;;2450:158:51;;-1:-1:-1;;;;;667:6134:51;;;2450:158;;;667:6134;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:158;;;;;;;;;;2377:1;2450:158;;;2409:3;2449:159;;2428:219;;667:6134;;2368:10;;2428:219;2630:17;;;2377:1;2630:17;2450:158;2377:1;2630:17;2450:158;;;1846:17;2450:158;;;;;;;;;1846:17;2450:158;;;:::i;:::-;;;667:6134;;;;;;;:::i;:::-;2450:158;;;;;;-1:-1:-1;2450:158:51;;2380:27;;;;;;;;;;2377:1;2743:3;2717:17;;;;;:::i;:::-;2713:28;;;;;;;2770:17;;2872:22;2770:17;2872:19;2770:17;2844:10;2770:17;;;:20;:17;;;:20;:17;;:::i;2844:10::-;2872:19;;:::i;:22::-;667:6134;2762:146;;;;;1926:17;667:6134;-1:-1:-1;;;2762:146:51;;-1:-1:-1;;;;;667:6134:51;;;2450:158;2762:146;;667:6134;;;;;;;;;;;;;;-1:-1:-1;;667:6134:51;;;;;;-1:-1:-1;;2762:146:51;;;;;;;667:6134;2762:146;;;2743:3;;667:6134;2701:10;;2762:146;2377:1;2762:146;;;:::i;:::-;;;;2713:28;;;;;;;;;;;2377:1;3182:19;;;;667:6134;;;;;;;2958:291;3006:3;2979:18;;;;:::i;:::-;2975:29;;;;;;;3034:18;;;3182:22;3034:18;;3182:19;3034:18;3141:23;3034:18;3141:20;3034:18;;:21;;:18;;;3113:10;3034:18;;:::i;:21::-;667:6134;3113:10;;:::i;:::-;3141:20;;;:::i;:23::-;667:6134;3182:19;;:::i;:22::-;667:6134;3025:213;;;;;667:6134;2377:1;667:6134;;3025:213;667:6134;1926:17;667:6134;;;;;;;;;3025:213;;2450:158;3025:213;;667:6134;;;;;;;;;;;;;;;;;;;2078:20;667:6134;;;;;;;;;3025:213;;;;;;;667:6134;3025:213;;;3006:3;;667:6134;2963:10;;3025:213;2377:1;3025:213;;;:::i;:::-;;;;2975:29;;;;;;;;;;;;;1926:17;667:6134;3821:16;;;1846:17;3821:16;;1846:17;667:6134;;;;;;:::i;:::-;1926:17;667:6134;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;667:6134:51;1954:19;667:6134;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;667:6134:51;2049:18;667:6134;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;667:6134:51;2078:20;667:6134;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;667:6134:51;3182:19;667:6134;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;667:6134:51;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;-1:-1:-1;;667:6134:51;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;667:6134:51;;;:::i;:::-;;;;;;3821:16;1055:104:4;;3821:16:51;;;;;;;;:::i;:::-;1926:17;667:6134;;3182:19;667:6134;;;;;-1:-1:-1;;;;;667:6134:51;;;;;1926:17;667:6134;;;;;;;;;2377:1;1846:17;3612:274;;667:6134;;1926:17;3612:274;;667:6134;2377:1;1954:19;3612:274;;667:6134;2049:18;3612:274;;667:6134;2377:1;2078:20;3612:274;;667:6134;1926:17;667:6134;1926:17;667:6134;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;1846:17;667:6134;1926:17;667:6134;3570:18;667:6134;;3525:376;;;667:6134;;;1926:17;667:6134;;;;;;;;3501:410;;;2450:158;3501:410;;667:6134;;;;;;;1926:17;667:6134;;;;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;1926:17;667:6134;;;;;;;;;1954:19;667:6134;;;3025:213;667:6134;;;2078:20;667:6134;2049:18;667:6134;;;3182:19;667:6134;;;;;;;;;:::i;:::-;;;;;;;;3501:410;667:6134;2377:1;3501:3;-1:-1:-1;;;;;667:6134:51;3501:410;;;;;;;2377:1;3501:410;;;2958:291;3494:417;;667:6134;3957:10;667:6134;;;;;3957:10;;:::i;:::-;667:6134;3926:42;;2377:1;3926:42;;3261:714::o;3501:410::-;;;;1846:17;3501:410;;1846:17;3501:410;;;;;;1846:17;3501:410;;;:::i;:::-;;;667:6134;;;;;3501:410;;;;;;;-1:-1:-1;3501:410:51;;2032:183;1891:21;;;1819:16;2194:21;;1819:16;2194:21;2049:127;2121:18;;;;;:::i;:::-;2150:19;;;;;;;;:::i;:::-;2121:55;;;;;2049:127;;667:6134;;;-1:-1:-1;;;;;667:6134:51;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;667:6134:51;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1442:1461:6:-;;;;1649:23;;;1645:76;;2190:1;;2153:9;2193:10;;;;;;2885:11;;;;;;1489:1:0;1442:1461:6;:::o;2205:19::-;2346:9;;;;;:::i;:::-;667:6134:51;2373:22:6;;;2369:87;;2594:15;;;;;:::i;:::-;1084:4:39;;-1:-1:-1;;;;;667:6134:51;1052:20:39;;;;;:::i;:::-;667:6134:51;1052:37:39;2580:84:6;;1489:1:0;667:6134:51;;2205:19:6;667:6134:51;2178:13:6;;;2580:84;2637:12;;;;;;;2190:1;2637:12;:::o;667:6134:51:-;;;;;;;;;;;;;;;:::o;4724:1374::-;4899:19;;667:6134;4928:18;;667:6134;-1:-1:-1;4895:84:51;;667:6134;5037:3;5010:18;;667:6134;5006:29;;;;;5077:19;;-1:-1:-1;;;;;667:6134:51;5077:22;;:19;;:22;:::i;:::-;667:6134;;;;;;;5103:21;:18;;;:21;:::i;:::-;667:6134;;5077:47;;;:115;;;5037:3;5056:163;;667:6134;;4994:10;;5056:163;5207:12;;;667:6134;5207:12;:::o;5077:115::-;5144:20;:23;:20;;;;;:23;:::i;:::-;667:6134;5170:22;:19;5144:20;5170:19;;;:22;:::i;:::-;667:6134;-1:-1:-1;5077:115:51;;5006:29;;5269:20;;;;;;667:6134;5269:20;5299:19;;;;;667:6134;-1:-1:-1;5265:86:51;;667:6134;5410:3;5382:19;;667:6134;5378:30;;;;;5450:20;;-1:-1:-1;;;;;667:6134:51;5450:23;;:20;;:23;:::i;:::-;667:6134;;;;;;;5477:22;:19;;;:22;:::i;:::-;667:6134;;5450:49;;;:122;;;5410:3;5429:170;;667:6134;;5366:10;;5429:170;5587:12;;;;;667:6134;5587:12;:::o;5450:122::-;5519:22;:25;:22;;;;;:25;:::i;:::-;667:6134;5548:24;:21;5519:22;5548:21;;;:24;:::i;:::-;667:6134;5519:53;;5450:122;;5378:30;;;;;5650:21;;;;;;667:6134;5681:20;5650:21;5681:20;;;;;667:6134;-1:-1:-1;5646:88:51;;667:6134;5794:3;5765:20;;667:6134;5761:31;;;;;5834:21;;-1:-1:-1;;;;;667:6134:51;5834:24;;:21;;:24;:::i;:::-;667:6134;;;;;;;5862:23;:20;;;:23;:::i;:::-;667:6134;;5834:51;;;:126;;;5794:3;5834:198;;;;5794:3;5813:246;;667:6134;;5749:10;;5834:198;5980:22;:25;:22;;;;;:25;:::i;:::-;667:6134;6008:24;:21;5980:22;6008:21;;;:24;:::i;:::-;667:6134;-1:-1:-1;5834:198:51;;:126;5905:23;:26;:23;;;;;:26;:::i;:::-;667:6134;5935:25;:22;5905:23;5935:22;;;:25;:::i;:::-;667:6134;5905:55;;5834:126;;5761:31;;;;;;667:6134;4724:1374;:::o;5646:88::-;5722:12;;;;667:6134;5722:12;:::o;4895:84::-;4967:12;;667:6134;4967:12;:::o;667:6134::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;667:6134:51;;;;;;;;;;;;;;;;:::o;637:632:32:-;759:17;-1:-1:-1;25444:17:34;-1:-1:-1;;;25444:17:34;;;25440:103;;637:632:32;25560:17:34;25569:8;26140:7;25560:17;;;25556:103;;637:632:32;25685:8:34;25676:17;;;25672:103;;637:632:32;25801:7:34;25792:16;;;25788:100;;637:632:32;25914:7:34;25905:16;;;25901:100;;637:632:32;26027:7:34;26018:16;;;26014:100;;637:632:32;26131:16:34;;26127:66;;637:632:32;26140:7:34;874:92:32;779:1;667:6134:51;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1055:104:4;;667:6134:51;;:::i;:::-;;;;;;;874:92:32;;;979:247;-1:-1:-1;;667:6134:51;;-1:-1:-1;;;1033:111:32;;;;667:6134:51;1033:111:32;667:6134:51;1194:10:32;;1190:21;;26140:7:34;979:247:32;;;;1190:21;1206:5;;637:632;:::o;26127:66:34:-;26177:1;667:6134:51;;;;26127:66:34;;26014:100;26027:7;26098:1;667:6134:51;;;;26014:100:34;;;25901;25914:7;25985:1;667:6134:51;;;;25901:100:34;;;25788;25801:7;25872:1;667:6134:51;;;;25788:100:34;;;25672:103;25685:8;25758:2;667:6134:51;;;;25672:103:34;;;25556;25569:8;25642:2;667:6134:51;;;;25556:103:34;;;25440;-1:-1:-1;25526:2:34;;-1:-1:-1;;;;667:6134:51;;25440:103:34;;6040:128:6;6109:4;-1:-1:-1;;;;;667:6134:51;6087:10:6;:27;6083:79;;6040:128::o;6083:79::-;6137:14;;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "446": [
        {
          "start": 1894,
          "length": 32
        }
      ],
      "448": [
        {
          "start": 1937,
          "length": 32
        }
      ],
      "450": [
        {
          "start": 1980,
          "length": 32
        }
      ],
      "588": [
        {
          "start": 6925,
          "length": 32
        }
      ],
      "41211": [
        {
          "start": 841,
          "length": 32
        }
      ],
      "41214": [
        {
          "start": 1271,
          "length": 32
        },
        {
          "start": 5508,
          "length": 32
        }
      ],
      "41216": [
        {
          "start": 791,
          "length": 32
        },
        {
          "start": 1328,
          "length": 32
        },
        {
          "start": 1828,
          "length": 32
        },
        {
          "start": 2568,
          "length": 32
        },
        {
          "start": 5335,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ATTESTATION_SCHEMA()": "5bf2f20d",
    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
    "checkStatement((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": "1272ff8b",
    "getSchema()": "6b122fe0",
    "getStatement(bytes32)": "5cc02d2f",
    "isPayable()": "ce46e046",
    "makeStatement((address[],uint256[],address[],uint256[],address[],uint256[],uint256[],address))": "4f4a9b19",
    "makeStatementFor((address[],uint256[],address[],uint256[],address[],uint256[],uint256[],address),address,address)": "1d6f87dd",
    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
    "supportsInterface(bytes4)": "01ffc9a7",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"_schemaRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSchema\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFromStatement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"payment\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"BundleTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ATTESTATION_SCHEMA\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"statement\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"checkStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getStatement\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"erc20Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc20Amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"erc721Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc721TokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"erc1155Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc1155TokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc1155Amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"internalType\":\"struct TokenBundlePaymentObligation.StatementData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"makeStatement\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"erc20Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc20Amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"erc721Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc721TokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"erc1155Tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc1155TokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc1155Amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"internalType\":\"struct TokenBundlePaymentObligation.StatementData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makeStatementFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Statements/TokenBundlePaymentObligation.sol\":\"TokenBundlePaymentObligation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"lib/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808\",\"dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f\",\"dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR\"]},\"lib/eas-contracts/contracts/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828\",\"dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xb6503f663515b6713adb63eb2acf19401d8f73af39c7194f7dc3d8249c8643c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abdedc1b84ae26c1a151825e9f785fa8187ead91be438671fd18c7a41958b746\",\"dweb:/ipfs/QmdYFTdzQbrWJsJgH8mX1rPTt8V7DZFAXxjxNTaY6LEa6b\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0f8b8696348d5a57b13d44f5cc63894f0368038c06f6d00bdeda6f9aa13127e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://718159abc22da25c2de7e70f6b7bbbf6b6e20c3db6681893f8049b57f4ee65ce\",\"dweb:/ipfs/QmPJeQ7Qj7mrAwfR69sLjyjUSb44B7yAJXvMG1NFtoTJKv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440\",\"dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426\",\"dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY\"]},\"src/ArbiterUtils.sol\":{\"keccak256\":\"0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265\",\"dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ\"]},\"src/BaseStatement.sol\":{\"keccak256\":\"0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd\",\"dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778\",\"dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp\"]},\"src/Statements/TokenBundlePaymentObligation.sol\":{\"keccak256\":\"0x83d5aa346c38cb6452a20a15c723c61760fa7b071ef0abb25f058e0e0f854eb2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d5db4fba22b255a038b1af1cf0dd44a5d4d46f5b68828b571188b1a9dc2240ae\",\"dweb:/ipfs/QmeGJRFu35zP1NvHox9AZMoEqJT1SpGkc71KMcwQkQtG3Y\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEAS",
              "name": "_eas",
              "type": "address"
            },
            {
              "internalType": "contract ISchemaRegistry",
              "name": "_schemaRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessDenied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AttestationRevoked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineExpired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEAS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSchema"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTransfer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotFromStatement"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPayable"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "payment",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BundleTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ATTESTATION_SCHEMA",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "attest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "statement",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "demand",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkStatement",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "struct SchemaRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStatement",
          "outputs": [
            {
              "internalType": "struct Attestation",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isPayable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct TokenBundlePaymentObligation.StatementData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "erc20Tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "erc20Amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "erc721Tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "erc721TokenIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "erc1155Tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "erc1155TokenIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "erc1155Amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "payee",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeStatement",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct TokenBundlePaymentObligation.StatementData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "erc20Tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "erc20Amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "erc721Tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "erc721TokenIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "erc1155Tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "erc1155TokenIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "erc1155Amounts",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "payee",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeStatementFor",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiAttest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiRevoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The new attestation."
            },
            "returns": {
              "_0": "Whether the attestation is valid."
            }
          },
          "isPayable()": {
            "returns": {
              "_0": "Whether the resolver supports ETH transfers."
            }
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The new attestations.",
              "values": "Explicit ETH amounts which were sent with each attestation."
            },
            "returns": {
              "_0": "Whether all the attestations are valid."
            }
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The existing attestations to be revoked.",
              "values": "Explicit ETH amounts which were sent with each revocation."
            },
            "returns": {
              "_0": "Whether the attestations can be revoked."
            }
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The existing attestation to be revoked."
            },
            "returns": {
              "_0": "Whether the attestation can be revoked."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation and verifies whether it's valid."
          },
          "isPayable()": {
            "notice": "Checks if the resolver can be sent ETH."
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes multiple attestations and verifies whether they are valid."
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation revocation and verifies if it can be revoked."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@eas/=lib/eas-contracts/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/eas-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Statements/TokenBundlePaymentObligation.sol": "TokenBundlePaymentObligation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/eas-contracts/contracts/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/IEAS.sol": {
        "keccak256": "0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12",
        "urls": [
          "bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880",
          "dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
        "keccak256": "0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754",
        "urls": [
          "bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158",
          "dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISemver.sol": {
        "keccak256": "0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18",
        "urls": [
          "bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0",
          "dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/Semver.sol": {
        "keccak256": "0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9",
        "urls": [
          "bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808",
          "dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb",
        "urls": [
          "bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f",
          "dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
        "keccak256": "0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983",
        "urls": [
          "bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828",
          "dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0xb6503f663515b6713adb63eb2acf19401d8f73af39c7194f7dc3d8249c8643c7",
        "urls": [
          "bzz-raw://abdedc1b84ae26c1a151825e9f785fa8187ead91be438671fd18c7a41958b746",
          "dweb:/ipfs/QmdYFTdzQbrWJsJgH8mX1rPTt8V7DZFAXxjxNTaY6LEa6b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0x0f8b8696348d5a57b13d44f5cc63894f0368038c06f6d00bdeda6f9aa13127e7",
        "urls": [
          "bzz-raw://718159abc22da25c2de7e70f6b7bbbf6b6e20c3db6681893f8049b57f4ee65ce",
          "dweb:/ipfs/QmPJeQ7Qj7mrAwfR69sLjyjUSb44B7yAJXvMG1NFtoTJKv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de",
        "urls": [
          "bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827",
          "dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c",
        "urls": [
          "bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4",
          "dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2",
        "urls": [
          "bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440",
          "dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c",
        "urls": [
          "bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966",
          "dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481",
        "urls": [
          "bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb",
          "dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0",
        "urls": [
          "bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426",
          "dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"
        ],
        "license": "MIT"
      },
      "src/ArbiterUtils.sol": {
        "keccak256": "0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c",
        "urls": [
          "bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265",
          "dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ"
        ],
        "license": "UNLICENSED"
      },
      "src/BaseStatement.sol": {
        "keccak256": "0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba",
        "urls": [
          "bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd",
          "dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs"
        ],
        "license": "UNLICENSED"
      },
      "src/IArbiter.sol": {
        "keccak256": "0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647",
        "urls": [
          "bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778",
          "dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp"
        ],
        "license": "UNLICENSED"
      },
      "src/Statements/TokenBundlePaymentObligation.sol": {
        "keccak256": "0x83d5aa346c38cb6452a20a15c723c61760fa7b071ef0abb25f058e0e0f854eb2",
        "urls": [
          "bzz-raw://d5db4fba22b255a038b1af1cf0dd44a5d4d46f5b68828b571188b1a9dc2240ae",
          "dweb:/ipfs/QmeGJRFu35zP1NvHox9AZMoEqJT1SpGkc71KMcwQkQtG3Y"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 51
} as const;