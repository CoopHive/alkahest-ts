export const abi = {
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_eas",
          "type": "address",
          "internalType": "contract IEAS"
        },
        {
          "name": "_schemaRegistry",
          "type": "address",
          "internalType": "contract ISchemaRegistry"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "ATTESTATION_SCHEMA",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "checkStatement",
      "inputs": [
        {
          "name": "statement",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "demand",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSchema",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SchemaRecord",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "resolver",
              "type": "address",
              "internalType": "contract ISchemaResolver"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "schema",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStatement",
      "inputs": [
        {
          "name": "uid",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isPayable",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "makeStatement",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct ERC20PaymentObligation.StatementData",
          "components": [
            {
              "name": "token",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "payee",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "makeStatementFor",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct ERC20PaymentObligation.StatementData",
          "components": [
            {
              "name": "token",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "payee",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "payer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "multiAttest",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multiRevoke",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "PaymentMade",
      "inputs": [
        {
          "name": "payment",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "buyer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessDenied",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AttestationRevoked",
      "inputs": []
    },
    {
      "type": "error",
      "name": "DeadlineExpired",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientValue",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidEAS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPayment",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSchema",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotFromStatement",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotPayable",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x61016080604052346101d2576040816113a78038038091610020828561020c565b8339810103126101d25780516001600160a01b038116918282036101d25760200151916001600160a01b0383168084036101d257604051606081016001600160401b038111828210176101f857604052602c815260208101927f6164647265737320746f6b656e2c2075696e7432353620616d6f756e742c206184526b64647265737320706179656560a01b60408301526001608052600360a0525f60c052156101e9576084948460209560e05261012052610100525f604051958680958194630c1af44f60e31b8352606060048401525180918160648501528484015e818101830184905230602483015260016044830152601f01601f191681010301925af19081156101de575f916101a8575b50610140526040516111779081610230823960805181610694015260a051816106bf015260c051816106ea015260e051816110e0015261010051816102770152610120518181816104250152610e940152610140518181816102450152818161045e01528181610652015281816108a80152610de70152f35b90506020813d6020116101d6575b816101c36020938361020c565b810103126101d257515f61012f565b5f80fd5b3d91506101b6565b6040513d5f823e3d90fd5b6341bc07ff60e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b601f909101601f19168101906001600160401b038211908210176101f85760405256fe6080806040526004361015610029575b50361561001a575f80fd5b631574f9f360e01b5f5260045ffd5b5f3560e01c9081631272ff8b146107945750806318e9f3071461077757806354fd4d50146106755780635bf2f20d1461063b5780635cc02d2f146103ab5780636b122fe01461020657806388e5b2d91461018c57806391db0b7e1461016d578063ce46e04614610153578063e49617e114610136578063e60c3505146101115763fba22190146100b9575f61000f565b3461010d57366003190160a0811261010d5760601361010d576064356001600160a01b038116810361010d57608435906001600160a01b038216820361010d5760209161010591610cdd565b604051908152f35b5f80fd5b602061012c61011f36610b48565b6101276110de565b61111f565b6040519015158152f35b61013f36610b48565b506101486110de565b602060405160018152f35b3461010d575f36600319011261010d5760206040515f8152f35b602061012c61017b36610af8565b926101879291926110de565b610c7f565b61019536610af8565b6101a09291926110de565b8082036101f7575f90345b8383106101bd57602060405160018152f35b6101c8838387610c38565b358181116101e8576001916101de85878a610c5c565b50039201916101ab565b63044044a560e21b5f5260045ffd5b63251f56a160e21b5f5260045ffd5b3461010d575f36600319011261010d57606080604051610225816109df565b5f81525f60208201525f604082015201526040516351753e3760e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156103a0575f906102f0575b6060906102ec604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a0830190610aa4565b0390f35b503d805f833e61030081836109fa565b81019060208183031261010d578051906001600160401b03821161010d570160808183031261010d5760405190610336826109df565b8051825260208101516001600160a01b038116810361010d57602083015261036060408201610bf5565b60408301526060810151906001600160401b03821161010d570182601f8201121561010d5760609281602061039793519101610c02565b828201526102a6565b6040513d5f823e3d90fd5b3461010d57602036600319011261010d5760606101206040516103cd816109af565b5f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f61010082015201526040516328c44a9960e21b815260043560048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a0575f91610536575b506020810180517f000000000000000000000000000000000000000000000000000000000000000003610527576102ec61012060405193849360208552815160208601525160408501526001600160401b0360408201511660608501526001600160401b0360608201511660808501526001600160401b0360808201511660a085015260a081015160c085015260018060a01b0360c08201511660e085015260018060a01b0360e082015116610100850152610100810151151582850152015161014080840152610160830190610aa4565b63295d5f3960e01b5f5260045ffd5b90503d805f833e61054781836109fa565b81019060208183031261010d578051906001600160401b03821161010d5701906101408282031261010d576040519161057f836109af565b805183526020810151602084015261059960408201610be1565b60408401526105aa60608201610be1565b60608401526105bb60808201610be1565b608084015260a081015160a08401526105d660c08201610b7c565b60c08401526105e760e08201610b7c565b60e08401526105f96101008201610bf5565b610100840152610120810151906001600160401b03821161010d57019080601f8301121561010d57815161062f92602001610c02565b61012082015281610455565b3461010d575f36600319011261010d5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461010d575f36600319011261010d576102ec602061076360016106b87f0000000000000000000000000000000000000000000000000000000000000000610f71565b81846106e37f0000000000000000000000000000000000000000000000000000000000000000610f71565b818061070e7f0000000000000000000000000000000000000000000000000000000000000000610f71565b9260405199878b985191829101848a015e870190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e01015f838201520301601f1981018352826109fa565b604051918291602083526020830190610aa4565b3461010d57606036600319011261010d5760206101053333610cdd565b3461010d57606036600319011261010d576004356001600160401b03811161010d57610140600319823603011261010d576107ce826109af565b806004013582526020820190602481013582526107ed60448201610a1b565b60408401526107fe60648201610a1b565b6060840190815261081160848301610a1b565b916080850192835260a481013560a086015261082f60c48201610a2f565b60c086015261084060e48201610a2f565b60e0860152610104810135801515810361010d576101008601526101248101356001600160401b03811161010d576101209160046108819236920101610a5e565b94019384526024356001600160401b03811161010d576108a5903690600401610a5e565b927f00000000000000000000000000000000000000000000000000000000000000009051036109a057516001600160401b03168015159081610996575b5061098757516001600160401b03166109785761091c61090d60209351848082518301019101610b90565b91838082518301019101610b90565b815181516001600160a01b039081169116149182610967575b82610947575b50506040519015158152f35b6040908101519101516001600160a01b039081169116149050828061093b565b838101518285015111159250610935565b637b6227e960e11b5f5260045ffd5b631ab7da6b60e01b5f5260045ffd5b90504211846108e2565b635f9bd90760e11b5f5260045ffd5b61014081019081106001600160401b038211176109cb57604052565b634e487b7160e01b5f52604160045260245ffd5b608081019081106001600160401b038211176109cb57604052565b90601f801991011681019081106001600160401b038211176109cb57604052565b35906001600160401b038216820361010d57565b35906001600160a01b038216820361010d57565b6001600160401b0381116109cb57601f01601f191660200190565b81601f8201121561010d57803590610a7582610a43565b92610a8360405194856109fa565b8284526020838301011161010d57815f926020809301838601378301015290565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f8401121561010d578235916001600160401b03831161010d576020808501948460051b01011161010d57565b604060031982011261010d576004356001600160401b03811161010d5781610b2291600401610ac8565b92909291602435906001600160401b03821161010d57610b4491600401610ac8565b9091565b602060031982011261010d57600435906001600160401b03821161010d5761014090829003600319011261010d5760040190565b51906001600160a01b038216820361010d57565b9081606091031261010d5760405190606082018281106001600160401b038211176109cb57610bd9916040918252610bc781610b7c565b84526020810151602085015201610b7c565b604082015290565b51906001600160401b038216820361010d57565b5190811515820361010d57565b929192610c0e82610a43565b91610c1c60405193846109fa565b82948184528183011161010d578281602093845f96015e010152565b9190811015610c485760051b0190565b634e487b7160e01b5f52603260045260245ffd5b9190811015610c485760051b8101359061013e198136030182121561010d570190565b929091928183036101f7575f91345b848410610ca057505050505050600190565b610cab848388610c38565b358181116101e857610cc1610127868887610c5c565b15610cd25760019103930192610c8e565b505050505050505f90565b909190600435906001600160a01b0382169081830361010d576044356001600160a01b0381169290919083830361010d576040516323b872dd60e01b81526001600160a01b03909216600483015260248281018590523560448301819052916020816064815f865af19081156103a0575f91610f37575b5015610f285760405194506020850152604084015250606082015260608152610d7e6080826109fa565b6040519260c084018481106001600160401b038211176109cb5760405260018060a01b0316908184525f6020850152600160408501525f606085015260808401525f60a084015260405160408101908082106001600160401b038311176109cb576020916040527f000000000000000000000000000000000000000000000000000000000000000081528181019485526040518095819263f17325e760e01b8352846004840152516024830152516040604483015260018060a01b0381511660648301526001600160401b03848201511660848301526040810151151560a4830152606081015160c483015260a0610e86608083015160c060e4860152610124850190610aa4565b91015161010483015203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19283156103a0575f93610ef4575b50827f4b5d781b1f4414459813c44d669c7821fcdec72a83b67c0303229be68d03ad055f80a3565b9092506020813d602011610f20575b81610f10602093836109fa565b8101031261010d5751915f610ecc565b3d9150610f03565b63078d696560e31b5f5260045ffd5b90506020813d602011610f69575b81610f52602093836109fa565b8101031261010d57610f6390610bf5565b5f610d54565b3d9150610f45565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8210156110bb575b806d04ee2d6d415b85acef8100000000600a9210156110a0575b662386f26fc1000081101561108c575b6305f5e10081101561107b575b61271081101561106c575b606481101561105e575b1015611053575b600a60216001840193610ff885610a43565b9461100660405196876109fa565b808652611015601f1991610a43565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561104e57600a9091611020565b505090565b600190910190610fe6565b606460029104930192610fdf565b61271060049104930192610fd5565b6305f5e10060089104930192610fca565b662386f26fc1000060109104930192610fbd565b6d04ee2d6d415b85acef810000000060209104930192610fad565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104610f93565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361111057565b634ca8886760e01b5f5260045ffd5b60e001356001600160a01b038116810361010d576001600160a01b031630149056fea2646970667358221220a393a830467f6eb8f32a14cf3712fa47e6e8cef6cadae89ecb8e144f9e760ac264736f6c634300081a0033",
    "sourceMap": "495:2091:44:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;495:2091:44;;;;1026:4;759:14:4;;688:1:6;783:14:4;;-1:-1:-1;807:14:4;;708:26:6;704:76;;495:2091:44;790:10:6;;495:2091:44;790:10:6;;;712::39;;732:32;;-1:-1:-1;495:2091:44;;;;;;;;;;;795:48:39;;495:2091:44;795:48:39;;;495:2091:44;;;;;;;;;;;;;;;;;;;;;827:4:39;495:2091:44;;;;1026:4;495:2091;;;;;;-1:-1:-1;;495:2091:44;;;795:48:39;;;;;;;;;;-1:-1:-1;795:48:39;;;-1:-1:-1;774:69:39;;;495:2091:44;;;;;;;;759:14:4;495:2091:44;;;;;783:14:4;495:2091:44;;;;;807:14:4;495:2091:44;;;;;790:10:6;495:2091:44;;;;;732:32:39;495:2091:44;;;;;712:10:39;495:2091:44;;;;;;;;;;774:69:39;495:2091:44;;;;;;;;;;;;;;;;;;;;;;;;;;795:48:39;;;495:2091:44;795:48:39;;495:2091:44;795:48:39;;;;;;495:2091:44;795:48:39;;;:::i;:::-;;;495:2091:44;;;;;795:48:39;;;495:2091:44;-1:-1:-1;495:2091:44;;795:48:39;;;-1:-1:-1;795:48:39;;;495:2091:44;;;-1:-1:-1;495:2091:44;;;;;704:76:6;757:12;;;-1:-1:-1;757:12:6;;-1:-1:-1;757:12:6;495:2091:44;;;;-1:-1:-1;495:2091:44;;;;;-1:-1:-1;495:2091:44;;;;;;-1:-1:-1;;495:2091:44;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610029575b50361561001a575f80fd5b631574f9f360e01b5f5260045ffd5b5f3560e01c9081631272ff8b146107945750806318e9f3071461077757806354fd4d50146106755780635bf2f20d1461063b5780635cc02d2f146103ab5780636b122fe01461020657806388e5b2d91461018c57806391db0b7e1461016d578063ce46e04614610153578063e49617e114610136578063e60c3505146101115763fba22190146100b9575f61000f565b3461010d57366003190160a0811261010d5760601361010d576064356001600160a01b038116810361010d57608435906001600160a01b038216820361010d5760209161010591610cdd565b604051908152f35b5f80fd5b602061012c61011f36610b48565b6101276110de565b61111f565b6040519015158152f35b61013f36610b48565b506101486110de565b602060405160018152f35b3461010d575f36600319011261010d5760206040515f8152f35b602061012c61017b36610af8565b926101879291926110de565b610c7f565b61019536610af8565b6101a09291926110de565b8082036101f7575f90345b8383106101bd57602060405160018152f35b6101c8838387610c38565b358181116101e8576001916101de85878a610c5c565b50039201916101ab565b63044044a560e21b5f5260045ffd5b63251f56a160e21b5f5260045ffd5b3461010d575f36600319011261010d57606080604051610225816109df565b5f81525f60208201525f604082015201526040516351753e3760e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156103a0575f906102f0575b6060906102ec604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a0830190610aa4565b0390f35b503d805f833e61030081836109fa565b81019060208183031261010d578051906001600160401b03821161010d570160808183031261010d5760405190610336826109df565b8051825260208101516001600160a01b038116810361010d57602083015261036060408201610bf5565b60408301526060810151906001600160401b03821161010d570182601f8201121561010d5760609281602061039793519101610c02565b828201526102a6565b6040513d5f823e3d90fd5b3461010d57602036600319011261010d5760606101206040516103cd816109af565b5f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f61010082015201526040516328c44a9960e21b815260043560048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103a0575f91610536575b506020810180517f000000000000000000000000000000000000000000000000000000000000000003610527576102ec61012060405193849360208552815160208601525160408501526001600160401b0360408201511660608501526001600160401b0360608201511660808501526001600160401b0360808201511660a085015260a081015160c085015260018060a01b0360c08201511660e085015260018060a01b0360e082015116610100850152610100810151151582850152015161014080840152610160830190610aa4565b63295d5f3960e01b5f5260045ffd5b90503d805f833e61054781836109fa565b81019060208183031261010d578051906001600160401b03821161010d5701906101408282031261010d576040519161057f836109af565b805183526020810151602084015261059960408201610be1565b60408401526105aa60608201610be1565b60608401526105bb60808201610be1565b608084015260a081015160a08401526105d660c08201610b7c565b60c08401526105e760e08201610b7c565b60e08401526105f96101008201610bf5565b610100840152610120810151906001600160401b03821161010d57019080601f8301121561010d57815161062f92602001610c02565b61012082015281610455565b3461010d575f36600319011261010d5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461010d575f36600319011261010d576102ec602061076360016106b87f0000000000000000000000000000000000000000000000000000000000000000610f71565b81846106e37f0000000000000000000000000000000000000000000000000000000000000000610f71565b818061070e7f0000000000000000000000000000000000000000000000000000000000000000610f71565b9260405199878b985191829101848a015e870190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e01015f838201520301601f1981018352826109fa565b604051918291602083526020830190610aa4565b3461010d57606036600319011261010d5760206101053333610cdd565b3461010d57606036600319011261010d576004356001600160401b03811161010d57610140600319823603011261010d576107ce826109af565b806004013582526020820190602481013582526107ed60448201610a1b565b60408401526107fe60648201610a1b565b6060840190815261081160848301610a1b565b916080850192835260a481013560a086015261082f60c48201610a2f565b60c086015261084060e48201610a2f565b60e0860152610104810135801515810361010d576101008601526101248101356001600160401b03811161010d576101209160046108819236920101610a5e565b94019384526024356001600160401b03811161010d576108a5903690600401610a5e565b927f00000000000000000000000000000000000000000000000000000000000000009051036109a057516001600160401b03168015159081610996575b5061098757516001600160401b03166109785761091c61090d60209351848082518301019101610b90565b91838082518301019101610b90565b815181516001600160a01b039081169116149182610967575b82610947575b50506040519015158152f35b6040908101519101516001600160a01b039081169116149050828061093b565b838101518285015111159250610935565b637b6227e960e11b5f5260045ffd5b631ab7da6b60e01b5f5260045ffd5b90504211846108e2565b635f9bd90760e11b5f5260045ffd5b61014081019081106001600160401b038211176109cb57604052565b634e487b7160e01b5f52604160045260245ffd5b608081019081106001600160401b038211176109cb57604052565b90601f801991011681019081106001600160401b038211176109cb57604052565b35906001600160401b038216820361010d57565b35906001600160a01b038216820361010d57565b6001600160401b0381116109cb57601f01601f191660200190565b81601f8201121561010d57803590610a7582610a43565b92610a8360405194856109fa565b8284526020838301011161010d57815f926020809301838601378301015290565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f8401121561010d578235916001600160401b03831161010d576020808501948460051b01011161010d57565b604060031982011261010d576004356001600160401b03811161010d5781610b2291600401610ac8565b92909291602435906001600160401b03821161010d57610b4491600401610ac8565b9091565b602060031982011261010d57600435906001600160401b03821161010d5761014090829003600319011261010d5760040190565b51906001600160a01b038216820361010d57565b9081606091031261010d5760405190606082018281106001600160401b038211176109cb57610bd9916040918252610bc781610b7c565b84526020810151602085015201610b7c565b604082015290565b51906001600160401b038216820361010d57565b5190811515820361010d57565b929192610c0e82610a43565b91610c1c60405193846109fa565b82948184528183011161010d578281602093845f96015e010152565b9190811015610c485760051b0190565b634e487b7160e01b5f52603260045260245ffd5b9190811015610c485760051b8101359061013e198136030182121561010d570190565b929091928183036101f7575f91345b848410610ca057505050505050600190565b610cab848388610c38565b358181116101e857610cc1610127868887610c5c565b15610cd25760019103930192610c8e565b505050505050505f90565b909190600435906001600160a01b0382169081830361010d576044356001600160a01b0381169290919083830361010d576040516323b872dd60e01b81526001600160a01b03909216600483015260248281018590523560448301819052916020816064815f865af19081156103a0575f91610f37575b5015610f285760405194506020850152604084015250606082015260608152610d7e6080826109fa565b6040519260c084018481106001600160401b038211176109cb5760405260018060a01b0316908184525f6020850152600160408501525f606085015260808401525f60a084015260405160408101908082106001600160401b038311176109cb576020916040527f000000000000000000000000000000000000000000000000000000000000000081528181019485526040518095819263f17325e760e01b8352846004840152516024830152516040604483015260018060a01b0381511660648301526001600160401b03848201511660848301526040810151151560a4830152606081015160c483015260a0610e86608083015160c060e4860152610124850190610aa4565b91015161010483015203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19283156103a0575f93610ef4575b50827f4b5d781b1f4414459813c44d669c7821fcdec72a83b67c0303229be68d03ad055f80a3565b9092506020813d602011610f20575b81610f10602093836109fa565b8101031261010d5751915f610ecc565b3d9150610f03565b63078d696560e31b5f5260045ffd5b90506020813d602011610f69575b81610f52602093836109fa565b8101031261010d57610f6390610bf5565b5f610d54565b3d9150610f45565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8210156110bb575b806d04ee2d6d415b85acef8100000000600a9210156110a0575b662386f26fc1000081101561108c575b6305f5e10081101561107b575b61271081101561106c575b606481101561105e575b1015611053575b600a60216001840193610ff885610a43565b9461100660405196876109fa565b808652611015601f1991610a43565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561104e57600a9091611020565b505090565b600190910190610fe6565b606460029104930192610fdf565b61271060049104930192610fd5565b6305f5e10060089104930192610fca565b662386f26fc1000060109104930192610fbd565b6d04ee2d6d415b85acef810000000060209104930192610fad565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104610f93565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361111057565b634ca8886760e01b5f5260045ffd5b60e001356001600160a01b038116810361010d576001600160a01b031630149056fea2646970667358221220a393a830467f6eb8f32a14cf3712fa47e6e8cef6cadae89ecb8e144f9e760ac264736f6c634300081a0033",
    "sourceMap": "495:2091:44:-:0;;;;;;;;;;-1:-1:-1;495:2091:44;;;;;;;;;1183:12:6;;;1054:5;1183:12;495:2091:44;1054:5:6;1183:12;495:2091:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;495:2091:44;;;;;;;-1:-1:-1;495:2091:44;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1354:39:6;495:2091:44;;;:::i;:::-;881:58:6;;:::i;:::-;1354:39;:::i;:::-;495:2091:44;;;;;;;;;;;;:::i;:::-;;881:58:6;;:::i;:::-;495:2091:44;;;1240:4:39;495:2091:44;;;;;;;;;-1:-1:-1;;495:2091:44;;;;;;;;;;;;;1442:1461:6;495:2091:44;;;:::i;:::-;881:58:6;;;;;;:::i;:::-;1442:1461;:::i;495:2091:44:-;;;;:::i;:::-;881:58:6;;;;;:::i;:::-;3340:23;;;3336:76;;495:2091:44;;3844:9:6;3884:10;;;;;;495:2091:44;;;1489:1:0;495:2091:44;;;3896:19:6;4037:9;;;;;:::i;:::-;495:2091:44;4064:22:6;;;4060:87;;1489:1:0;4284:15:6;;;;;;:::i;:::-;;495:2091:44;3896:19:6;495:2091:44;3869:13:6;;;4060:87;4113:19;;;495:2091:44;4113:19:6;495:2091:44;;4113:19:6;3336:76;3386:15;;;495:2091:44;3386:15:6;495:2091:44;;3386:15:6;495:2091:44;;;;;;-1:-1:-1;;495:2091:44;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1619:44:39;;1644:18;495:2091:44;1619:44:39;;495:2091:44;;;1619:44:39;495:2091:44;;;;;;1619:14:39;495:2091:44;1619:44:39;;;;;;495:2091:44;1619:44:39;;;495:2091:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1619:44:39;;;;495:2091:44;1619:44:39;;;;;;:::i;:::-;;;495:2091:44;;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1619:44:39;;;495:2091:44;;;;;;;;;;;;;;;-1:-1:-1;;495:2091:44;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:23:39;;495:2091:44;;;1392:23:39;;495:2091:44;;;1392:23:39;495:2091:44;;;;;;1392:3:39;495:2091:44;1392:23:39;;;;;;;495:2091:44;1392:23:39;;;495:2091:44;1429:18:39;495:2091:44;1429:18:39;;495:2091:44;;1451:18:39;1429:40;1425:71;;495:2091:44;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1425:71:39:-;1478:18;;;495:2091:44;1478:18:39;495:2091:44;;1478:18:39;1392:23;;;;;495:2091:44;1392:23:39;;;;;;:::i;:::-;;;495:2091:44;;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1392:23:39;;;495:2091:44;;;;;;-1:-1:-1;;495:2091:44;;;;;;;468:43:39;495:2091:44;;;;;;;;;-1:-1:-1;;495:2091:44;;;;;1055:104:4;;495:2091:44;1072:24:4;1089:6;1072:24;:::i;:::-;1120:6;;1103:24;1120:6;1103:24;:::i;:::-;1151:6;;1134:24;1151:6;1134:24;:::i;:::-;495:2091:44;;;;;;;;;;;;1055:104:4;;;495:2091:44;;;;-1:-1:-1;;;495:2091:44;;;;;;;;;;;;;;;;;-1:-1:-1;;;495:2091:44;;;;;;;;;;;;;;;;;;;;;1055:104:4;;;;;;;;;;:::i;:::-;495:2091:44;;;;;1055:104:4;495:2091:44;;1055:104:4;495:2091:44;;;;:::i;:::-;;;;;;-1:-1:-1;;495:2091:44;;;;;1914:46;1937:10;;1914:46;:::i;495:2091::-;;;;;;-1:-1:-1;;495:2091:44;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;:::i;:::-;1973:611;2183:18;495:2091;;1006:26:38;1002:54;;495:2091:44;-1:-1:-1;;;;;495:2091:44;351:29:38;;;;;:87;;495:2091:44;714:54:38;;;495:2091:44;-1:-1:-1;;;;;495:2091:44;778:57:38;;2379:35:44;2258:77;495:2091;2282:14;;495:2091;;;;2258:77;;;;;;:::i;:::-;495:2091;;;;;2379:35;;;;;;:::i;:::-;495:2091;;;;-1:-1:-1;;;;;495:2091:44;;;;;2444:33;;;:84;;495:2091;2444:133;;;495:2091;2425:152;;495:2091;;;;;;;;2444:133;495:2091;2544:13;;;495:2091;2561:16;;495:2091;-1:-1:-1;;;;;495:2091:44;;;;;2544:33;;-1:-1:-1;2444:133:44;;;;:84;2493:14;;;495:2091;2511:17;;;495:2091;-1:-1:-1;2493:35:44;;-1:-1:-1;2444:84:44;;778:57:38;815:20;;;495:2091:44;815:20:38;495:2091:44;;815:20:38;714:54;751:17;;;495:2091:44;751:17:38;495:2091:44;;751:17:38;351:87;423:15;;;-1:-1:-1;351:87:38;;;1002:54;1041:15;;;495:2091:44;1041:15:38;495:2091:44;;1041:15:38;495:2091:44;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;:::o;:::-;;;;-1:-1:-1;495:2091:44;;;;;-1:-1:-1;495:2091:44;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;:::o;:::-;;;1055:104:4;;495:2091:44;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;495:2091:44;;;;;;:::o;:::-;;;-1:-1:-1;;;;;495:2091:44;;;;;;:::o;:::-;-1:-1:-1;;;;;495:2091:44;;;;;;-1:-1:-1;;495:2091:44;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;495:2091:44;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;495:2091:44;;;;;;;;-1:-1:-1;;495:2091:44;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;495:2091:44;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;495:2091:44;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;-1:-1:-1;;495:2091:44;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;495:2091:44;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;-1:-1:-1;;;;;495:2091:44;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;495:2091:44;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1442:1461:6:-;;;;;1649:23;;;1645:76;;2190:1;;2153:9;2193:10;;;;;;2885:11;;;;;;1489:1:0;1442:1461:6;:::o;2205:19::-;2346:9;;;;;:::i;:::-;495:2091:44;2373:22:6;;;2369:87;;2584:33;2594:15;;;;;:::i;2584:33::-;;2580:84;;1489:1:0;495:2091:44;;2205:19:6;495:2091:44;2178:13:6;;;2580:84;2637:12;;;;;;;2190:1;2637:12;:::o;1053:742:44:-;;;;495:2091;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;1256:10;495:2091;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;1256:10;495:2091;-1:-1:-1;;;1217:63:44;;-1:-1:-1;;;;;495:2091:44;;;;1217:63;;495:2091;1268:11;495:2091;;;;;;;1256:10;495:2091;;;;;;1268:11;495:2091;1217:63;495:2091;-1:-1:-1;1217:63:44;;;;;;;;-1:-1:-1;1217:63:44;;;1053:742;1216:64;;1212:105;;1256:10;495:2091;;;1268:11;1655:16;;495:2091;1256:10;495:2091;;;;;;;;;1655:16;;;;;;:::i;:::-;1256:10;495:2091;;;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;;;;;;;;;-1:-1:-1;1268:11:44;1446:274;;495:2091;;1256:10;1446:274;;495:2091;-1:-1:-1;495:2091:44;1446:274;;495:2091;1655:16;1446:274;;495:2091;-1:-1:-1;1446:274:44;;;495:2091;1256:10;495:2091;1256:10;495:2091;;;;;;-1:-1:-1;;;;;495:2091:44;;;;;1268:11;495:2091;1256:10;495:2091;1404:18;495:2091;;1359:376;;;495:2091;;;1256:10;495:2091;;;;;;;;1335:410;;;495:2091;1335:410;;495:2091;;1268:11;495:2091;;;;1256:10;;495:2091;;;;;;;;;;;1217:63;495:2091;;;-1:-1:-1;;;;;495:2091:44;;;;;;;;;1256:10;495:2091;;;;;;;;;;;;;;;;;1446:274;495:2091;1655:16;495:2091;;;;;;;;;;;;;:::i;:::-;;;;;;;;1335:410;495:2091;-1:-1:-1;1335:3:44;-1:-1:-1;;;;;495:2091:44;1335:410;;;;;;;-1:-1:-1;1335:410:44;;;1053:742;1328:417;;1760:28;-1:-1:-1;1760:28:44;;1053:742::o;1335:410::-;;;;1268:11;1335:410;;1268:11;1335:410;;;;;;1268:11;1335:410;;;:::i;:::-;;;495:2091;;;;;1335:410;;;;;;;-1:-1:-1;1335:410:44;;1212:105;1301:16;;;-1:-1:-1;1301:16:44;495:2091;-1:-1:-1;1301:16:44;1217:63;;;1268:11;1217:63;;1268:11;1217:63;;;;;;1268:11;1217:63;;;:::i;:::-;;;495:2091;;;;;;;:::i;:::-;1217:63;;;;;;-1:-1:-1;1217:63:44;;637:632:32;759:17;-1:-1:-1;25444:17:34;-1:-1:-1;;;25444:17:34;;;25440:103;;637:632:32;25560:17:34;25569:8;26140:7;25560:17;;;25556:103;;637:632:32;25685:8:34;25676:17;;;25672:103;;637:632:32;25801:7:34;25792:16;;;25788:100;;637:632:32;25914:7:34;25905:16;;;25901:100;;637:632:32;26027:7:34;26018:16;;;26014:100;;637:632:32;26131:16:34;;26127:66;;637:632:32;26140:7:34;874:92:32;779:1;495:2091:44;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1055:104:4;;495:2091:44;;:::i;:::-;;;;;;;874:92:32;;;979:247;-1:-1:-1;;495:2091:44;;-1:-1:-1;;;1033:111:32;;;;495:2091:44;1033:111:32;495:2091:44;1194:10:32;;1190:21;;26140:7:34;979:247:32;;;;1190:21;1206:5;;637:632;:::o;26127:66:34:-;26177:1;495:2091:44;;;;26127:66:34;;26014:100;26027:7;26098:1;495:2091:44;;;;26014:100:34;;;25901;25914:7;25985:1;495:2091:44;;;;25901:100:34;;;25788;25801:7;25872:1;495:2091:44;;;;25788:100:34;;;25672:103;25685:8;25758:2;495:2091:44;;;;25672:103:34;;;25556;25569:8;25642:2;495:2091:44;;;;25556:103:34;;;25440;-1:-1:-1;25526:2:34;;-1:-1:-1;;;;495:2091:44;;25440:103:34;;6040:128:6;6109:4;-1:-1:-1;;;;;495:2091:44;6087:10:6;:27;6083:79;;6040:128::o;6083:79::-;6137:14;;;;;;;;856:240:39;1052:20;;495:2091:44;-1:-1:-1;;;;;495:2091:44;;;;;;-1:-1:-1;;;;;495:2091:44;1084:4:39;1052:37;;856:240::o",
    "linkReferences": {},
    "immutableReferences": {
      "446": [
        {
          "start": 1684,
          "length": 32
        }
      ],
      "448": [
        {
          "start": 1727,
          "length": 32
        }
      ],
      "450": [
        {
          "start": 1770,
          "length": 32
        }
      ],
      "588": [
        {
          "start": 4320,
          "length": 32
        }
      ],
      "41211": [
        {
          "start": 631,
          "length": 32
        }
      ],
      "41214": [
        {
          "start": 1061,
          "length": 32
        },
        {
          "start": 3732,
          "length": 32
        }
      ],
      "41216": [
        {
          "start": 581,
          "length": 32
        },
        {
          "start": 1118,
          "length": 32
        },
        {
          "start": 1618,
          "length": 32
        },
        {
          "start": 2216,
          "length": 32
        },
        {
          "start": 3559,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ATTESTATION_SCHEMA()": "5bf2f20d",
    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
    "checkStatement((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": "1272ff8b",
    "getSchema()": "6b122fe0",
    "getStatement(bytes32)": "5cc02d2f",
    "isPayable()": "ce46e046",
    "makeStatement((address,uint256,address))": "18e9f307",
    "makeStatementFor((address,uint256,address),address,address)": "fba22190",
    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"_schemaRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSchema\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFromStatement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"payment\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"PaymentMade\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ATTESTATION_SCHEMA\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"statement\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"checkStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getStatement\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"internalType\":\"struct ERC20PaymentObligation.StatementData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"makeStatement\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"internalType\":\"struct ERC20PaymentObligation.StatementData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"makeStatementFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Statements/ERC20PaymentObligation.sol\":\"ERC20PaymentObligation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"lib/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808\",\"dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f\",\"dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR\"]},\"lib/eas-contracts/contracts/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828\",\"dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440\",\"dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426\",\"dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY\"]},\"src/ArbiterUtils.sol\":{\"keccak256\":\"0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265\",\"dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ\"]},\"src/BaseStatement.sol\":{\"keccak256\":\"0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd\",\"dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778\",\"dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp\"]},\"src/Statements/ERC20PaymentObligation.sol\":{\"keccak256\":\"0xf5de5b9f7f9f83dc1df346f1d2e66d2d3519632b98ab4b7e28b11251be2f4fdf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc3201e9225988f0ad8ebddd1158cd7f361e05c8823188e2cf9535bef58e0746\",\"dweb:/ipfs/QmZ5EQFS6greLQYszTmJ8ox1BPFxsdmAdqjmFQ14rfqMMN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEAS",
              "name": "_eas",
              "type": "address"
            },
            {
              "internalType": "contract ISchemaRegistry",
              "name": "_schemaRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessDenied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AttestationRevoked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineExpired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEAS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPayment"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSchema"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotFromStatement"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPayable"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "payment",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PaymentMade",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ATTESTATION_SCHEMA",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "attest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "statement",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "demand",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkStatement",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "struct SchemaRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStatement",
          "outputs": [
            {
              "internalType": "struct Attestation",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isPayable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC20PaymentObligation.StatementData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "payee",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeStatement",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ERC20PaymentObligation.StatementData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "payee",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeStatementFor",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiAttest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiRevoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The new attestation."
            },
            "returns": {
              "_0": "Whether the attestation is valid."
            }
          },
          "isPayable()": {
            "returns": {
              "_0": "Whether the resolver supports ETH transfers."
            }
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The new attestations.",
              "values": "Explicit ETH amounts which were sent with each attestation."
            },
            "returns": {
              "_0": "Whether all the attestations are valid."
            }
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The existing attestations to be revoked.",
              "values": "Explicit ETH amounts which were sent with each revocation."
            },
            "returns": {
              "_0": "Whether the attestations can be revoked."
            }
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The existing attestation to be revoked."
            },
            "returns": {
              "_0": "Whether the attestation can be revoked."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation and verifies whether it's valid."
          },
          "isPayable()": {
            "notice": "Checks if the resolver can be sent ETH."
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes multiple attestations and verifies whether they are valid."
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation revocation and verifies if it can be revoked."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@eas/=lib/eas-contracts/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/eas-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Statements/ERC20PaymentObligation.sol": "ERC20PaymentObligation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/eas-contracts/contracts/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/IEAS.sol": {
        "keccak256": "0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12",
        "urls": [
          "bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880",
          "dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
        "keccak256": "0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754",
        "urls": [
          "bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158",
          "dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISemver.sol": {
        "keccak256": "0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18",
        "urls": [
          "bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0",
          "dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/Semver.sol": {
        "keccak256": "0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9",
        "urls": [
          "bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808",
          "dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb",
        "urls": [
          "bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f",
          "dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
        "keccak256": "0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983",
        "urls": [
          "bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828",
          "dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c",
        "urls": [
          "bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4",
          "dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2",
        "urls": [
          "bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440",
          "dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c",
        "urls": [
          "bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966",
          "dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481",
        "urls": [
          "bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb",
          "dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0",
        "urls": [
          "bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426",
          "dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"
        ],
        "license": "MIT"
      },
      "src/ArbiterUtils.sol": {
        "keccak256": "0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c",
        "urls": [
          "bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265",
          "dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ"
        ],
        "license": "UNLICENSED"
      },
      "src/BaseStatement.sol": {
        "keccak256": "0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba",
        "urls": [
          "bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd",
          "dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs"
        ],
        "license": "UNLICENSED"
      },
      "src/IArbiter.sol": {
        "keccak256": "0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647",
        "urls": [
          "bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778",
          "dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp"
        ],
        "license": "UNLICENSED"
      },
      "src/Statements/ERC20PaymentObligation.sol": {
        "keccak256": "0xf5de5b9f7f9f83dc1df346f1d2e66d2d3519632b98ab4b7e28b11251be2f4fdf",
        "urls": [
          "bzz-raw://bc3201e9225988f0ad8ebddd1158cd7f361e05c8823188e2cf9535bef58e0746",
          "dweb:/ipfs/QmZ5EQFS6greLQYszTmJ8ox1BPFxsdmAdqjmFQ14rfqMMN"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 44
} as const;