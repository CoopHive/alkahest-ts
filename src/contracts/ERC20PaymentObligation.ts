export const abi = {
  abi: [
    {
      type: "constructor",
      inputs: [
        { name: "_eas", type: "address", internalType: "contract IEAS" },
        {
          name: "_schemaRegistry",
          type: "address",
          internalType: "contract ISchemaRegistry",
        },
      ],
      stateMutability: "nonpayable",
    },
    { type: "receive", stateMutability: "payable" },
    {
      type: "function",
      name: "ATTESTATION_SCHEMA",
      inputs: [],
      outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "attest",
      inputs: [
        {
          name: "attestation",
          type: "tuple",
          internalType: "struct Attestation",
          components: [
            { name: "uid", type: "bytes32", internalType: "bytes32" },
            { name: "schema", type: "bytes32", internalType: "bytes32" },
            { name: "time", type: "uint64", internalType: "uint64" },
            { name: "expirationTime", type: "uint64", internalType: "uint64" },
            { name: "revocationTime", type: "uint64", internalType: "uint64" },
            { name: "refUID", type: "bytes32", internalType: "bytes32" },
            { name: "recipient", type: "address", internalType: "address" },
            { name: "attester", type: "address", internalType: "address" },
            { name: "revocable", type: "bool", internalType: "bool" },
            { name: "data", type: "bytes", internalType: "bytes" },
          ],
        },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "cancelStatement",
      inputs: [{ name: "uid", type: "bytes32", internalType: "bytes32" }],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "checkStatement",
      inputs: [
        {
          name: "statement",
          type: "tuple",
          internalType: "struct Attestation",
          components: [
            { name: "uid", type: "bytes32", internalType: "bytes32" },
            { name: "schema", type: "bytes32", internalType: "bytes32" },
            { name: "time", type: "uint64", internalType: "uint64" },
            { name: "expirationTime", type: "uint64", internalType: "uint64" },
            { name: "revocationTime", type: "uint64", internalType: "uint64" },
            { name: "refUID", type: "bytes32", internalType: "bytes32" },
            { name: "recipient", type: "address", internalType: "address" },
            { name: "attester", type: "address", internalType: "address" },
            { name: "revocable", type: "bool", internalType: "bool" },
            { name: "data", type: "bytes", internalType: "bytes" },
          ],
        },
        { name: "demand", type: "bytes", internalType: "bytes" },
        { name: "", type: "bytes32", internalType: "bytes32" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "collectPayment",
      inputs: [
        { name: "_payment", type: "bytes32", internalType: "bytes32" },
        { name: "_fulfillment", type: "bytes32", internalType: "bytes32" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "getSchema",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "tuple",
          internalType: "struct SchemaRecord",
          components: [
            { name: "uid", type: "bytes32", internalType: "bytes32" },
            {
              name: "resolver",
              type: "address",
              internalType: "contract ISchemaResolver",
            },
            { name: "revocable", type: "bool", internalType: "bool" },
            { name: "schema", type: "string", internalType: "string" },
          ],
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "getStatement",
      inputs: [{ name: "uid", type: "bytes32", internalType: "bytes32" }],
      outputs: [
        {
          name: "",
          type: "tuple",
          internalType: "struct Attestation",
          components: [
            { name: "uid", type: "bytes32", internalType: "bytes32" },
            { name: "schema", type: "bytes32", internalType: "bytes32" },
            { name: "time", type: "uint64", internalType: "uint64" },
            { name: "expirationTime", type: "uint64", internalType: "uint64" },
            { name: "revocationTime", type: "uint64", internalType: "uint64" },
            { name: "refUID", type: "bytes32", internalType: "bytes32" },
            { name: "recipient", type: "address", internalType: "address" },
            { name: "attester", type: "address", internalType: "address" },
            { name: "revocable", type: "bool", internalType: "bool" },
            { name: "data", type: "bytes", internalType: "bytes" },
          ],
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "isPayable",
      inputs: [],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "pure",
    },
    {
      type: "function",
      name: "makeStatement",
      inputs: [
        {
          name: "data",
          type: "tuple",
          internalType: "struct ERC20PaymentObligation.StatementData",
          components: [
            { name: "token", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
            { name: "arbiter", type: "address", internalType: "address" },
            { name: "demand", type: "bytes", internalType: "bytes" },
          ],
        },
        { name: "expirationTime", type: "uint64", internalType: "uint64" },
        { name: "refUID", type: "bytes32", internalType: "bytes32" },
      ],
      outputs: [{ name: "uid_", type: "bytes32", internalType: "bytes32" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "makeStatementFor",
      inputs: [
        {
          name: "data",
          type: "tuple",
          internalType: "struct ERC20PaymentObligation.StatementData",
          components: [
            { name: "token", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
            { name: "arbiter", type: "address", internalType: "address" },
            { name: "demand", type: "bytes", internalType: "bytes" },
          ],
        },
        { name: "expirationTime", type: "uint64", internalType: "uint64" },
        { name: "refUID", type: "bytes32", internalType: "bytes32" },
        { name: "payer", type: "address", internalType: "address" },
        { name: "recipient", type: "address", internalType: "address" },
      ],
      outputs: [{ name: "uid_", type: "bytes32", internalType: "bytes32" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "multiAttest",
      inputs: [
        {
          name: "attestations",
          type: "tuple[]",
          internalType: "struct Attestation[]",
          components: [
            { name: "uid", type: "bytes32", internalType: "bytes32" },
            { name: "schema", type: "bytes32", internalType: "bytes32" },
            { name: "time", type: "uint64", internalType: "uint64" },
            { name: "expirationTime", type: "uint64", internalType: "uint64" },
            { name: "revocationTime", type: "uint64", internalType: "uint64" },
            { name: "refUID", type: "bytes32", internalType: "bytes32" },
            { name: "recipient", type: "address", internalType: "address" },
            { name: "attester", type: "address", internalType: "address" },
            { name: "revocable", type: "bool", internalType: "bool" },
            { name: "data", type: "bytes", internalType: "bytes" },
          ],
        },
        { name: "values", type: "uint256[]", internalType: "uint256[]" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "multiRevoke",
      inputs: [
        {
          name: "attestations",
          type: "tuple[]",
          internalType: "struct Attestation[]",
          components: [
            { name: "uid", type: "bytes32", internalType: "bytes32" },
            { name: "schema", type: "bytes32", internalType: "bytes32" },
            { name: "time", type: "uint64", internalType: "uint64" },
            { name: "expirationTime", type: "uint64", internalType: "uint64" },
            { name: "revocationTime", type: "uint64", internalType: "uint64" },
            { name: "refUID", type: "bytes32", internalType: "bytes32" },
            { name: "recipient", type: "address", internalType: "address" },
            { name: "attester", type: "address", internalType: "address" },
            { name: "revocable", type: "bool", internalType: "bool" },
            { name: "data", type: "bytes", internalType: "bytes" },
          ],
        },
        { name: "values", type: "uint256[]", internalType: "uint256[]" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "revoke",
      inputs: [
        {
          name: "attestation",
          type: "tuple",
          internalType: "struct Attestation",
          components: [
            { name: "uid", type: "bytes32", internalType: "bytes32" },
            { name: "schema", type: "bytes32", internalType: "bytes32" },
            { name: "time", type: "uint64", internalType: "uint64" },
            { name: "expirationTime", type: "uint64", internalType: "uint64" },
            { name: "revocationTime", type: "uint64", internalType: "uint64" },
            { name: "refUID", type: "bytes32", internalType: "bytes32" },
            { name: "recipient", type: "address", internalType: "address" },
            { name: "attester", type: "address", internalType: "address" },
            { name: "revocable", type: "bool", internalType: "bool" },
            { name: "data", type: "bytes", internalType: "bytes" },
          ],
        },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "version",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "event",
      name: "PaymentCancelled",
      inputs: [
        {
          name: "payment",
          type: "bytes32",
          indexed: true,
          internalType: "bytes32",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "PaymentClaimed",
      inputs: [
        {
          name: "payment",
          type: "bytes32",
          indexed: true,
          internalType: "bytes32",
        },
        {
          name: "fulfillment",
          type: "bytes32",
          indexed: true,
          internalType: "bytes32",
        },
        {
          name: "fulfiller",
          type: "address",
          indexed: true,
          internalType: "address",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "PaymentMade",
      inputs: [
        {
          name: "payment",
          type: "bytes32",
          indexed: true,
          internalType: "bytes32",
        },
        {
          name: "buyer",
          type: "address",
          indexed: true,
          internalType: "address",
        },
      ],
      anonymous: false,
    },
    { type: "error", name: "AccessDenied", inputs: [] },
    { type: "error", name: "AttestationRevoked", inputs: [] },
    { type: "error", name: "DeadlineExpired", inputs: [] },
    { type: "error", name: "InsufficientValue", inputs: [] },
    { type: "error", name: "InvalidEAS", inputs: [] },
    { type: "error", name: "InvalidFulfillment", inputs: [] },
    { type: "error", name: "InvalidLength", inputs: [] },
    { type: "error", name: "InvalidPayment", inputs: [] },
    { type: "error", name: "InvalidPaymentAttestation", inputs: [] },
    { type: "error", name: "InvalidSchema", inputs: [] },
    { type: "error", name: "NotFromStatement", inputs: [] },
    { type: "error", name: "NotPayable", inputs: [] },
    { type: "error", name: "UnauthorizedCall", inputs: [] },
  ],
  bytecode: {
    object:
      "0x61016080604052346101ff57604081611b9780380380916100208285610239565b8339810103126101ff5780516001600160a01b038116918282036101ff5760200151916001600160a01b0383168084036101ff57604051606081016001600160401b0381118282101761022557604052603c815260208101927f6164647265737320746f6b656e2c2075696e7432353620616d6f756e742c206184527f64647265737320617262697465722c2062797465732064656d616e640000000060408301526001608052600360a0525f60c05215610216576084948460209560e05261012052610100525f604051958680958194630c1af44f60e31b8352606060048401525180918160648501528484015e818101830184905230602483015260016044830152601f01601f191681010301925af190811561020b575f916101d5575b506101405260405161193a908161025d8239608051816105a2015260a051816105ce015260c051816105f9015260e051816118c5015261010051816102570152610120518181816104960152818161070701528181610acb015261148c015261014051818181610225015281816104ce0152818161055f015281816107d001528181610b430152818161116701526113df0152f35b90506020813d602011610203575b816101f060209383610239565b810103126101ff57515f610140565b5f80fd5b3d91506101e3565b6040513d5f823e3d90fd5b6341bc07ff60e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b601f909101601f19168101906001600160401b038211908210176102255760405256fe6080806040526004361015610029575b50361561001a575f80fd5b631574f9f360e01b5f5260045ffd5b5f803560e01c918263039b9bf614610aa3575081631272ff8b1461098b57816330088bc9146106d557816348f9fb461461068657816354fd4d50146105825781635bf2f20d146105485781635cc02d2f1461041b5781636997007c1461039a5781636b122fe0146101e557816388e5b2d91461016757816391db0b7e1461013e578163ce46e0461461012057508063e49617e1146101035763e60c3505146100d1575f61000f565b60206100ef60e06100e136610f53565b6100e96118c3565b01611257565b6040516001600160a01b0390911630148152f35b61010c36610f53565b506101156118c3565b602060405160018152f35b3461013b578060031936011261013b57602090604051908152f35b80fd5b602061015d61014c36610f03565b926101589291926118c3565b6115b0565b6040519015158152f35b61017036610f03565b909261017d9492946118c3565b8185036101d6578291345b86841061019a57602060405160018152f35b6101a5848388611569565b35908082116101c757906001916101bd868a8761158d565b5003930192610188565b63044044a560e21b8652600486fd5b63251f56a160e21b8352600483fd5b3461013b578060031936011261013b5760608060405161020481610d32565b8381528360208201528360408201520152604051906351753e3760e11b82527f00000000000000000000000000000000000000000000000000000000000000006004830152808260248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561038e5780916102d1575b6060826102cd604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a0830190610e0d565b0390f35b90503d8082843e6102e28184610d4d565b82019160208184031261038a578051906001600160401b03821161038657019060808284031261013b576040519161031983610d32565b8051835260208101516001600160a01b038116810361038657602084015261034360408201610faf565b60408401526060810151906001600160401b03821161038657019083601f8301121561013b575060609281602061037c93519101610fbc565b8282015282610287565b8280fd5b5080fd5b604051903d90823e3d90fd5b3461013b5760a036600319011261013b576004356001600160401b03811161038a576080600319823603011261038a576103d2610d6e565b60643591906001600160a01b038316830361041757608435936001600160a01b038516850361013b57602061040f8686604435866004890161126b565b604051908152f35b8380fd5b3461013b57602036600319011261013b57606061012060405161043d81610d16565b83815283602082015283604082015283838201528360808201528360a08201528360c08201528360e0820152836101008201520152604051906328c44a9960e21b82526004356004830152808260248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa91821561053b578192610517575b5060208201517f00000000000000000000000000000000000000000000000000000000000000000361050857604051602080825281906102cd90820185610e31565b63295d5f3960e01b8152600490fd5b6105349192503d8084833e61052c8183610d4d565b81019061100c565b90826104c6565b50604051903d90823e3d90fd5b3461013b578060031936011261013b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461013b578060031936011261013b57602061067260016102cd936105c67f0000000000000000000000000000000000000000000000000000000000000000611756565b9082856105f27f0000000000000000000000000000000000000000000000000000000000000000611756565b818061061d7f0000000000000000000000000000000000000000000000000000000000000000611756565b926040519a888c995191829101848b015e880190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e010190838201520301601f198101835282610d4d565b604051918291602083526020830190610e0d565b3461013b57606036600319011261013b57600435906001600160401b03821161013b576080600319833603011261013b57602061040f836106c5610d6e565b339133916044359160040161126b565b3461013b57604036600319011261013b576040516328c44a9960e21b81526004803590820181905290919060248035907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908490869081845afa94851561090657849561096f575b506040516328c44a9960e21b815260048101839052948486602481855afa958615610926578596610953575b5061077c81611640565b1561094457906107a78261079f61012089950151602080825183010191016110e7565b97889161169b565b15610935576040516107b881610ce7565b848152856020820152604051906107ce82610ce7565b7f000000000000000000000000000000000000000000000000000000000000000082526020820152813b1561093157604051634692626760e01b815281516004820152602091820151805160248301529091015160448201529085908290606490829084905af1801561092657610911575b50845160c091909101805160209687015160405163a9059cbb60e01b81526001600160a01b0392831660048201526024810191909152969192879160449183918991165af18015610906576108cc575b6020945060018060a01b03905116917fced69528a678782a1d1e4df8091720cac356dacb471a544bdb0c896a3162d3956040519480a460018152f35b6020853d6020116108fe575b816108e560209383610d4d565b81010312610417576108f8602095610faf565b50610890565b3d91506108d8565b6040513d86823e3d90fd5b61091c858092610d4d565b6104175785610840565b6040513d87823e3d90fd5b8580fd5b630ebe58ef60e11b8552600485fd5b633129ca1960e11b8552600485fd5b6109689196503d8087833e61052c8183610d4d565b9486610772565b6109849195503d8086833e61052c8183610d4d565b9385610746565b3461013b57606036600319011261013b57600435906001600160401b03821161013b57610140600319833603011261013b57604051916109ca83610d16565b80600401358352602481013560208401526109e760448201610d84565b60408401526109f860648201610d84565b6060840152610a0960848201610d84565b608084015260a481013560a0840152610a2460c48201610d98565b60c0840152610a3560e48201610d98565b60e08401526101048101358015158103610386576101008401526101248101356001600160401b03811161038657610a7291369101600401610dc7565b610120830152602435906001600160401b03821161013b57602061015d84610a9d3660048701610dc7565b90611165565b9034610cb8576020366003190112610cb8576328c44a9960e21b8252600480359083018190527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165f84602481845afa938415610cad575f94610ccb575b5060c08401516001600160a01b03163303610cbc5760405190610b2b82610ce7565b8282525f602083015260405191610b4183610ce7565b7f000000000000000000000000000000000000000000000000000000000000000083526020830152803b15610cb857604051634692626760e01b815282516004820152602092830151805160248301529092015160448301525f908290606490829084905af18015610cad57610c91575b506020610c0c610bd0610120859601518380825183010191016110e7565b80519083015160405163a9059cbb60e01b815233600482015260248101919091529586926001600160a01b039092169183919082906044820190565b03925af18015610c8657610c4c575b602092507f5284be3d3122c1ff1d1ae65992c8c6b2808c7cf72b41d299de6cefc638263b446040519280a260018152f35b6020833d602011610c7e575b81610c6560209383610d4d565b8101031261038a57610c78602093610faf565b50610c1b565b3d9150610c58565b6040513d84823e3d90fd5b6101209392505f610ca191610d4d565b9091505f906020610bb2565b6040513d5f823e3d90fd5b5f80fd5b637bf6a16f60e01b5f5260045ffd5b610ce09194503d805f833e61052c8183610d4d565b9284610b09565b604081019081106001600160401b03821117610d0257604052565b634e487b7160e01b5f52604160045260245ffd5b61014081019081106001600160401b03821117610d0257604052565b608081019081106001600160401b03821117610d0257604052565b90601f801991011681019081106001600160401b03821117610d0257604052565b602435906001600160401b0382168203610cb857565b35906001600160401b0382168203610cb857565b35906001600160a01b0382168203610cb857565b6001600160401b038111610d0257601f01601f191660200190565b81601f82011215610cb857803590610dde82610dac565b92610dec6040519485610d4d565b82845260208383010111610cb857815f926020809301838601378301015290565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90610140610120610ed09380518452602081015160208501526001600160401b0360408201511660408501526001600160401b0360608201511660608501526001600160401b03608082015116608085015260a081015160a085015260018060a01b0360c08201511660c085015260018060a01b0360e08201511660e08501526101008101511515610100850152015191816101208201520190610e0d565b90565b9181601f84011215610cb8578235916001600160401b038311610cb8576020808501948460051b010111610cb857565b6040600319820112610cb8576004356001600160401b038111610cb85781610f2d91600401610ed3565b92909291602435906001600160401b038211610cb857610f4f91600401610ed3565b9091565b6020600319820112610cb857600435906001600160401b038211610cb857610140908290036003190112610cb85760040190565b51906001600160401b0382168203610cb857565b51906001600160a01b0382168203610cb857565b51908115158203610cb857565b929192610fc882610dac565b91610fd66040519384610d4d565b829481845281830111610cb8578281602093845f96015e010152565b9080601f83011215610cb8578151610ed092602001610fbc565b602081830312610cb8578051906001600160401b038211610cb8570161014081830312610cb8576040519161104083610d16565b815183526020820151602084015261105a60408301610f87565b604084015261106b60608301610f87565b606084015261107c60808301610f87565b608084015260a082015160a084015261109760c08301610f9b565b60c08401526110a860e08301610f9b565b60e08401526110ba6101008301610faf565b6101008401526101208201516001600160401b038111610cb8576110de9201610ff2565b61012082015290565b602081830312610cb8578051906001600160401b038211610cb85701608081830312610cb8576040519161111a83610d32565b61112382610f9b565b83526020820151602084015261113b60408301610f9b565b604084015260608201516001600160401b038111610cb85761115d9201610ff2565b606082015290565b7f00000000000000000000000000000000000000000000000000000000000000006020820151036112485761119981611640565b15611242576111b96101206111c9920151602080825183010191016110e7565b91602080825183010191016110e7565b815181516001600160a01b03908116911614918261122e575b8261120f575b826111f257505090565b606091925081015160208151910120910151602081519101201490565b604080820151908301516001600160a01b0390811691161492506111e8565b9150602082015160208201511115916111e2565b50505f90565b635f9bd90760e11b5f5260045ffd5b356001600160a01b0381168103610cb85790565b939493909291905f60206001600160a01b0361128684611257565b6040516323b872dd60e01b81526001600160a01b039097166004880152306024880152848301356044880181905296938492606492849291165af1908115610cad575f9161152f575b501561152057604051602080820152926001600160a01b036112f083610d98565b166040850152606084015260018060a01b0361130e60408301610d98565b1660808401526060810135601e1982360301811215610cb85701602081359101906001600160401b038111610cb8578036038213610cb857838160e09261137f94608060a08501528160c0850152848401375f838284010152601f801991011681010301601f198101845283610d4d565b6040519460c08601908682106001600160401b03831117610d02576001600160401b039160405260018060a01b03169384875216602086015260016040860152606085015260808401525f60a084015260206040516113dd81610ce7565b7f000000000000000000000000000000000000000000000000000000000000000081528181019485526040518095819263f17325e760e01b8352846004840152516024830152516040604483015260018060a01b0381511660648301526001600160401b03848201511660848301526040810151151560a4830152606081015160c483015260a061147e608083015160c060e4860152610124850190610e0d565b91015161010483015203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1928315610cad575f936114ec575b50827f4b5d781b1f4414459813c44d669c7821fcdec72a83b67c0303229be68d03ad055f80a3565b9092506020813d602011611518575b8161150860209383610d4d565b81010312610cb85751915f6114c4565b3d91506114fb565b63078d696560e31b5f5260045ffd5b90506020813d602011611561575b8161154a60209383610d4d565b81010312610cb85761155b90610faf565b5f6112cf565b3d915061153d565b91908110156115795760051b0190565b634e487b7160e01b5f52603260045260245ffd5b91908110156115795760051b8101359061013e1981360301821215610cb8570190565b919290818103611631575f91345b8284106115d057505050505050600190565b6115db848388611569565b35818111611622576115ee85858861158d565b30906001600160a01b03906116059060e001611257565b160361161757600191039301926115be565b505050505050505f90565b63044044a560e21b5f5260045ffd5b63251f56a160e21b5f5260045ffd5b6001600160401b036060820151168015159081611691575b5061168257608001516001600160401b031661167357600190565b637b6227e960e11b5f5260045ffd5b631ab7da6b60e01b5f5260045ffd5b905042115f611658565b919060a08301518061174d5750916020916116ec6116fe94606060018060a01b03604085015116930151935160405196879586948594631272ff8b60e01b8652606060048701526064860190610e31565b84810360031901602486015290610e0d565b90604483015203915afa908115610cad575f91611719575090565b90506020813d602011611745575b8161173460209383610d4d565b81010312610cb857610ed090610faf565b3d9150611727565b92509050511490565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8210156118a0575b806d04ee2d6d415b85acef8100000000600a921015611885575b662386f26fc10000811015611871575b6305f5e100811015611860575b612710811015611851575b6064811015611843575b1015611838575b600a602160018401936117dd85610dac565b946117eb6040519687610d4d565b8086526117fa601f1991610dac565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561183357600a9091611805565b505090565b6001909101906117cb565b6064600291049301926117c4565b612710600491049301926117ba565b6305f5e100600891049301926117af565b662386f26fc10000601091049301926117a2565b6d04ee2d6d415b85acef810000000060209104930192611792565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104611778565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036118f557565b634ca8886760e01b5f5260045ffdfea264697066735822122007d5828cff83525ceace73a39f51bc353eb20fcd746372440b08943b68abecda64736f6c634300081a0033",
    sourceMap:
      "495:5013:52:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;;;;;;;;;1357:4;759:14:4;;688:1:6;783:14:4;;-1:-1:-1;807:14:4;;708:26:6;704:76;;495:5013:52;790:10:6;;495:5013:52;790:10:6;;;712::50;;732:32;;-1:-1:-1;495:5013:52;;;;;;;;;;;795:48:50;;495:5013:52;795:48:50;;;495:5013:52;;;;;;;;;;;;;;;;;;;;;827:4:50;495:5013:52;;;;1357:4;495:5013;;;;;;-1:-1:-1;;495:5013:52;;;795:48:50;;;;;;;;;;-1:-1:-1;795:48:50;;;-1:-1:-1;774:69:50;;;495:5013:52;;;;;;;;759:14:4;495:5013:52;;;;;783:14:4;495:5013:52;;;;;807:14:4;495:5013:52;;;;;790:10:6;495:5013:52;;;;;732:32:50;495:5013:52;;;;;712:10:50;495:5013:52;;;;;;;;;;;;;;;;;;;;774:69:50;495:5013:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:48:50;;;495:5013:52;795:48:50;;495:5013:52;795:48:50;;;;;;495:5013:52;795:48:50;;;:::i;:::-;;;495:5013:52;;;;;795:48:50;;;495:5013:52;-1:-1:-1;495:5013:52;;795:48:50;;;-1:-1:-1;795:48:50;;;495:5013:52;;;-1:-1:-1;495:5013:52;;;;;704:76:6;757:12;;;-1:-1:-1;757:12:6;;-1:-1:-1;757:12:6;495:5013:52;;;;-1:-1:-1;495:5013:52;;;;;-1:-1:-1;495:5013:52;;;;;;-1:-1:-1;;495:5013:52;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;:::o",
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      "0x6080806040526004361015610029575b50361561001a575f80fd5b631574f9f360e01b5f5260045ffd5b5f803560e01c918263039b9bf614610aa3575081631272ff8b1461098b57816330088bc9146106d557816348f9fb461461068657816354fd4d50146105825781635bf2f20d146105485781635cc02d2f1461041b5781636997007c1461039a5781636b122fe0146101e557816388e5b2d91461016757816391db0b7e1461013e578163ce46e0461461012057508063e49617e1146101035763e60c3505146100d1575f61000f565b60206100ef60e06100e136610f53565b6100e96118c3565b01611257565b6040516001600160a01b0390911630148152f35b61010c36610f53565b506101156118c3565b602060405160018152f35b3461013b578060031936011261013b57602090604051908152f35b80fd5b602061015d61014c36610f03565b926101589291926118c3565b6115b0565b6040519015158152f35b61017036610f03565b909261017d9492946118c3565b8185036101d6578291345b86841061019a57602060405160018152f35b6101a5848388611569565b35908082116101c757906001916101bd868a8761158d565b5003930192610188565b63044044a560e21b8652600486fd5b63251f56a160e21b8352600483fd5b3461013b578060031936011261013b5760608060405161020481610d32565b8381528360208201528360408201520152604051906351753e3760e11b82527f00000000000000000000000000000000000000000000000000000000000000006004830152808260248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561038e5780916102d1575b6060826102cd604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a0830190610e0d565b0390f35b90503d8082843e6102e28184610d4d565b82019160208184031261038a578051906001600160401b03821161038657019060808284031261013b576040519161031983610d32565b8051835260208101516001600160a01b038116810361038657602084015261034360408201610faf565b60408401526060810151906001600160401b03821161038657019083601f8301121561013b575060609281602061037c93519101610fbc565b8282015282610287565b8280fd5b5080fd5b604051903d90823e3d90fd5b3461013b5760a036600319011261013b576004356001600160401b03811161038a576080600319823603011261038a576103d2610d6e565b60643591906001600160a01b038316830361041757608435936001600160a01b038516850361013b57602061040f8686604435866004890161126b565b604051908152f35b8380fd5b3461013b57602036600319011261013b57606061012060405161043d81610d16565b83815283602082015283604082015283838201528360808201528360a08201528360c08201528360e0820152836101008201520152604051906328c44a9960e21b82526004356004830152808260248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa91821561053b578192610517575b5060208201517f00000000000000000000000000000000000000000000000000000000000000000361050857604051602080825281906102cd90820185610e31565b63295d5f3960e01b8152600490fd5b6105349192503d8084833e61052c8183610d4d565b81019061100c565b90826104c6565b50604051903d90823e3d90fd5b3461013b578060031936011261013b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461013b578060031936011261013b57602061067260016102cd936105c67f0000000000000000000000000000000000000000000000000000000000000000611756565b9082856105f27f0000000000000000000000000000000000000000000000000000000000000000611756565b818061061d7f0000000000000000000000000000000000000000000000000000000000000000611756565b926040519a888c995191829101848b015e880190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e010190838201520301601f198101835282610d4d565b604051918291602083526020830190610e0d565b3461013b57606036600319011261013b57600435906001600160401b03821161013b576080600319833603011261013b57602061040f836106c5610d6e565b339133916044359160040161126b565b3461013b57604036600319011261013b576040516328c44a9960e21b81526004803590820181905290919060248035907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908490869081845afa94851561090657849561096f575b506040516328c44a9960e21b815260048101839052948486602481855afa958615610926578596610953575b5061077c81611640565b1561094457906107a78261079f61012089950151602080825183010191016110e7565b97889161169b565b15610935576040516107b881610ce7565b848152856020820152604051906107ce82610ce7565b7f000000000000000000000000000000000000000000000000000000000000000082526020820152813b1561093157604051634692626760e01b815281516004820152602091820151805160248301529091015160448201529085908290606490829084905af1801561092657610911575b50845160c091909101805160209687015160405163a9059cbb60e01b81526001600160a01b0392831660048201526024810191909152969192879160449183918991165af18015610906576108cc575b6020945060018060a01b03905116917fced69528a678782a1d1e4df8091720cac356dacb471a544bdb0c896a3162d3956040519480a460018152f35b6020853d6020116108fe575b816108e560209383610d4d565b81010312610417576108f8602095610faf565b50610890565b3d91506108d8565b6040513d86823e3d90fd5b61091c858092610d4d565b6104175785610840565b6040513d87823e3d90fd5b8580fd5b630ebe58ef60e11b8552600485fd5b633129ca1960e11b8552600485fd5b6109689196503d8087833e61052c8183610d4d565b9486610772565b6109849195503d8086833e61052c8183610d4d565b9385610746565b3461013b57606036600319011261013b57600435906001600160401b03821161013b57610140600319833603011261013b57604051916109ca83610d16565b80600401358352602481013560208401526109e760448201610d84565b60408401526109f860648201610d84565b6060840152610a0960848201610d84565b608084015260a481013560a0840152610a2460c48201610d98565b60c0840152610a3560e48201610d98565b60e08401526101048101358015158103610386576101008401526101248101356001600160401b03811161038657610a7291369101600401610dc7565b610120830152602435906001600160401b03821161013b57602061015d84610a9d3660048701610dc7565b90611165565b9034610cb8576020366003190112610cb8576328c44a9960e21b8252600480359083018190527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165f84602481845afa938415610cad575f94610ccb575b5060c08401516001600160a01b03163303610cbc5760405190610b2b82610ce7565b8282525f602083015260405191610b4183610ce7565b7f000000000000000000000000000000000000000000000000000000000000000083526020830152803b15610cb857604051634692626760e01b815282516004820152602092830151805160248301529092015160448301525f908290606490829084905af18015610cad57610c91575b506020610c0c610bd0610120859601518380825183010191016110e7565b80519083015160405163a9059cbb60e01b815233600482015260248101919091529586926001600160a01b039092169183919082906044820190565b03925af18015610c8657610c4c575b602092507f5284be3d3122c1ff1d1ae65992c8c6b2808c7cf72b41d299de6cefc638263b446040519280a260018152f35b6020833d602011610c7e575b81610c6560209383610d4d565b8101031261038a57610c78602093610faf565b50610c1b565b3d9150610c58565b6040513d84823e3d90fd5b6101209392505f610ca191610d4d565b9091505f906020610bb2565b6040513d5f823e3d90fd5b5f80fd5b637bf6a16f60e01b5f5260045ffd5b610ce09194503d805f833e61052c8183610d4d565b9284610b09565b604081019081106001600160401b03821117610d0257604052565b634e487b7160e01b5f52604160045260245ffd5b61014081019081106001600160401b03821117610d0257604052565b608081019081106001600160401b03821117610d0257604052565b90601f801991011681019081106001600160401b03821117610d0257604052565b602435906001600160401b0382168203610cb857565b35906001600160401b0382168203610cb857565b35906001600160a01b0382168203610cb857565b6001600160401b038111610d0257601f01601f191660200190565b81601f82011215610cb857803590610dde82610dac565b92610dec6040519485610d4d565b82845260208383010111610cb857815f926020809301838601378301015290565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90610140610120610ed09380518452602081015160208501526001600160401b0360408201511660408501526001600160401b0360608201511660608501526001600160401b03608082015116608085015260a081015160a085015260018060a01b0360c08201511660c085015260018060a01b0360e08201511660e08501526101008101511515610100850152015191816101208201520190610e0d565b90565b9181601f84011215610cb8578235916001600160401b038311610cb8576020808501948460051b010111610cb857565b6040600319820112610cb8576004356001600160401b038111610cb85781610f2d91600401610ed3565b92909291602435906001600160401b038211610cb857610f4f91600401610ed3565b9091565b6020600319820112610cb857600435906001600160401b038211610cb857610140908290036003190112610cb85760040190565b51906001600160401b0382168203610cb857565b51906001600160a01b0382168203610cb857565b51908115158203610cb857565b929192610fc882610dac565b91610fd66040519384610d4d565b829481845281830111610cb8578281602093845f96015e010152565b9080601f83011215610cb8578151610ed092602001610fbc565b602081830312610cb8578051906001600160401b038211610cb8570161014081830312610cb8576040519161104083610d16565b815183526020820151602084015261105a60408301610f87565b604084015261106b60608301610f87565b606084015261107c60808301610f87565b608084015260a082015160a084015261109760c08301610f9b565b60c08401526110a860e08301610f9b565b60e08401526110ba6101008301610faf565b6101008401526101208201516001600160401b038111610cb8576110de9201610ff2565b61012082015290565b602081830312610cb8578051906001600160401b038211610cb85701608081830312610cb8576040519161111a83610d32565b61112382610f9b565b83526020820151602084015261113b60408301610f9b565b604084015260608201516001600160401b038111610cb85761115d9201610ff2565b606082015290565b7f00000000000000000000000000000000000000000000000000000000000000006020820151036112485761119981611640565b15611242576111b96101206111c9920151602080825183010191016110e7565b91602080825183010191016110e7565b815181516001600160a01b03908116911614918261122e575b8261120f575b826111f257505090565b606091925081015160208151910120910151602081519101201490565b604080820151908301516001600160a01b0390811691161492506111e8565b9150602082015160208201511115916111e2565b50505f90565b635f9bd90760e11b5f5260045ffd5b356001600160a01b0381168103610cb85790565b939493909291905f60206001600160a01b0361128684611257565b6040516323b872dd60e01b81526001600160a01b039097166004880152306024880152848301356044880181905296938492606492849291165af1908115610cad575f9161152f575b501561152057604051602080820152926001600160a01b036112f083610d98565b166040850152606084015260018060a01b0361130e60408301610d98565b1660808401526060810135601e1982360301811215610cb85701602081359101906001600160401b038111610cb8578036038213610cb857838160e09261137f94608060a08501528160c0850152848401375f838284010152601f801991011681010301601f198101845283610d4d565b6040519460c08601908682106001600160401b03831117610d02576001600160401b039160405260018060a01b03169384875216602086015260016040860152606085015260808401525f60a084015260206040516113dd81610ce7565b7f000000000000000000000000000000000000000000000000000000000000000081528181019485526040518095819263f17325e760e01b8352846004840152516024830152516040604483015260018060a01b0381511660648301526001600160401b03848201511660848301526040810151151560a4830152606081015160c483015260a061147e608083015160c060e4860152610124850190610e0d565b91015161010483015203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1928315610cad575f936114ec575b50827f4b5d781b1f4414459813c44d669c7821fcdec72a83b67c0303229be68d03ad055f80a3565b9092506020813d602011611518575b8161150860209383610d4d565b81010312610cb85751915f6114c4565b3d91506114fb565b63078d696560e31b5f5260045ffd5b90506020813d602011611561575b8161154a60209383610d4d565b81010312610cb85761155b90610faf565b5f6112cf565b3d915061153d565b91908110156115795760051b0190565b634e487b7160e01b5f52603260045260245ffd5b91908110156115795760051b8101359061013e1981360301821215610cb8570190565b919290818103611631575f91345b8284106115d057505050505050600190565b6115db848388611569565b35818111611622576115ee85858861158d565b30906001600160a01b03906116059060e001611257565b160361161757600191039301926115be565b505050505050505f90565b63044044a560e21b5f5260045ffd5b63251f56a160e21b5f5260045ffd5b6001600160401b036060820151168015159081611691575b5061168257608001516001600160401b031661167357600190565b637b6227e960e11b5f5260045ffd5b631ab7da6b60e01b5f5260045ffd5b905042115f611658565b919060a08301518061174d5750916020916116ec6116fe94606060018060a01b03604085015116930151935160405196879586948594631272ff8b60e01b8652606060048701526064860190610e31565b84810360031901602486015290610e0d565b90604483015203915afa908115610cad575f91611719575090565b90506020813d602011611745575b8161173460209383610d4d565b81010312610cb857610ed090610faf565b3d9150611727565b92509050511490565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8210156118a0575b806d04ee2d6d415b85acef8100000000600a921015611885575b662386f26fc10000811015611871575b6305f5e100811015611860575b612710811015611851575b6064811015611843575b1015611838575b600a602160018401936117dd85610dac565b946117eb6040519687610d4d565b8086526117fa601f1991610dac565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304801561183357600a9091611805565b505090565b6001909101906117cb565b6064600291049301926117c4565b612710600491049301926117ba565b6305f5e100600891049301926117af565b662386f26fc10000601091049301926117a2565b6d04ee2d6d415b85acef810000000060209104930192611792565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104611778565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036118f557565b634ca8886760e01b5f5260045ffdfea264697066735822122007d5828cff83525ceace73a39f51bc353eb20fcd746372440b08943b68abecda64736f6c634300081a0033",
    sourceMap:
      "495:5013:52:-:0;;;;;;;;;;-1:-1:-1;495:5013:52;;;;;;;;;1183:12:6;;;1054:5;1183:12;495:5013:52;1054:5:6;1183:12;495:5013:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:20:50;;495:5013:52;;;:::i;:::-;881:58:6;;:::i;:::-;1052:20:50;;:::i;:::-;495:5013:52;;-1:-1:-1;;;;;495:5013:52;;;1084:4:50;1052:37;495:5013:52;;;;;;;:::i;:::-;;881:58:6;;:::i;:::-;495:5013:52;;;1240:4:50;495:5013:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:1461:6;495:5013:52;;;:::i;:::-;881:58:6;;;;;;:::i;:::-;1442:1461;:::i;:::-;495:5013:52;;;;;;;;;;;;:::i;:::-;881:58:6;;;;;;;:::i;:::-;3340:23;;;3336:76;;3869:13;;3844:9;3884:10;;;;;;495:5013:52;;;1489:1:0;495:5013:52;;;3896:19:6;4037:9;;;;;:::i;:::-;495:5013:52;4064:22:6;;;;4060:87;;4284:15;1489:1:0;4284:15:6;;;;;;:::i;:::-;;495:5013:52;3896:19:6;495:5013:52;3869:13:6;;;4060:87;-1:-1:-1;;;4113:19:6;;495:5013:52;4113:19:6;;3336:76;-1:-1:-1;;;3386:15:6;;495:5013:52;3386:15:6;;495:5013:52;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1619:44:50;;1644:18;495:5013:52;1619:44:50;;495:5013:52;;;1619:44:50;495:5013:52;;;;;;1619:14:50;495:5013:52;1619:44:50;;;;;;;;;;;495:5013:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1619:44:50;;;;;;;;;;;;:::i;:::-;;;495:5013:52;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1619:44:50;;;495:5013:52;;;;;;;;1619:44:50;495:5013:52;;;;;;;;;;;;;;;;-1:-1:-1;;495:5013:52;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;495:5013:52;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:23:50;;495:5013:52;;;1392:23:50;;495:5013:52;;;1392:23:50;495:5013:52;;;;;;1392:3:50;495:5013:52;1392:23:50;;;;;;;;;;;495:5013:52;1429:18:50;495:5013:52;1429:18:50;;495:5013:52;1451:18:50;1429:40;1425:71;;495:5013:52;;;;;;;;;;;;;;:::i;1425:71:50:-;-1:-1:-1;;;1478:18:50;;495:5013:52;;1478:18:50;1392:23;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;495:5013:52;;;;;;;;;;;;;;;;;;;;;;;;;;468:43:50;495:5013:52;;;;;;;;;;;;;;;1055:104:4;;495:5013:52;;1089:6:4;1072:24;1089:6;1072:24;:::i;:::-;1120:6;;;1103:24;1120:6;1103:24;:::i;:::-;1151:6;;1134:24;1151:6;1134:24;:::i;:::-;495:5013:52;;;;;;;;;;;;1055:104:4;;;495:5013:52;;;;-1:-1:-1;;;495:5013:52;;;;;;;;;;;;;;;;;-1:-1:-1;;;495:5013:52;;;;;;;;;;;;;;;;;;;;;1055:104:4;;;;;;;;;;:::i;:::-;495:5013:52;;;;;1055:104:4;495:5013:52;;1055:104:4;495:5013:52;;;;:::i;:::-;;;;;;-1:-1:-1;;495:5013:52;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;2379:164;495:5013;;;:::i;:::-;2491:10;;;495:5013;;;;;;2379:164;:::i;495:5013::-;;;;;;-1:-1:-1;;495:5013:52;;;;;;-1:-1:-1;;;2703:28:52;;495:5013;;;2703:28;;;495:5013;;;;;;;;;;2703:3;-1:-1:-1;;;;;495:5013:52;;;;;;;;2703:28;;;;;;;;;;;495:5013;-1:-1:-1;495:5013:52;;-1:-1:-1;;;2774:32:52;;495:5013;2774:32;;495:5013;;;;2774:32;495:5013;;;2774:32;;;;;;;;;;;;495:5013;2822:25;;;;:::i;:::-;2821:26;2817:66;;2953:12;3066:54;2953:12;2929:75;2953:12;;;;;495:5013;;;;2929:75;;;;;;:::i;:::-;3066:54;;;;:::i;:::-;3065:55;3061:100;;495:5013;;;;;:::i;:::-;;;;3282:48;495:5013;3282:48;;495:5013;;;;;;;:::i;:::-;3240:18;495:5013;;;3196:149;;495:5013;3172:183;;;;;495:5013;;-1:-1:-1;;;3172:183:52;;495:5013;;;3172:183;;495:5013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3172:183;;;;;;;;495:5013;-1:-1:-1;495:5013:52;;3414:21;;;;;495:5013;;;3449:18;;;495:5013;;;-1:-1:-1;;;3366:111:52;;-1:-1:-1;;;;;495:5013:52;;;;3366:111;;495:5013;;;;;;;;;3414:21;;495:5013;;;;;;;;;3366:111;;;;;;;;495:5013;;;;;;;;;;;;;3493:61;495:5013;;3493:61;;;495:5013;;;;3366:111;495:5013;3366:111;;495:5013;3366:111;;;;;;495:5013;3366:111;;;:::i;:::-;;;495:5013;;;;;;;;:::i;:::-;3366:111;;;;;;-1:-1:-1;3366:111:52;;;495:5013;;;;;;;;;3172:183;;;;;;:::i;:::-;495:5013;;3172:183;;;;495:5013;;;;;;;;;3172:183;495:5013;;;3061:100;-1:-1:-1;;;3141:20:52;;495:5013;3141:20;;2817:66;-1:-1:-1;;;2856:27:52;;495:5013;2856:27;;2774:32;;;;;;;;;;;;;;:::i;:::-;;;;;2703:28;;;;;;;;;;;;;;:::i;:::-;;;;;495:5013;;;;;;-1:-1:-1;;495:5013:52;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;495:5013:52;;;;-1:-1:-1;;;3691:23:52;;495:5013;;;3691:23;;;495:5013;;;3691:3;-1:-1:-1;;;;;495:5013:52;-1:-1:-1;3691:23:52;;;495:5013;3691:23;;;;;;;495:5013;3691:23;;;495:5013;-1:-1:-1;3742:21:52;;;495:5013;-1:-1:-1;;;;;495:5013:52;3728:10;:35;3724:66;;495:5013;;;;;;:::i;:::-;;;;;;3911:43;;495:5013;;;;;;;:::i;:::-;3869:18;495:5013;;;3825:144;;495:5013;3801:178;;;;;495:5013;;-1:-1:-1;;;3801:178:52;;495:5013;;;3801:178;;495:5013;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;495:5013:52;;;;;;-1:-1:-1;;3801:178:52;;;;;;;;495:5013;4042:16;495:5013;4107:52;4018:79;4042:16;;;;;495:5013;;;;4018:79;;;;;;:::i;:::-;495:5013;;4147:11;;;495:5013;;;-1:-1:-1;;;4107:52:52;;3728:10;495:5013;4107:52;;495:5013;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;4107:52;;;;;;;;;;;495:5013;;;;4175:21;495:5013;;4175:21;;;495:5013;;;;4107:52;495:5013;4107:52;;495:5013;4107:52;;;;;;495:5013;4107:52;;;:::i;:::-;;;495:5013;;;;;;;;:::i;:::-;4107:52;;;;;;-1:-1:-1;4107:52:52;;;495:5013;;;;;;;;;3801:178;4042:16;3801:178;;;495:5013;3801:178;;;:::i;:::-;;;-1:-1:-1;495:5013:52;;;3801:178;;;495:5013;;;;;;;;;3801:178;495:5013;;;3724:66;3772:18;;;495:5013;3772:18;495:5013;;3772:18;3691:23;;;;;;;495:5013;3691:23;;;;;;:::i;:::-;;;;;495:5013;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;:::o;:::-;;;;-1:-1:-1;495:5013:52;;;;;-1:-1:-1;495:5013:52;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;:::o;:::-;;;1055:104:4;;495:5013:52;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;495:5013:52;;;;;;:::o;:::-;;;-1:-1:-1;;;;;495:5013:52;;;;;;:::o;:::-;;;-1:-1:-1;;;;;495:5013:52;;;;;;:::o;:::-;-1:-1:-1;;;;;495:5013:52;;;;;;-1:-1:-1;;495:5013:52;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;495:5013:52;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;495:5013:52;;;;;;;;-1:-1:-1;;495:5013:52;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;495:5013:52;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;495:5013:52;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;-1:-1:-1;;495:5013:52;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;495:5013:52;;;;;;:::o;:::-;;;-1:-1:-1;;;;;495:5013:52;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;495:5013:52;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;:::i;:::-;;;;;;:::o;4230:688::-;4440:18;1006:16:49;;;495:5013:52;1006:26:49;1002:54;;1073:26;;;:::i;:::-;4413:46:52;4409:64;;4515:77;4539:14;4636:35;4539:14;;;1006:16:49;495:5013:52;;;4515:77;;;;;;:::i;:::-;495:5013;1006:16:49;495:5013:52;;;4636:35;;;;;;:::i;:::-;495:5013;;;;-1:-1:-1;;;;;495:5013:52;;;;;4701:33;;;:84;;4230:688;4701:137;;;4230:688;4701:210;;;4682:229;;4230:688;:::o;4701:210::-;4864:14;;;;;;;1006:16:49;495:5013:52;;;;4854:25;4893:17;;;1006:16:49;495:5013:52;;;;4883:28;4854:57;4230:688;:::o;4701:137::-;4801:15;;;;495:5013;4820:18;;;495:5013;-1:-1:-1;;;;;495:5013:52;;;;;4801:37;;-1:-1:-1;4701:137:52;;:84;4750:14;;1006:16:49;4750:14:52;;495:5013;1006:16:49;4768:17:52;;495:5013;-1:-1:-1;4750:35:52;4701:84;;;4409:64;4461:12;;495:5013;4461:12;:::o;1002:54:49:-;1041:15;;;495:5013:52;1041:15:49;;495:5013:52;1041:15:49;495:5013:52;;-1:-1:-1;;;;;495:5013:52;;;;;;;:::o;1384:809::-;;;;;;;;-1:-1:-1;1657:11:52;-1:-1:-1;;;;;1610:10:52;1384:809;1610:10;:::i;:::-;495:5013;;-1:-1:-1;;;1603:66:52;;-1:-1:-1;;;;;495:5013:52;;;1603:66;;;495:5013;1650:4;495:5013;;;;1657:11;;;495:5013;;;;;;;;;;;1603:66;;495:5013;;;;1603:66;;;;;;;-1:-1:-1;1603:66:52;;;1384:809;1602:67;;1598:108;;495:5013;;1657:11;2053:16;;;495:5013;;-1:-1:-1;;;;;495:5013:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1657:11;495:5013;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;2053:16;495:5013;;;;;;;;;;;;;;;-1:-1:-1;495:5013:52;;;;;;;1055:104:4;;495:5013:52;;;;;2053:16;;1055:104:4;;2053:16:52;;;;;;:::i;:::-;495:5013;;;;;;;;;;-1:-1:-1;;;;;495:5013:52;;;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;1657:11;1835:283;;495:5013;;;1835:283;;495:5013;;1835:283;;495:5013;;1835:283;;495:5013;-1:-1:-1;495:5013:52;1835:283;;495:5013;1657:11;495:5013;;;;;:::i;:::-;1793:18;495:5013;;1748:385;;;495:5013;;;;;;;;;;;;1724:419;;;1603:66;1724:419;;495:5013;;;;;;;;;;;;;;;;;;;;1603:66;495:5013;;;-1:-1:-1;;;;;495:5013:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1724:419;495:5013;-1:-1:-1;1724:3:52;-1:-1:-1;;;;;495:5013:52;1724:419;;;;;;;-1:-1:-1;1724:419:52;;;1384:809;1717:426;;2158:28;-1:-1:-1;2158:28:52;;1384:809::o;1724:419::-;;;;1657:11;1724:419;;1657:11;1724:419;;;;;;1657:11;1724:419;;;:::i;:::-;;;495:5013;;;;;1724:419;;;;;;;-1:-1:-1;1724:419:52;;1598:108;1690:16;;;-1:-1:-1;1690:16:52;1603:66;-1:-1:-1;1690:16:52;1603:66;;;1657:11;1603:66;;1657:11;1603:66;;;;;;1657:11;1603:66;;;:::i;:::-;;;495:5013;;;;;;;:::i;:::-;1603:66;;;;;;-1:-1:-1;1603:66:52;;495:5013;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1442:1461:6:-;;;;1649:23;;;1645:76;;2190:1;;2153:9;2193:10;;;;;;2885:11;;;;;;1489:1:0;1442:1461:6;:::o;2205:19::-;2346:9;;;;;:::i;:::-;495:5013:52;2373:22:6;;;2369:87;;2594:15;;;;;:::i;:::-;1084:4:50;;-1:-1:-1;;;;;495:5013:52;1052:20:50;;;;;:::i;:::-;495:5013:52;1052:37:50;2580:84:6;;1489:1:0;495:5013:52;;2205:19:6;495:5013:52;2178:13:6;;;2580:84;2637:12;;;;;;;2190:1;2637:12;:::o;2369:87::-;4113:19;;;2190:1;2422:19;;2190:1;2422:19;1645:76;3386:15;;;1695;;;;;606:258:49;-1:-1:-1;;;;;351:24:49;;;495:5013:52;;351:29:49;;;:87;;;;606:258;714:54;;;564:24;;495:5013:52;-1:-1:-1;;;;;495:5013:52;778:57:49;;853:4;606:258;:::o;778:57::-;815:20;;;-1:-1:-1;815:20:49;;-1:-1:-1;815:20:49;714:54;751:17;;;-1:-1:-1;751:17:49;;-1:-1:-1;751:17:49;351:87;423:15;;;-1:-1:-1;351:87:49;;;4924:582:52;;;5207:14;;;495:5013;5207:19;5203:65;;495:5013;;;;;;;5438:18;495:5013;;;;;5356:19;;;495:5013;;5438:18;;;495:5013;;5356:19;495:5013;;;;;;;;;;;5347:152;;5438:18;5347:152;;;495:5013;;;;;;:::i;:::-;;;;-1:-1:-1;;495:5013:52;;;;;;;:::i;:::-;;;;;;5347:152;;;;;;;;;495:5013;5347:152;;;5328:171;4924:582;:::o;5347:152::-;;;495:5013;5347:152;;495:5013;5347:152;;;;;;495:5013;5347:152;;;:::i;:::-;;;495:5013;;;;;;;:::i;5347:152::-;;;-1:-1:-1;5347:152:52;;5203:65;495:5013;;;;;5235:33;5228:40;:::o;637:632:42:-;759:17;-1:-1:-1;25444:17:46;-1:-1:-1;;;25444:17:46;;;25440:103;;637:632:42;25560:17:46;25569:8;26140:7;25560:17;;;25556:103;;637:632:42;25685:8:46;25676:17;;;25672:103;;637:632:42;25801:7:46;25792:16;;;25788:100;;637:632:42;25914:7:46;25905:16;;;25901:100;;637:632:42;26027:7:46;26018:16;;;26014:100;;637:632:42;26131:16:46;;26127:66;;637:632:42;26140:7:46;874:92:42;779:1;495:5013:52;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1055:104:4;;495:5013:52;;:::i;:::-;;;;;;;874:92:42;;;979:247;-1:-1:-1;;495:5013:52;;-1:-1:-1;;;1033:111:42;;;;495:5013:52;1033:111:42;495:5013:52;1194:10:42;;1190:21;;26140:7:46;979:247:42;;;;1190:21;1206:5;;637:632;:::o;26127:66:46:-;26177:1;495:5013:52;;;;26127:66:46;;26014:100;26027:7;26098:1;495:5013:52;;;;26014:100:46;;;25901;25914:7;25985:1;495:5013:52;;;;25901:100:46;;;25788;25801:7;25872:1;495:5013:52;;;;25788:100:46;;;25672:103;25685:8;25758:2;495:5013:52;;;;25672:103:46;;;25556;25569:8;25642:2;495:5013:52;;;;25556:103:46;;;25440;-1:-1:-1;25526:2:46;;-1:-1:-1;;;;495:5013:52;;25440:103:46;;6040:128:6;6109:4;-1:-1:-1;;;;;495:5013:52;6087:10:6;:27;6083:79;;6040:128::o;6083:79::-;6137:14;;;;;;;",
    linkReferences: {},
    immutableReferences: {
      "446": [{ start: 1442, length: 32 }],
      "448": [{ start: 1486, length: 32 }],
      "450": [{ start: 1529, length: 32 }],
      "46125": [{ start: 599, length: 32 }],
      "46128": [
        { start: 1174, length: 32 },
        { start: 1799, length: 32 },
        { start: 2763, length: 32 },
        { start: 5260, length: 32 },
      ],
      "46130": [
        { start: 549, length: 32 },
        { start: 1230, length: 32 },
        { start: 1375, length: 32 },
        { start: 2000, length: 32 },
        { start: 2883, length: 32 },
        { start: 4455, length: 32 },
        { start: 5087, length: 32 },
      ],
      "588": [{ start: 6341, length: 32 }],
    },
  },
  methodIdentifiers: {
    "ATTESTATION_SCHEMA()": "5bf2f20d",
    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":
      "e60c3505",
    "cancelStatement(bytes32)": "039b9bf6",
    "checkStatement((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)":
      "1272ff8b",
    "collectPayment(bytes32,bytes32)": "30088bc9",
    "getSchema()": "6b122fe0",
    "getStatement(bytes32)": "5cc02d2f",
    "isPayable()": "ce46e046",
    "makeStatement((address,uint256,address,bytes),uint64,bytes32)": "48f9fb46",
    "makeStatementFor((address,uint256,address,bytes),uint64,bytes32,address,address)":
      "6997007c",
    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":
      "91db0b7e",
    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":
      "88e5b2d9",
    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":
      "e49617e1",
    "version()": "54fd4d50",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IEAS","name":"_eas","type":"address"},{"internalType":"contract ISchemaRegistry","name":"_schemaRegistry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessDenied","type":"error"},{"inputs":[],"name":"AttestationRevoked","type":"error"},{"inputs":[],"name":"DeadlineExpired","type":"error"},{"inputs":[],"name":"InsufficientValue","type":"error"},{"inputs":[],"name":"InvalidEAS","type":"error"},{"inputs":[],"name":"InvalidFulfillment","type":"error"},{"inputs":[],"name":"InvalidLength","type":"error"},{"inputs":[],"name":"InvalidPayment","type":"error"},{"inputs":[],"name":"InvalidPaymentAttestation","type":"error"},{"inputs":[],"name":"InvalidSchema","type":"error"},{"inputs":[],"name":"NotFromStatement","type":"error"},{"inputs":[],"name":"NotPayable","type":"error"},{"inputs":[],"name":"UnauthorizedCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"payment","type":"bytes32"}],"name":"PaymentCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"payment","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"fulfillment","type":"bytes32"},{"indexed":true,"internalType":"address","name":"fulfiller","type":"address"}],"name":"PaymentClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"payment","type":"bytes32"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"}],"name":"PaymentMade","type":"event"},{"inputs":[],"name":"ATTESTATION_SCHEMA","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"}],"name":"attest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"uid","type":"bytes32"}],"name":"cancelStatement","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"statement","type":"tuple"},{"internalType":"bytes","name":"demand","type":"bytes"},{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"checkStatement","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_payment","type":"bytes32"},{"internalType":"bytes32","name":"_fulfillment","type":"bytes32"}],"name":"collectPayment","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getSchema","outputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"contract ISchemaResolver","name":"resolver","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"string","name":"schema","type":"string"}],"internalType":"struct SchemaRecord","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"uid","type":"bytes32"}],"name":"getStatement","outputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isPayable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"arbiter","type":"address"},{"internalType":"bytes","name":"demand","type":"bytes"}],"internalType":"struct ERC20PaymentObligation.StatementData","name":"data","type":"tuple"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"}],"name":"makeStatement","outputs":[{"internalType":"bytes32","name":"uid_","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"arbiter","type":"address"},{"internalType":"bytes","name":"demand","type":"bytes"}],"internalType":"struct ERC20PaymentObligation.StatementData","name":"data","type":"tuple"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"recipient","type":"address"}],"name":"makeStatementFor","outputs":[{"internalType":"bytes32","name":"uid_","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"multiAttest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"multiRevoke","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"}],"name":"revoke","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":{"params":{"attestation":"The new attestation."},"returns":{"_0":"Whether the attestation is valid."}},"isPayable()":{"returns":{"_0":"Whether the resolver supports ETH transfers."}},"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":{"params":{"attestations":"The new attestations.","values":"Explicit ETH amounts which were sent with each attestation."},"returns":{"_0":"Whether all the attestations are valid."}},"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":{"params":{"attestations":"The existing attestations to be revoked.","values":"Explicit ETH amounts which were sent with each revocation."},"returns":{"_0":"Whether the attestations can be revoked."}},"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":{"params":{"attestation":"The existing attestation to be revoked."},"returns":{"_0":"Whether the attestation can be revoked."}},"version()":{"returns":{"_0":"Semver contract version as a string."}}},"version":1},"userdoc":{"kind":"user","methods":{"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":{"notice":"Processes an attestation and verifies whether it\'s valid."},"isPayable()":{"notice":"Checks if the resolver can be sent ETH."},"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":{"notice":"Processes multiple attestations and verifies whether they are valid."},"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":{"notice":"Processes revocation of multiple attestation and verifies they can be revoked."},"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":{"notice":"Processes an attestation revocation and verifies if it can be revoked."},"version()":{"notice":"Returns the full semver contract version."}},"version":1}},"settings":{"compilationTarget":{"src/Statements/ERC20PaymentObligation.sol":"ERC20PaymentObligation"},"evmVersion":"cancun","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@eas/=lib/eas-contracts/contracts/",":@openzeppelin/=lib/openzeppelin-contracts/contracts/",":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",":eas-contracts/=lib/eas-contracts/contracts/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/"],"viaIR":true},"sources":{"lib/eas-contracts/contracts/Common.sol":{"keccak256":"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685","license":"MIT","urls":["bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d","dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"]},"lib/eas-contracts/contracts/IEAS.sol":{"keccak256":"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12","license":"MIT","urls":["bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880","dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR"]},"lib/eas-contracts/contracts/ISchemaRegistry.sol":{"keccak256":"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754","license":"MIT","urls":["bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158","dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz"]},"lib/eas-contracts/contracts/ISemver.sol":{"keccak256":"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18","license":"MIT","urls":["bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0","dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6"]},"lib/eas-contracts/contracts/Semver.sol":{"keccak256":"0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9","license":"MIT","urls":["bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808","dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh"]},"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol":{"keccak256":"0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb","license":"MIT","urls":["bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f","dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR"]},"lib/eas-contracts/contracts/resolver/SchemaResolver.sol":{"keccak256":"0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983","license":"MIT","urls":["bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828","dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q"]},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","license":"MIT","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"]},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c","license":"MIT","urls":["bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4","dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"]},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2","license":"MIT","urls":["bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440","dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"]},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c","license":"MIT","urls":["bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966","dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"]},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481","license":"MIT","urls":["bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb","dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"]},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0","license":"MIT","urls":["bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426","dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"]},"src/ArbiterUtils.sol":{"keccak256":"0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c","license":"UNLICENSED","urls":["bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265","dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ"]},"src/BaseStatement.sol":{"keccak256":"0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba","license":"UNLICENSED","urls":["bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd","dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs"]},"src/IArbiter.sol":{"keccak256":"0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647","license":"UNLICENSED","urls":["bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778","dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp"]},"src/Statements/ERC20PaymentObligation.sol":{"keccak256":"0x907da435649e4aa432115118f6e4d25df7ca412ed5269c6919e18d4385e306a0","license":"UNLICENSED","urls":["bzz-raw://6fec46f9f174bc616df4397cf7262645f2e2adeb4d0ac90e509befebd21b4f8f","dweb:/ipfs/QmU1hfGZhSbDPdeLveXV7UHaA7pryGfXoiZuyuNhcX4m6R"]}},"version":1}',
  metadata: {
    compiler: { version: "0.8.26+commit.8a97fa7a" },
    language: "Solidity",
    output: {
      abi: [
        {
          inputs: [
            { internalType: "contract IEAS", name: "_eas", type: "address" },
            {
              internalType: "contract ISchemaRegistry",
              name: "_schemaRegistry",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        { inputs: [], type: "error", name: "AccessDenied" },
        { inputs: [], type: "error", name: "AttestationRevoked" },
        { inputs: [], type: "error", name: "DeadlineExpired" },
        { inputs: [], type: "error", name: "InsufficientValue" },
        { inputs: [], type: "error", name: "InvalidEAS" },
        { inputs: [], type: "error", name: "InvalidFulfillment" },
        { inputs: [], type: "error", name: "InvalidLength" },
        { inputs: [], type: "error", name: "InvalidPayment" },
        { inputs: [], type: "error", name: "InvalidPaymentAttestation" },
        { inputs: [], type: "error", name: "InvalidSchema" },
        { inputs: [], type: "error", name: "NotFromStatement" },
        { inputs: [], type: "error", name: "NotPayable" },
        { inputs: [], type: "error", name: "UnauthorizedCall" },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "payment",
              type: "bytes32",
              indexed: true,
            },
          ],
          type: "event",
          name: "PaymentCancelled",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "payment",
              type: "bytes32",
              indexed: true,
            },
            {
              internalType: "bytes32",
              name: "fulfillment",
              type: "bytes32",
              indexed: true,
            },
            {
              internalType: "address",
              name: "fulfiller",
              type: "address",
              indexed: true,
            },
          ],
          type: "event",
          name: "PaymentClaimed",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "payment",
              type: "bytes32",
              indexed: true,
            },
            {
              internalType: "address",
              name: "buyer",
              type: "address",
              indexed: true,
            },
          ],
          type: "event",
          name: "PaymentMade",
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "ATTESTATION_SCHEMA",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation",
              name: "attestation",
              type: "tuple",
              components: [
                { internalType: "bytes32", name: "uid", type: "bytes32" },
                { internalType: "bytes32", name: "schema", type: "bytes32" },
                { internalType: "uint64", name: "time", type: "uint64" },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                { internalType: "bytes32", name: "refUID", type: "bytes32" },
                { internalType: "address", name: "recipient", type: "address" },
                { internalType: "address", name: "attester", type: "address" },
                { internalType: "bool", name: "revocable", type: "bool" },
                { internalType: "bytes", name: "data", type: "bytes" },
              ],
            },
          ],
          stateMutability: "payable",
          type: "function",
          name: "attest",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [{ internalType: "bytes32", name: "uid", type: "bytes32" }],
          stateMutability: "nonpayable",
          type: "function",
          name: "cancelStatement",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation",
              name: "statement",
              type: "tuple",
              components: [
                { internalType: "bytes32", name: "uid", type: "bytes32" },
                { internalType: "bytes32", name: "schema", type: "bytes32" },
                { internalType: "uint64", name: "time", type: "uint64" },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                { internalType: "bytes32", name: "refUID", type: "bytes32" },
                { internalType: "address", name: "recipient", type: "address" },
                { internalType: "address", name: "attester", type: "address" },
                { internalType: "bool", name: "revocable", type: "bool" },
                { internalType: "bytes", name: "data", type: "bytes" },
              ],
            },
            { internalType: "bytes", name: "demand", type: "bytes" },
            { internalType: "bytes32", name: "", type: "bytes32" },
          ],
          stateMutability: "view",
          type: "function",
          name: "checkStatement",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            { internalType: "bytes32", name: "_payment", type: "bytes32" },
            { internalType: "bytes32", name: "_fulfillment", type: "bytes32" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "collectPayment",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "getSchema",
          outputs: [
            {
              internalType: "struct SchemaRecord",
              name: "",
              type: "tuple",
              components: [
                { internalType: "bytes32", name: "uid", type: "bytes32" },
                {
                  internalType: "contract ISchemaResolver",
                  name: "resolver",
                  type: "address",
                },
                { internalType: "bool", name: "revocable", type: "bool" },
                { internalType: "string", name: "schema", type: "string" },
              ],
            },
          ],
        },
        {
          inputs: [{ internalType: "bytes32", name: "uid", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
          name: "getStatement",
          outputs: [
            {
              internalType: "struct Attestation",
              name: "",
              type: "tuple",
              components: [
                { internalType: "bytes32", name: "uid", type: "bytes32" },
                { internalType: "bytes32", name: "schema", type: "bytes32" },
                { internalType: "uint64", name: "time", type: "uint64" },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                { internalType: "bytes32", name: "refUID", type: "bytes32" },
                { internalType: "address", name: "recipient", type: "address" },
                { internalType: "address", name: "attester", type: "address" },
                { internalType: "bool", name: "revocable", type: "bool" },
                { internalType: "bytes", name: "data", type: "bytes" },
              ],
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "pure",
          type: "function",
          name: "isPayable",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            {
              internalType: "struct ERC20PaymentObligation.StatementData",
              name: "data",
              type: "tuple",
              components: [
                { internalType: "address", name: "token", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
                { internalType: "address", name: "arbiter", type: "address" },
                { internalType: "bytes", name: "demand", type: "bytes" },
              ],
            },
            { internalType: "uint64", name: "expirationTime", type: "uint64" },
            { internalType: "bytes32", name: "refUID", type: "bytes32" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "makeStatement",
          outputs: [{ internalType: "bytes32", name: "uid_", type: "bytes32" }],
        },
        {
          inputs: [
            {
              internalType: "struct ERC20PaymentObligation.StatementData",
              name: "data",
              type: "tuple",
              components: [
                { internalType: "address", name: "token", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" },
                { internalType: "address", name: "arbiter", type: "address" },
                { internalType: "bytes", name: "demand", type: "bytes" },
              ],
            },
            { internalType: "uint64", name: "expirationTime", type: "uint64" },
            { internalType: "bytes32", name: "refUID", type: "bytes32" },
            { internalType: "address", name: "payer", type: "address" },
            { internalType: "address", name: "recipient", type: "address" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "makeStatementFor",
          outputs: [{ internalType: "bytes32", name: "uid_", type: "bytes32" }],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation[]",
              name: "attestations",
              type: "tuple[]",
              components: [
                { internalType: "bytes32", name: "uid", type: "bytes32" },
                { internalType: "bytes32", name: "schema", type: "bytes32" },
                { internalType: "uint64", name: "time", type: "uint64" },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                { internalType: "bytes32", name: "refUID", type: "bytes32" },
                { internalType: "address", name: "recipient", type: "address" },
                { internalType: "address", name: "attester", type: "address" },
                { internalType: "bool", name: "revocable", type: "bool" },
                { internalType: "bytes", name: "data", type: "bytes" },
              ],
            },
            { internalType: "uint256[]", name: "values", type: "uint256[]" },
          ],
          stateMutability: "payable",
          type: "function",
          name: "multiAttest",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation[]",
              name: "attestations",
              type: "tuple[]",
              components: [
                { internalType: "bytes32", name: "uid", type: "bytes32" },
                { internalType: "bytes32", name: "schema", type: "bytes32" },
                { internalType: "uint64", name: "time", type: "uint64" },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                { internalType: "bytes32", name: "refUID", type: "bytes32" },
                { internalType: "address", name: "recipient", type: "address" },
                { internalType: "address", name: "attester", type: "address" },
                { internalType: "bool", name: "revocable", type: "bool" },
                { internalType: "bytes", name: "data", type: "bytes" },
              ],
            },
            { internalType: "uint256[]", name: "values", type: "uint256[]" },
          ],
          stateMutability: "payable",
          type: "function",
          name: "multiRevoke",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            {
              internalType: "struct Attestation",
              name: "attestation",
              type: "tuple",
              components: [
                { internalType: "bytes32", name: "uid", type: "bytes32" },
                { internalType: "bytes32", name: "schema", type: "bytes32" },
                { internalType: "uint64", name: "time", type: "uint64" },
                {
                  internalType: "uint64",
                  name: "expirationTime",
                  type: "uint64",
                },
                {
                  internalType: "uint64",
                  name: "revocationTime",
                  type: "uint64",
                },
                { internalType: "bytes32", name: "refUID", type: "bytes32" },
                { internalType: "address", name: "recipient", type: "address" },
                { internalType: "address", name: "attester", type: "address" },
                { internalType: "bool", name: "revocable", type: "bool" },
                { internalType: "bytes", name: "data", type: "bytes" },
              ],
            },
          ],
          stateMutability: "payable",
          type: "function",
          name: "revoke",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "version",
          outputs: [{ internalType: "string", name: "", type: "string" }],
        },
        { inputs: [], stateMutability: "payable", type: "receive" },
      ],
      devdoc: {
        kind: "dev",
        methods: {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":
            {
              params: { attestation: "The new attestation." },
              returns: { _0: "Whether the attestation is valid." },
            },
          "isPayable()": {
            returns: { _0: "Whether the resolver supports ETH transfers." },
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":
            {
              params: {
                attestations: "The new attestations.",
                values:
                  "Explicit ETH amounts which were sent with each attestation.",
              },
              returns: { _0: "Whether all the attestations are valid." },
            },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":
            {
              params: {
                attestations: "The existing attestations to be revoked.",
                values:
                  "Explicit ETH amounts which were sent with each revocation.",
              },
              returns: { _0: "Whether the attestations can be revoked." },
            },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":
            {
              params: {
                attestation: "The existing attestation to be revoked.",
              },
              returns: { _0: "Whether the attestation can be revoked." },
            },
          "version()": {
            returns: { _0: "Semver contract version as a string." },
          },
        },
        version: 1,
      },
      userdoc: {
        kind: "user",
        methods: {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":
            {
              notice:
                "Processes an attestation and verifies whether it's valid.",
            },
          "isPayable()": { notice: "Checks if the resolver can be sent ETH." },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":
            {
              notice:
                "Processes multiple attestations and verifies whether they are valid.",
            },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":
            {
              notice:
                "Processes revocation of multiple attestation and verifies they can be revoked.",
            },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":
            {
              notice:
                "Processes an attestation revocation and verifies if it can be revoked.",
            },
          "version()": { notice: "Returns the full semver contract version." },
        },
        version: 1,
      },
    },
    settings: {
      remappings: [
        "@eas/=lib/eas-contracts/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/eas-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ],
      optimizer: { enabled: true, runs: 200 },
      metadata: { bytecodeHash: "ipfs" },
      compilationTarget: {
        "src/Statements/ERC20PaymentObligation.sol": "ERC20PaymentObligation",
      },
      evmVersion: "cancun",
      libraries: {},
      viaIR: true,
    },
    sources: {
      "lib/eas-contracts/contracts/Common.sol": {
        keccak256:
          "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        urls: [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/IEAS.sol": {
        keccak256:
          "0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12",
        urls: [
          "bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880",
          "dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
        keccak256:
          "0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754",
        urls: [
          "bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158",
          "dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/ISemver.sol": {
        keccak256:
          "0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18",
        urls: [
          "bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0",
          "dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/Semver.sol": {
        keccak256:
          "0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9",
        urls: [
          "bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808",
          "dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        keccak256:
          "0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb",
        urls: [
          "bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f",
          "dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR",
        ],
        license: "MIT",
      },
      "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
        keccak256:
          "0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983",
        urls: [
          "bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828",
          "dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        keccak256:
          "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        urls: [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        keccak256:
          "0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c",
        urls: [
          "bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4",
          "dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        keccak256:
          "0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2",
        urls: [
          "bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440",
          "dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        keccak256:
          "0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c",
        urls: [
          "bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966",
          "dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        keccak256:
          "0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481",
        urls: [
          "bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb",
          "dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        keccak256:
          "0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0",
        urls: [
          "bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426",
          "dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY",
        ],
        license: "MIT",
      },
      "src/ArbiterUtils.sol": {
        keccak256:
          "0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c",
        urls: [
          "bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265",
          "dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ",
        ],
        license: "UNLICENSED",
      },
      "src/BaseStatement.sol": {
        keccak256:
          "0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba",
        urls: [
          "bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd",
          "dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs",
        ],
        license: "UNLICENSED",
      },
      "src/IArbiter.sol": {
        keccak256:
          "0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647",
        urls: [
          "bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778",
          "dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp",
        ],
        license: "UNLICENSED",
      },
      "src/Statements/ERC20PaymentObligation.sol": {
        keccak256:
          "0x907da435649e4aa432115118f6e4d25df7ca412ed5269c6919e18d4385e306a0",
        urls: [
          "bzz-raw://6fec46f9f174bc616df4397cf7262645f2e2adeb4d0ac90e509befebd21b4f8f",
          "dweb:/ipfs/QmU1hfGZhSbDPdeLveXV7UHaA7pryGfXoiZuyuNhcX4m6R",
        ],
        license: "UNLICENSED",
      },
    },
    version: 1,
  },
  id: 52,
} as const;
