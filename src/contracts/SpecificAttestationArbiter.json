{
  "abi": [
    {
      "type": "function",
      "name": "checkObligation",
      "inputs": [
        {
          "name": "obligation",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            { "name": "uid", "type": "bytes32", "internalType": "bytes32" },
            { "name": "schema", "type": "bytes32", "internalType": "bytes32" },
            { "name": "time", "type": "uint64", "internalType": "uint64" },
            { "name": "expirationTime", "type": "uint64", "internalType": "uint64" },
            { "name": "revocationTime", "type": "uint64", "internalType": "uint64" },
            { "name": "refUID", "type": "bytes32", "internalType": "bytes32" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "attester", "type": "address", "internalType": "address" },
            { "name": "revocable", "type": "bool", "internalType": "bool" },
            { "name": "data", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "demand", "type": "bytes", "internalType": "bytes" },
        { "name": "", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "decodeDemandData",
      "inputs": [{ "name": "data", "type": "bytes", "internalType": "bytes" }],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SpecificAttestationArbiter.DemandData",
          "components": [{ "name": "uid", "type": "bytes32", "internalType": "bytes32" }]
        }
      ],
      "stateMutability": "pure"
    },
    { "type": "error", "name": "NotDemandedAttestation", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x6080806040523460155761030b908161001a8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c8063838a68d9146101a65763e6c9714d1461002f575f80fd5b3461018e57606036600319011261018e5760043567ffffffffffffffff811161018e57610140600319823603011261018e5760405190610140820182811067ffffffffffffffff82111761019257604052806004013582526024810135602083015261009d60448201610244565b60408301526100ae60648201610244565b60608301526100bf60848201610244565b608083015260a481013560a08301526100da60c48201610259565b60c08301526100eb60e48201610259565b60e0830152610104810135801515810361018e576101008301526101248101359067ffffffffffffffff821161018e57600461012a923692010161026d565b61012082015260243567ffffffffffffffff811161018e5761015090369060040161026d565b9060208280518101031261018e576020610168610224565b920151809252510361017f57602060405160018152f35b631579b0f760e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b3461018e57602036600319011261018e5760043567ffffffffffffffff811161018e573660238201121561018e57806004013567ffffffffffffffff811161018e57810136602482011161018e576020905f610200610224565b528290031261018e576020906024610216610224565b910135809152604051908152f35b604051906020820182811067ffffffffffffffff82111761019257604052565b359067ffffffffffffffff8216820361018e57565b35906001600160a01b038216820361018e57565b81601f8201121561018e5780359067ffffffffffffffff82116101925760405192601f8301601f19908116603f0116840167ffffffffffffffff811185821017610192576040528284526020838301011161018e57815f92602080930183860137830101529056fea264697066735822122022d2d15979213653fd8038e9eae28c8109681bf04092cec881a0e64af627f91764736f6c634300081b0033",
    "sourceMap": "156:649:120:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610011575f80fd5b5f3560e01c8063838a68d9146101a65763e6c9714d1461002f575f80fd5b3461018e57606036600319011261018e5760043567ffffffffffffffff811161018e57610140600319823603011261018e5760405190610140820182811067ffffffffffffffff82111761019257604052806004013582526024810135602083015261009d60448201610244565b60408301526100ae60648201610244565b60608301526100bf60848201610244565b608083015260a481013560a08301526100da60c48201610259565b60c08301526100eb60e48201610259565b60e0830152610104810135801515810361018e576101008301526101248101359067ffffffffffffffff821161018e57600461012a923692010161026d565b61012082015260243567ffffffffffffffff811161018e5761015090369060040161026d565b9060208280518101031261018e576020610168610224565b920151809252510361017f57602060405160018152f35b631579b0f760e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b3461018e57602036600319011261018e5760043567ffffffffffffffff811161018e573660238201121561018e57806004013567ffffffffffffffff811161018e57810136602482011161018e576020905f610200610224565b528290031261018e576020906024610216610224565b910135809152604051908152f35b604051906020820182811067ffffffffffffffff82111761019257604052565b359067ffffffffffffffff8216820361018e57565b35906001600160a01b038216820361018e57565b81601f8201121561018e5780359067ffffffffffffffff82116101925760405192601f8301601f19908116603f0116840167ffffffffffffffff811185821017610192576040528284526020838301011161018e57815f92602080930183860137830101529056fea264697066735822122022d2d15979213653fd8038e9eae28c8109681bf04092cec881a0e64af627f91764736f6c634300081b0033",
    "sourceMap": "156:649:120:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;156:649:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;506:32;;156:649;;;;;;;:::i;:::-;506:32;;156:649;;;;;552:29;548:66;;156:649;;;;;;;548:66;590:24;;;156:649;590:24;156:649;;590:24;156:649;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;156:649:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;156:649:120;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;156:649:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;156:649:120;;;;;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "checkObligation((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": "e6c9714d",
    "decodeDemandData(bytes)": "838a68d9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NotDemandedAttestation\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"checkObligation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"decodeDemandData\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"internalType\":\"struct SpecificAttestationArbiter.DemandData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/arbiters/deprecated/SpecificAttestationArbiter.sol\":\"SpecificAttestationArbiter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@src/=src/\",\":@test/=test/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x5e37834970553135dbd3f5cdf4aa9cd8dc20f57a8642cee85366b211b1d111ab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b57275fcd9c40acc33af244aa3d19b62bb7291a9b1b3cb3592ecedb0202d1038\",\"dweb:/ipfs/Qmd9YTFnardXdksfuUQkm2TcxREaFNG2j4MazYmaui5Bff\"]},\"src/arbiters/deprecated/SpecificAttestationArbiter.sol\":{\"keccak256\":\"0xfb5181d8c5db61ff4fce0e7c964eb3449f028325014e67c6a81458d288dda91e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://146feee63a3fdce150fd4bb93a46f10f0f048e1c6ee3c55286b8da6151100db5\",\"dweb:/ipfs/QmUF478Y4pF9XXRVvc7VQ74erN6SA2h5WfuvJxvCKPMXKP\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.27+commit.40a35a09" },
    "language": "Solidity",
    "output": {
      "abi": [
        { "inputs": [], "type": "error", "name": "NotDemandedAttestation" },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "obligation",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "uid", "type": "bytes32" },
                { "internalType": "bytes32", "name": "schema", "type": "bytes32" },
                { "internalType": "uint64", "name": "time", "type": "uint64" },
                { "internalType": "uint64", "name": "expirationTime", "type": "uint64" },
                { "internalType": "uint64", "name": "revocationTime", "type": "uint64" },
                { "internalType": "bytes32", "name": "refUID", "type": "bytes32" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "address", "name": "attester", "type": "address" },
                { "internalType": "bool", "name": "revocable", "type": "bool" },
                { "internalType": "bytes", "name": "data", "type": "bytes" }
              ]
            },
            { "internalType": "bytes", "name": "demand", "type": "bytes" },
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "checkObligation",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "data", "type": "bytes" }],
          "stateMutability": "pure",
          "type": "function",
          "name": "decodeDemandData",
          "outputs": [
            {
              "internalType": "struct SpecificAttestationArbiter.DemandData",
              "name": "",
              "type": "tuple",
              "components": [{ "internalType": "bytes32", "name": "uid", "type": "bytes32" }]
            }
          ]
        }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@eas/=lib/eas-contracts/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@src/=src/",
        "@test/=test/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/eas-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/arbiters/deprecated/SpecificAttestationArbiter.sol": "SpecificAttestationArbiter" },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/eas-contracts/contracts/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "src/IArbiter.sol": {
        "keccak256": "0x5e37834970553135dbd3f5cdf4aa9cd8dc20f57a8642cee85366b211b1d111ab",
        "urls": [
          "bzz-raw://b57275fcd9c40acc33af244aa3d19b62bb7291a9b1b3cb3592ecedb0202d1038",
          "dweb:/ipfs/Qmd9YTFnardXdksfuUQkm2TcxREaFNG2j4MazYmaui5Bff"
        ],
        "license": "UNLICENSED"
      },
      "src/arbiters/deprecated/SpecificAttestationArbiter.sol": {
        "keccak256": "0xfb5181d8c5db61ff4fce0e7c964eb3449f028325014e67c6a81458d288dda91e",
        "urls": [
          "bzz-raw://146feee63a3fdce150fd4bb93a46f10f0f048e1c6ee3c55286b8da6151100db5",
          "dweb:/ipfs/QmUF478Y4pF9XXRVvc7VQ74erN6SA2h5WfuvJxvCKPMXKP"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 120
}
