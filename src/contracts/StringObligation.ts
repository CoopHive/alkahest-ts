export const abi = {
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_eas",
          "type": "address",
          "internalType": "contract IEAS"
        },
        {
          "name": "_schemaRegistry",
          "type": "address",
          "internalType": "contract ISchemaRegistry"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "ATTESTATION_SCHEMA",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "decodeObligationData",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct StringObligation.ObligationData",
          "components": [
            {
              "name": "item",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "doObligation",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct StringObligation.ObligationData",
          "components": [
            {
              "name": "item",
              "type": "string",
              "internalType": "string"
            }
          ]
        },
        {
          "name": "refUID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "doObligationForRaw",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "expirationTime",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "payer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "refUID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "doObligationRaw",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "expirationTime",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "refUID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getObligationData",
      "inputs": [
        {
          "name": "uid",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct StringObligation.ObligationData",
          "components": [
            {
              "name": "item",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSchema",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SchemaRecord",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "resolver",
              "type": "address",
              "internalType": "contract ISchemaResolver"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "schema",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isPayable",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "multiAttest",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multiRevoke",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "error",
      "name": "AccessDenied",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientValue",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidEAS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotFromThisAttester",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotPayable",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x61016080604052346101a4576040816111ce803803809161002082856101de565b8339810103126101a45780516001600160a01b038116918282036101a45760200151916001600160a01b0383168084036101a457604080519081016001600160401b038111828210176101ca57604052600b815260208101926a737472696e67206974656d60a81b84526001608052600360a0525f60c052156101bb576084948460209560e05261012052610100525f604051958680958194630c1af44f60e31b8352606060048401525180918160648501528484015e818101830184905230602483015260016044830152601f01601f191681010301925af19081156101b0575f9161017a575b5061014052604051610fcc908161020282396080518161080c015260a05181610837015260c05181610862015260e05181610f160152610100518161069f0152610120518181816102aa0152610d3d0152610140518181816102e20152818161066d015281816107ca0152610c900152f35b90506020813d6020116101a8575b81610195602093836101de565b810103126101a457515f610108565b5f80fd5b3d9150610188565b6040513d5f823e3d90fd5b6341bc07ff60e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b601f909101601f19168101906001600160401b038211908210176101ca5760405256fe60806040526004361015610027575b3615610018575f80fd5b631574f9f360e01b5f5260045ffd5b5f3560e01c806354fd4d50146107ed5780635bf2f20d146107b35780636b122fe01461062e5780637e431351146104f557806388e5b2d9146104d657806391db0b7e146104d6578063b3b902d41461048d578063c6ec507014610221578063c93844be1461016a578063ce46e04614610150578063e49617e11461012b578063e60c35051461012b5763f0ffa1850361000e57346101275760a0366003190112610127576004356001600160401b038111610127576100ea90369060040161098f565b6100f26109bc565b916100fb610a22565b506064356001600160a01b03811681036101275760209361011f9360843593610c11565b604051908152f35b5f80fd5b6020610146610139366109ee565b610141610f14565b610f55565b6040519015158152f35b34610127575f3660031901126101275760206040515f8152f35b34610127576020366003190112610127576004356001600160401b0381116101275761019a90369060040161098f565b60606040516101a881610a67565b52810190602081830312610127578035906001600160401b038211610127570160208183031261012757604051906101df82610a67565b8035906001600160401b038211610127570182601f820112156101275761021d9281602061020f93359101610bdb565b8152604051918291826109d2565b0390f35b3461012757602036600319011261012757606060405161024081610a67565b52606061012060405161025281610a82565b5f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f61010082015201526040516328c44a9960e21b815260043560048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610482575f9161037d575b5060208101517f00000000000000000000000000000000000000000000000000000000000000000361036e5761012001518051810190602081830312610127576020810151906001600160401b0382116101275701602081830312610127576040519061034682610a67565b6020810151906001600160401b03821161012757602061020f928161021d9601920101610b1d565b635527981560e11b5f5260045ffd5b90503d805f833e61038e8183610a9e565b810190602081830312610127578051906001600160401b0382116101275701906101408282031261012757604051916103c683610a82565b80518352602081015160208401526103e060408201610f6e565b60408401526103f160608201610f6e565b606084015261040260808201610f6e565b608084015260a081015160a084015261041d60c08201610f82565b60c084015261042e60e08201610f82565b60e08401526104406101008201610abf565b610100840152610120810151906001600160401b03821161012757019080601f8301121561012757815161047692602001610ae7565b610120820152816102da565b6040513d5f823e3d90fd5b34610127576060366003190112610127576004356001600160401b0381116101275761011f6104c2602092369060040161098f565b906104cb6109bc565b604435923392610c11565b60206101466104e43661093f565b926104f0929192610f14565b610b37565b34610127576040366003190112610127576004356001600160401b038111610127578036039060206003198301126101275760405160208082015291600482013590602219018112156101275701602460048201359101916001600160401b038211610127578136038313610127576105a1608082846020956105c397876040850152816060850152848401375f838284010152601f801991011681010301601f198101835282610a9e565b6040518093819263f0ffa18560e01b835260a0600484015260a48301906108eb565b5f6024830152336044830152336064830152602435608483015203815f305af18015610482575f906105fb575b602090604051908152f35b506020813d602011610626575b8161061560209383610a9e565b8101031261012757602090516105f0565b3d9150610608565b34610127575f3660031901126101275760608060405161064d81610a38565b5f81525f60208201525f604082015201526040516351753e3760e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa8015610482575f90610714575b60609061021d604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a08301906108eb565b503d805f833e6107248183610a9e565b810190602081830312610127578051906001600160401b0382116101275701608081830312610127576040519061075a82610a38565b8051825260208101516001600160a01b038116810361012757602083015261078460408201610abf565b60408301526060810151926001600160401b038411610127576060936107aa9201610b1d565b828201526106ce565b34610127575f3660031901126101275760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610127575f3660031901126101275761021d60206108db60016108307f0000000000000000000000000000000000000000000000000000000000000000610da7565b818461085b7f0000000000000000000000000000000000000000000000000000000000000000610da7565b81806108867f0000000000000000000000000000000000000000000000000000000000000000610da7565b9260405199878b985191829101848a015e870190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e01015f838201520301601f198101835282610a9e565b6040519182916020835260208301905b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610127578235916001600160401b038311610127576020808501948460051b01011161012757565b6040600319820112610127576004356001600160401b03811161012757816109699160040161090f565b92909291602435906001600160401b0382116101275761098b9160040161090f565b9091565b9181601f84011215610127578235916001600160401b038311610127576020838186019501011161012757565b602435906001600160401b038216820361012757565b60406109eb9260208352519160208082015201906108eb565b90565b602060031982011261012757600435906001600160401b038211610127576101409082900360031901126101275760040190565b604435906001600160a01b038216820361012757565b608081019081106001600160401b03821117610a5357604052565b634e487b7160e01b5f52604160045260245ffd5b602081019081106001600160401b03821117610a5357604052565b61014081019081106001600160401b03821117610a5357604052565b90601f801991011681019081106001600160401b03821117610a5357604052565b5190811515820361012757565b6001600160401b038111610a5357601f01601f191660200190565b929192610af382610acc565b91610b016040519384610a9e565b829481845281830111610127578281602093845f96015e010152565b9080601f830112156101275781516109eb92602001610ae7565b929092818403610bcc575f91345b85841015610bc15781841015610bad578360051b8086013590828211610b9e5784013561013e198536030181121561012757610b82908501610f55565b15610b935760019103930192610b45565b505050505050505f90565b63044044a560e21b5f5260045ffd5b634e487b7160e01b5f52603260045260245ffd5b505050505050600190565b63251f56a160e21b5f5260045ffd5b929192610be782610acc565b91610bf56040519384610a9e565b829481845281830111610127578281602093845f960137010152565b610c1f919492943691610bdb565b916040519360c08501918583106001600160401b03841117610a53576001600160401b039260405260018060a01b0316855216602084015260016040840152606083015260808201525f60a082015260405160408101908082106001600160401b03831117610a53576020916040527f000000000000000000000000000000000000000000000000000000000000000081528181019283526040518093819263f17325e760e01b8352846004840152516024830152516040604483015260018060a01b0381511660648301526001600160401b03848201511660848301526040810151151560a4830152606081015160c483015260a0610d2f608083015160c060e48601526101248501906108eb565b91015161010483015203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610482575f91610d78575090565b90506020813d602011610d9f575b81610d9360209383610a9e565b81010312610127575190565b3d9150610d86565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015610ef1575b806d04ee2d6d415b85acef8100000000600a921015610ed6575b662386f26fc10000811015610ec2575b6305f5e100811015610eb1575b612710811015610ea2575b6064811015610e94575b1015610e89575b600a60216001840193610e2e85610acc565b94610e3c6040519687610a9e565b808652610e4b601f1991610acc565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353048015610e8457600a9091610e56565b505090565b600190910190610e1c565b606460029104930192610e15565b61271060049104930192610e0b565b6305f5e10060089104930192610e00565b662386f26fc1000060109104930192610df3565b6d04ee2d6d415b85acef810000000060209104930192610de3565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104610dc9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610f4657565b634ca8886760e01b5f5260045ffd5b60e0013560018060a01b03811680910361012757301490565b51906001600160401b038216820361012757565b51906001600160a01b03821682036101275756fea2646970667358221220b98279f3c82acbae1be53361658098d6cff8a80f8db67349ebf5ed68b66fb2fa64736f6c634300081b0033",
    "sourceMap": "306:1001:127:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;-1:-1:-1;;;306:1001:127;;543:4;759:14:6;;688:1:9;783:14:6;;-1:-1:-1;807:14:6;;708:26:9;704:76;;306:1001:127;790:10:9;;306:1001:127;790:10:9;;;789::77;;809:32;;-1:-1:-1;306:1001:127;;;;;;;;;;;872:48:77;;306:1001:127;872:48:77;;;306:1001:127;;;;;;;;;;;;;;;;;;;;;904:4:77;306:1001:127;;;;543:4;306:1001;;;;;;-1:-1:-1;;306:1001:127;;;872:48:77;;;;;;;;;;-1:-1:-1;872:48:77;;;-1:-1:-1;851:69:77;;;306:1001:127;;;;;;;;759:14:6;306:1001:127;;;;;783:14:6;306:1001:127;;;;;807:14:6;306:1001:127;;;;;790:10:9;306:1001:127;;;;;809:32:77;306:1001:127;;;;;789:10:77;306:1001:127;;;;;;;;;;851:69:77;306:1001:127;;;;;;;;;;;;;;;;;;;;;872:48:77;;;306:1001:127;872:48:77;;306:1001:127;872:48:77;;;;;;306:1001:127;872:48:77;;;:::i;:::-;;;306:1001:127;;;;;872:48:77;;;306:1001:127;-1:-1:-1;306:1001:127;;872:48:77;;;-1:-1:-1;872:48:77;;;306:1001:127;;;-1:-1:-1;306:1001:127;;;;;704:76:9;757:12;;;-1:-1:-1;757:12:9;;-1:-1:-1;757:12:9;306:1001:127;;;;-1:-1:-1;306:1001:127;;;;;-1:-1:-1;306:1001:127;;;;;;-1:-1:-1;;306:1001:127;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361015610027575b3615610018575f80fd5b631574f9f360e01b5f5260045ffd5b5f3560e01c806354fd4d50146107ed5780635bf2f20d146107b35780636b122fe01461062e5780637e431351146104f557806388e5b2d9146104d657806391db0b7e146104d6578063b3b902d41461048d578063c6ec507014610221578063c93844be1461016a578063ce46e04614610150578063e49617e11461012b578063e60c35051461012b5763f0ffa1850361000e57346101275760a0366003190112610127576004356001600160401b038111610127576100ea90369060040161098f565b6100f26109bc565b916100fb610a22565b506064356001600160a01b03811681036101275760209361011f9360843593610c11565b604051908152f35b5f80fd5b6020610146610139366109ee565b610141610f14565b610f55565b6040519015158152f35b34610127575f3660031901126101275760206040515f8152f35b34610127576020366003190112610127576004356001600160401b0381116101275761019a90369060040161098f565b60606040516101a881610a67565b52810190602081830312610127578035906001600160401b038211610127570160208183031261012757604051906101df82610a67565b8035906001600160401b038211610127570182601f820112156101275761021d9281602061020f93359101610bdb565b8152604051918291826109d2565b0390f35b3461012757602036600319011261012757606060405161024081610a67565b52606061012060405161025281610a82565b5f81525f60208201525f60408201525f838201525f60808201525f60a08201525f60c08201525f60e08201525f61010082015201526040516328c44a9960e21b815260043560048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa908115610482575f9161037d575b5060208101517f00000000000000000000000000000000000000000000000000000000000000000361036e5761012001518051810190602081830312610127576020810151906001600160401b0382116101275701602081830312610127576040519061034682610a67565b6020810151906001600160401b03821161012757602061020f928161021d9601920101610b1d565b635527981560e11b5f5260045ffd5b90503d805f833e61038e8183610a9e565b810190602081830312610127578051906001600160401b0382116101275701906101408282031261012757604051916103c683610a82565b80518352602081015160208401526103e060408201610f6e565b60408401526103f160608201610f6e565b606084015261040260808201610f6e565b608084015260a081015160a084015261041d60c08201610f82565b60c084015261042e60e08201610f82565b60e08401526104406101008201610abf565b610100840152610120810151906001600160401b03821161012757019080601f8301121561012757815161047692602001610ae7565b610120820152816102da565b6040513d5f823e3d90fd5b34610127576060366003190112610127576004356001600160401b0381116101275761011f6104c2602092369060040161098f565b906104cb6109bc565b604435923392610c11565b60206101466104e43661093f565b926104f0929192610f14565b610b37565b34610127576040366003190112610127576004356001600160401b038111610127578036039060206003198301126101275760405160208082015291600482013590602219018112156101275701602460048201359101916001600160401b038211610127578136038313610127576105a1608082846020956105c397876040850152816060850152848401375f838284010152601f801991011681010301601f198101835282610a9e565b6040518093819263f0ffa18560e01b835260a0600484015260a48301906108eb565b5f6024830152336044830152336064830152602435608483015203815f305af18015610482575f906105fb575b602090604051908152f35b506020813d602011610626575b8161061560209383610a9e565b8101031261012757602090516105f0565b3d9150610608565b34610127575f3660031901126101275760608060405161064d81610a38565b5f81525f60208201525f604082015201526040516351753e3760e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201525f8160248160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa8015610482575f90610714575b60609061021d604051928392602084528051602085015260018060a01b0360208201511660408501526040810151151582850152015160808084015260a08301906108eb565b503d805f833e6107248183610a9e565b810190602081830312610127578051906001600160401b0382116101275701608081830312610127576040519061075a82610a38565b8051825260208101516001600160a01b038116810361012757602083015261078460408201610abf565b60408301526060810151926001600160401b038411610127576060936107aa9201610b1d565b828201526106ce565b34610127575f3660031901126101275760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b34610127575f3660031901126101275761021d60206108db60016108307f0000000000000000000000000000000000000000000000000000000000000000610da7565b818461085b7f0000000000000000000000000000000000000000000000000000000000000000610da7565b81806108867f0000000000000000000000000000000000000000000000000000000000000000610da7565b9260405199878b985191829101848a015e870190601760f91b83830152805192839101602183015e010190601760f91b84830152805192839101600283015e01015f838201520301601f198101835282610a9e565b6040519182916020835260208301905b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b9181601f84011215610127578235916001600160401b038311610127576020808501948460051b01011161012757565b6040600319820112610127576004356001600160401b03811161012757816109699160040161090f565b92909291602435906001600160401b0382116101275761098b9160040161090f565b9091565b9181601f84011215610127578235916001600160401b038311610127576020838186019501011161012757565b602435906001600160401b038216820361012757565b60406109eb9260208352519160208082015201906108eb565b90565b602060031982011261012757600435906001600160401b038211610127576101409082900360031901126101275760040190565b604435906001600160a01b038216820361012757565b608081019081106001600160401b03821117610a5357604052565b634e487b7160e01b5f52604160045260245ffd5b602081019081106001600160401b03821117610a5357604052565b61014081019081106001600160401b03821117610a5357604052565b90601f801991011681019081106001600160401b03821117610a5357604052565b5190811515820361012757565b6001600160401b038111610a5357601f01601f191660200190565b929192610af382610acc565b91610b016040519384610a9e565b829481845281830111610127578281602093845f96015e010152565b9080601f830112156101275781516109eb92602001610ae7565b929092818403610bcc575f91345b85841015610bc15781841015610bad578360051b8086013590828211610b9e5784013561013e198536030181121561012757610b82908501610f55565b15610b935760019103930192610b45565b505050505050505f90565b63044044a560e21b5f5260045ffd5b634e487b7160e01b5f52603260045260245ffd5b505050505050600190565b63251f56a160e21b5f5260045ffd5b929192610be782610acc565b91610bf56040519384610a9e565b829481845281830111610127578281602093845f960137010152565b610c1f919492943691610bdb565b916040519360c08501918583106001600160401b03841117610a53576001600160401b039260405260018060a01b0316855216602084015260016040840152606083015260808201525f60a082015260405160408101908082106001600160401b03831117610a53576020916040527f000000000000000000000000000000000000000000000000000000000000000081528181019283526040518093819263f17325e760e01b8352846004840152516024830152516040604483015260018060a01b0381511660648301526001600160401b03848201511660848301526040810151151560a4830152606081015160c483015260a0610d2f608083015160c060e48601526101248501906108eb565b91015161010483015203815f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610482575f91610d78575090565b90506020813d602011610d9f575b81610d9360209383610a9e565b81010312610127575190565b3d9150610d86565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015610ef1575b806d04ee2d6d415b85acef8100000000600a921015610ed6575b662386f26fc10000811015610ec2575b6305f5e100811015610eb1575b612710811015610ea2575b6064811015610e94575b1015610e89575b600a60216001840193610e2e85610acc565b94610e3c6040519687610a9e565b808652610e4b601f1991610acc565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353048015610e8457600a9091610e56565b505090565b600190910190610e1c565b606460029104930192610e15565b61271060049104930192610e0b565b6305f5e10060089104930192610e00565b662386f26fc1000060109104930192610df3565b6d04ee2d6d415b85acef810000000060209104930192610de3565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104610dc9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610f4657565b634ca8886760e01b5f5260045ffd5b60e0013560018060a01b03811680910361012757301490565b51906001600160401b038216820361012757565b51906001600160a01b03821682036101275756fea2646970667358221220b98279f3c82acbae1be53361658098d6cff8a80f8db67349ebf5ed68b66fb2fa64736f6c634300081b0033",
    "sourceMap": "306:1001:127:-:0;;;;;;;;;-1:-1:-1;306:1001:127;;;;;;;;1183:12:9;;;1054:5;1183:12;306:1001:127;1054:5:9;1183:12;306:1001:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;306:1001:127;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;306:1001:127;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3045:39:9;306:1001:127;;;:::i;:::-;881:58:9;;:::i;:::-;3045:39;:::i;:::-;306:1001:127;;;;;;;;;;;;;;-1:-1:-1;;306:1001:127;;;;;;;;;;;;;;;;;-1:-1:-1;;306:1001:127;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;1264:34;;306:1001;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;306:1001:127;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:23:77;;306:1001:127;;;2392:23:77;;306:1001:127;;;2392:23:77;306:1001:127;;;;;;2392:3:77;306:1001:127;2392:23:77;;;;;;;306:1001:127;2392:23:77;;;306:1001:127;2429:19:77;306:1001:127;2429:19:77;;306:1001:127;2452:18:77;2429:41;2425:87;;306:1001:127;1090:16;;306:1001;;1079:46;;306:1001;;;;;;;;;1079:46;;306:1001;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;1079:46;;306:1001;1079:46;;306:1001;;;;:::i;2425:87:77:-;2491:21;;;306:1001:127;2491:21:77;306:1001:127;;2491:21:77;2392:23;;;;;306:1001:127;2392:23:77;;;;;;:::i;:::-;;;306:1001:127;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2392:23:77;;;;306:1001:127;;;;;;;;;;;;;;;-1:-1:-1;;306:1001:127;;;;;;-1:-1:-1;;;;;306:1001:127;;;;709:149:80;306:1001:127;;;;;;;;:::i;:::-;;;;:::i;:::-;;;794:10:80;;709:149;;:::i;306:1001:127:-;;1442:1461:9;306:1001:127;;;:::i;:::-;881:58:9;;;;;;:::i;:::-;1442:1461;:::i;306:1001:127:-;;;;;;-1:-1:-1;;306:1001:127;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;;;714:16;;;306:1001;;;;;;;-1:-1:-1;;306:1001:127;;;;;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;714:16;306:1001;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1055:104:6;;306:1001:127;;;;;714:16;;1055:104:6;;714:16:127;;;;;;:::i;:::-;306:1001;;;;;;;;;747:141;;306:1001;;747:141;;306:1001;;;;;;:::i;:::-;;;;;;824:10;306:1001;;;;824:10;306:1001;;;;;;;;;;747:141;:4;306:1001;747:4;:141;;;;;;306:1001;747:141;;;306:1001;;;;;;;;;747:141;;306:1001;747:141;;306:1001;747:141;;;;;;306:1001;747:141;;;:::i;:::-;;;306:1001;;;;;;;747:141;;;;;-1:-1:-1;747:141:127;;306:1001;;;;;;-1:-1:-1;;306:1001:127;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1497:44:77;;1522:18;306:1001:127;1497:44:77;;306:1001:127;;;1497:44:77;306:1001:127;;;;;;1497:14:77;306:1001:127;1497:44:77;;;;;;306:1001:127;1497:44:77;;;306:1001:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1497:44:77:-;;;;306:1001:127;1497:44:77;;;;;;:::i;:::-;;;306:1001:127;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;:::i;:::-;;;;;1497:44:77;;306:1001:127;;;;;;-1:-1:-1;;306:1001:127;;;;;;;542:43:77;306:1001:127;;;;;;;;;-1:-1:-1;;306:1001:127;;;;;1055:104:6;;306:1001:127;1072:24:6;1089:6;1072:24;:::i;:::-;1120:6;;1103:24;1120:6;1103:24;:::i;:::-;1151:6;;1134:24;1151:6;1134:24;:::i;:::-;306:1001:127;;;;;;;;;;;;1055:104:6;;;306:1001:127;;;;-1:-1:-1;;;306:1001:127;;;;;;;;;;;;;;;;;-1:-1:-1;;;306:1001:127;;;;;;;;;;;;;;;;;;;;;1055:104:6;;;;;;;;;;:::i;:::-;306:1001:127;;;;;1055:104:6;306:1001:127;;1055:104:6;306:1001:127;;;;;;;;;;;;;;;;;;;;-1:-1:-1;306:1001:127;;;;;;;;-1:-1:-1;;306:1001:127;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;306:1001:127;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;306:1001:127;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;-1:-1:-1;;306:1001:127;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;-1:-1:-1;;306:1001:127;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;306:1001:127;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;:::o;:::-;;;;-1:-1:-1;306:1001:127;;;;;-1:-1:-1;306:1001:127;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;:::o;:::-;;;1055:104:6;;306:1001:127;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;306:1001:127;;;;;;-1:-1:-1;;306:1001:127;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;306:1001:127;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;3133:1460:9:-;;;;3340:23;;;3336:76;;3881:1;;3844:9;3896:19;3884:10;;;;;;306:1001:127;;;;;;;;;;;;;4064:22:9;;;;4060:87;;306:1001:127;;;;;;;;;;;;;;4274:33:9;306:1001:127;;;4274:33:9;:::i;:::-;;4270:84;;1489:1:0;306:1001:127;;3896:19:9;306:1001:127;3869:13:9;;;4270:84;4327:12;;;;;;;3881:1;4327:12;:::o;4060:87::-;4113:19;;;3881:1;4113:19;;3881:1;4113:19;306:1001:127;;;;3881:1:9;306:1001:127;;;;;3881:1:9;306:1001:127;3884:10:9;;;;;;;1489:1:0;3133:1460:9;:::o;3336:76::-;3386:15;;;;;;;;306:1001:127;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;306:1001:127;;;;;;:::o;871:377:80:-;306:1001:127;871:377:80;;;;306:1001:127;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;1914:299:77;;;306:1001:127;2076:4:77;306:1001:127;1914:299:77;;306:1001:127;1914:299:77;;;306:1001:127;1914:299:77;;;306:1001:127;-1:-1:-1;1914:299:77;;;306:1001:127;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;1914:299:77;306:1001:127;;;1868:18:77;306:1001:127;;1819:413:77;;;306:1001:127;;;;;;;;;;;;1791:455:77;;;;;;306:1001:127;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;306:1001:127;;;;;;;;;;;;;;;;;;;1914:299:77;306:1001:127;;;;;;;1914:299:77;306:1001:127;1914:299:77;306:1001:127;;;;;;;;;;;;;:::i;:::-;;;;;;;;1791:455:77;306:1001:127;-1:-1:-1;1791:3:77;-1:-1:-1;;;;;306:1001:127;1791:455:77;;;;;;;-1:-1:-1;1791:455:77;;;1134:55:80;871:377;:::o;1791:455:77:-;;;1914:299;1791:455;;1914:299;1791:455;;;;;;306:1001:127;1791:455:77;;;:::i;:::-;;;306:1001:127;;;;;871:377:80;:::o;1791:455:77:-;;;-1:-1:-1;1791:455:77;;637:632:63;759:17;-1:-1:-1;25444:17:70;-1:-1:-1;;;25444:17:70;;;25440:103;;637:632:63;25560:17:70;25569:8;26140:7;25560:17;;;25556:103;;637:632:63;25685:8:70;25676:17;;;25672:103;;637:632:63;25801:7:70;25792:16;;;25788:100;;637:632:63;25914:7:70;25905:16;;;25901:100;;637:632:63;26027:7:70;26018:16;;;26014:100;;637:632:63;26131:16:70;;26127:66;;637:632:63;26140:7:70;874:92:63;779:1;306:1001:127;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1055:104:6;;306:1001:127;;:::i;:::-;;;;;;;874:92:63;;;979:247;-1:-1:-1;;306:1001:127;;-1:-1:-1;;;1033:111:63;;;;306:1001:127;1033:111:63;306:1001:127;1194:10:63;;1190:21;;26140:7:70;979:247:63;;;;1190:21;1206:5;;637:632;:::o;26127:66:70:-;26177:1;306:1001:127;;;;26127:66:70;;26014:100;26027:7;26098:1;306:1001:127;;;;26014:100:70;;;25901;25914:7;25985:1;306:1001:127;;;;25901:100:70;;;25788;25801:7;25872:1;306:1001:127;;;;25788:100:70;;;25672:103;25685:8;25758:2;306:1001:127;;;;25672:103:70;;;25556;25569:8;25642:2;306:1001:127;;;;25556:103:70;;;25440;-1:-1:-1;25526:2:70;;-1:-1:-1;;;;306:1001:127;;25440:103:70;;6040:128:9;6109:4;-1:-1:-1;;;;;306:1001:127;6087:10:9;:27;6083:79;;6040:128::o;6083:79::-;6137:14;;;;;;;;1174:235:77;1365:20;;306:1001:127;;;;;;;;;;;;;1397:4:77;1365:37;1174:235;:::o;306:1001:127:-;;;-1:-1:-1;;;;;306:1001:127;;;;;;:::o;:::-;;;-1:-1:-1;;;;;306:1001:127;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "2532": [
        {
          "start": 2060,
          "length": 32
        }
      ],
      "2534": [
        {
          "start": 2103,
          "length": 32
        }
      ],
      "2536": [
        {
          "start": 2146,
          "length": 32
        }
      ],
      "3008": [
        {
          "start": 3862,
          "length": 32
        }
      ],
      "54658": [
        {
          "start": 1695,
          "length": 32
        }
      ],
      "54661": [
        {
          "start": 682,
          "length": 32
        },
        {
          "start": 3389,
          "length": 32
        }
      ],
      "54663": [
        {
          "start": 738,
          "length": 32
        },
        {
          "start": 1645,
          "length": 32
        },
        {
          "start": 1994,
          "length": 32
        },
        {
          "start": 3216,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ATTESTATION_SCHEMA()": "5bf2f20d",
    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
    "decodeObligationData(bytes)": "c93844be",
    "doObligation((string),bytes32)": "7e431351",
    "doObligationForRaw(bytes,uint64,address,address,bytes32)": "f0ffa185",
    "doObligationRaw(bytes,uint64,bytes32)": "b3b902d4",
    "getObligationData(bytes32)": "c6ec5070",
    "getSchema()": "6b122fe0",
    "isPayable()": "ce46e046",
    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"_schemaRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFromThisAttester\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ATTESTATION_SCHEMA\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"decodeObligationData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"}],\"internalType\":\"struct StringObligation.ObligationData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"}],\"internalType\":\"struct StringObligation.ObligationData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"doObligation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"doObligationForRaw\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"doObligationRaw\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getObligationData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"item\",\"type\":\"string\"}],\"internalType\":\"struct StringObligation.ObligationData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/obligations/StringObligation.sol\":\"StringObligation\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@src/=src/\",\":@test/=test/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"lib/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808\",\"dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f\",\"dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR\"]},\"lib/eas-contracts/contracts/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828\",\"dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440\",\"dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426\",\"dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY\"]},\"src/BaseAttester.sol\":{\"keccak256\":\"0x3f26ee96b6ef02860fafb1c2c97399fc3aa8e183d32063a8736b3761ecbe25aa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c6568d73465cc18236f309bd56fae4bbd541ca3eb8cb35c481318279c956d084\",\"dweb:/ipfs/QmWJfeD2KPjU5G3gKcbKzMf6cnDUtkE4kE7ANne43pjVAa\"]},\"src/BaseObligationNew.sol\":{\"keccak256\":\"0xb6f62aaa01bbb8c7d87a4437b466e5e95e9d6086626b780f367d3071ee20e8be\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9216c00ddf06a890e591fc21969211be2b7a98aba8615021dd26352af5f472bc\",\"dweb:/ipfs/Qmbc2MAT1DaT2e5Ue3PzjJmQRKb2CMNcB7YCPdjHS2Fjtc\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x5e37834970553135dbd3f5cdf4aa9cd8dc20f57a8642cee85366b211b1d111ab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b57275fcd9c40acc33af244aa3d19b62bb7291a9b1b3cb3592ecedb0202d1038\",\"dweb:/ipfs/Qmd9YTFnardXdksfuUQkm2TcxREaFNG2j4MazYmaui5Bff\"]},\"src/obligations/StringObligation.sol\":{\"keccak256\":\"0x1a1fbcbc2867a7d7e8770e6dda1b9942fc964ddf63f86881f4e92338738ea31a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ee9c5da6bc56afa11b25bc51c1003d8ecc25a905c3f10b123b25b6e784fcad5\",\"dweb:/ipfs/QmUFQ15aPefjg25x6vMwPfTRNHnehEm5GrYxpnAwpa7Un7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEAS",
              "name": "_eas",
              "type": "address"
            },
            {
              "internalType": "contract ISchemaRegistry",
              "name": "_schemaRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessDenied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEAS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotFromThisAttester"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPayable"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ATTESTATION_SCHEMA",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "attest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "decodeObligationData",
          "outputs": [
            {
              "internalType": "struct StringObligation.ObligationData",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "item",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct StringObligation.ObligationData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "item",
                  "type": "string"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "doObligation",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "doObligationForRaw",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "doObligationRaw",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getObligationData",
          "outputs": [
            {
              "internalType": "struct StringObligation.ObligationData",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "item",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "struct SchemaRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isPayable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiAttest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiRevoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The new attestation."
            },
            "returns": {
              "_0": "Whether the attestation is valid."
            }
          },
          "isPayable()": {
            "returns": {
              "_0": "Whether the resolver supports ETH transfers."
            }
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The new attestations.",
              "values": "Explicit ETH amounts which were sent with each attestation."
            },
            "returns": {
              "_0": "Whether all the attestations are valid."
            }
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The existing attestations to be revoked.",
              "values": "Explicit ETH amounts which were sent with each revocation."
            },
            "returns": {
              "_0": "Whether the attestations can be revoked."
            }
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The existing attestation to be revoked."
            },
            "returns": {
              "_0": "Whether the attestation can be revoked."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation and verifies whether it's valid."
          },
          "isPayable()": {
            "notice": "Checks if the resolver can be sent ETH."
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes multiple attestations and verifies whether they are valid."
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation revocation and verifies if it can be revoked."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@eas/=lib/eas-contracts/contracts/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@src/=src/",
        "@test/=test/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "eas-contracts/=lib/eas-contracts/contracts/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/obligations/StringObligation.sol": "StringObligation"
      },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/eas-contracts/contracts/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/IEAS.sol": {
        "keccak256": "0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12",
        "urls": [
          "bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880",
          "dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
        "keccak256": "0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754",
        "urls": [
          "bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158",
          "dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISemver.sol": {
        "keccak256": "0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18",
        "urls": [
          "bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0",
          "dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/Semver.sol": {
        "keccak256": "0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9",
        "urls": [
          "bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808",
          "dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb",
        "urls": [
          "bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f",
          "dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
        "keccak256": "0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983",
        "urls": [
          "bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828",
          "dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
        "keccak256": "0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c",
        "urls": [
          "bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4",
          "dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2",
        "urls": [
          "bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440",
          "dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c",
        "urls": [
          "bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966",
          "dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481",
        "urls": [
          "bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb",
          "dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0",
        "urls": [
          "bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426",
          "dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"
        ],
        "license": "MIT"
      },
      "src/BaseAttester.sol": {
        "keccak256": "0x3f26ee96b6ef02860fafb1c2c97399fc3aa8e183d32063a8736b3761ecbe25aa",
        "urls": [
          "bzz-raw://c6568d73465cc18236f309bd56fae4bbd541ca3eb8cb35c481318279c956d084",
          "dweb:/ipfs/QmWJfeD2KPjU5G3gKcbKzMf6cnDUtkE4kE7ANne43pjVAa"
        ],
        "license": "UNLICENSED"
      },
      "src/BaseObligationNew.sol": {
        "keccak256": "0xb6f62aaa01bbb8c7d87a4437b466e5e95e9d6086626b780f367d3071ee20e8be",
        "urls": [
          "bzz-raw://9216c00ddf06a890e591fc21969211be2b7a98aba8615021dd26352af5f472bc",
          "dweb:/ipfs/Qmbc2MAT1DaT2e5Ue3PzjJmQRKb2CMNcB7YCPdjHS2Fjtc"
        ],
        "license": "UNLICENSED"
      },
      "src/IArbiter.sol": {
        "keccak256": "0x5e37834970553135dbd3f5cdf4aa9cd8dc20f57a8642cee85366b211b1d111ab",
        "urls": [
          "bzz-raw://b57275fcd9c40acc33af244aa3d19b62bb7291a9b1b3cb3592ecedb0202d1038",
          "dweb:/ipfs/Qmd9YTFnardXdksfuUQkm2TcxREaFNG2j4MazYmaui5Bff"
        ],
        "license": "UNLICENSED"
      },
      "src/obligations/StringObligation.sol": {
        "keccak256": "0x1a1fbcbc2867a7d7e8770e6dda1b9942fc964ddf63f86881f4e92338738ea31a",
        "urls": [
          "bzz-raw://4ee9c5da6bc56afa11b25bc51c1003d8ecc25a905c3f10b123b25b6e784fcad5",
          "dweb:/ipfs/QmUFQ15aPefjg25x6vMwPfTRNHnehEm5GrYxpnAwpa7Un7"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 127
} as const;