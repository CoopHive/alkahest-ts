export const abi = {
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_eas",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_schemaRegistry",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "ATTESTATION_SCHEMA",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "EAS_CONTRACT",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SCHEMA_REGISTRY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct ETHPaymentObligation.Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "checkObligation",
      "inputs": [
        {
          "name": "obligation",
          "type": "tuple",
          "internalType": "struct ETHPaymentObligation.Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "demand",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "demandHash",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decodeObligationData",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ETHPaymentObligation.ObligationData",
          "components": [
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "payee",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "doObligation",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct ETHPaymentObligation.ObligationData",
          "components": [
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "payee",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "doObligationFor",
      "inputs": [
        {
          "name": "data",
          "type": "tuple",
          "internalType": "struct ETHPaymentObligation.ObligationData",
          "components": [
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "payee",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        {
          "name": "payer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "doObligationForRaw",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "expirationTime",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "payer",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "refUID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "doObligationRaw",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        },
        {
          "name": "expirationTime",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "refUID",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "uid_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAttestationSchema",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getObligationData",
      "inputs": [
        {
          "name": "uid",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ETHPaymentObligation.ObligationData",
          "components": [
            {
              "name": "amount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "payee",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getSchema",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ETHPaymentObligation.SchemaRecord",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "resolver",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "schema",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isPayable",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "multiAttest",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct ETHPaymentObligation.Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "multiRevoke",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct ETHPaymentObligation.Attestation[]",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        },
        {
          "name": "values",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct ETHPaymentObligation.Attestation",
          "components": [
            {
              "name": "uid",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "schema",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "time",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "expirationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "revocationTime",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "refUID",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "revocable",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "event",
      "name": "PaymentMade",
      "inputs": [
        {
          "name": "payment",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "buyer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AccessDenied",
      "inputs": []
    },
    {
      "type": "error",
      "name": "AttestationRevoked",
      "inputs": []
    },
    {
      "type": "error",
      "name": "DeadlineExpired",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ETHTransferFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientETH",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientValue",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidEAS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidLength",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSchema",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotFromThisAttester",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotPayable",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x60e0346100e457601f610dfd38819003918201601f19168301916001600160401b038311848410176100e85780849260409485528339810103126100e457610052602061004b836100fc565b92016100fc565b906001600160a01b038116156100d25760805260a0527fefa1f5f10ccf8c044a720b01adb90552fb1d89635060aa98d8b53ee89f1771ff60c052604051610cec90816101118239608051816103db015260a05181610353015260c0518181816101a20152818161044c015281816108b301528181610bdd0152610c4a0152f35b6040516341bc07ff60e11b8152600490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100e45756fe6040608081526004908136101561001f575b5050361561001d575f80fd5b005b5f803560e01c80631385ee161461064857806335535c2e1461053757806354fd4d50146104f25780635bf2f20d146103395780636b122fe01461040f57806388e5b2d91461040a57806391db0b7e1461040a578063ae0c4b1e146103c6578063b3b902d414610382578063b7f7e9a91461033e578063c0e08b9814610339578063c6ec5070146102d6578063c93844be14610236578063ce46e0461461021a578063e49617e114610215578063e60c350514610215578063e6c9714d1461014e5763f0ffa185146100f05750610011565b3461014b5760a036600319011261014b578235906001600160401b03821161014b575061012560209361014492369101610932565b61012d6108ed565b506101366107da565b61013e6107f4565b91610c36565b9051908152f35b80fd5b509034610211576060366003190112610211576001600160401b03833581811161020d5761017f9036908601610978565b926024359082821161014b575060209461019b91369101610932565b50838301517f00000000000000000000000000000000000000000000000000000000000000001492836101fe575b836101d9575b5050519015158152f35b606001519192501680159081156101f4575b50905f806101cf565b905042105f6101eb565b608081015182161593506101c9565b8380fd5b5080fd5b610b46565b5090346102115781600319360112610211576020905160018152f35b5091346102d25760203660031901126102d2578035906001600160401b03821161020d5761026691369101610932565b9082602082516102758161079e565b828152015280828051810103126102d257808051926102938461079e565b6020810151845201516001600160a01b038116810361020d576020838101918252915192518352516001600160a01b03169082015260409150f35b0390f35b8280fd5b5090346102115760203660031901126102115790818160206102ce94516102fc8161079e565b828152015280519161030d8361079e565b8083526020928301818152915190815290516001600160a01b0316918101919091529081906040820190565b61089c565b509034610211578160031936011261021157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461014b57606036600319011261014b578235906001600160401b03821161014b57506103b860209361014492369101610932565b6103c06108ed565b50610bcd565b509034610211578160031936011261021157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b610a47565b503461014b578060031936011261014b57606080918351906104308261076f565b808252806020830152848201520152805161044a8161076f565b7f000000000000000000000000000000000000000000000000000000000000000081526102ce60208201923084528083016001815281519161048b8361079e565b601d83527f75696e7432353620616d6f756e742c206164647265737320706179656500000060208401526060850192835280519586956020875251602087015260018060a01b039051169085015251151560608401525160808084015260a0830190610877565b50903461021157816003193601126102115780516102ce916105138261079e565b60058252640312e302e360dc1b602083015251918291602083526020830190610877565b5090806003193601126102115761054d3661081e565b9283511561063a578351341061062c578280808060018060a01b036020890151168851905af161057b610b7d565b501561061e5783518034116105f9575b505080518351602082810191909152938401516001600160a01b031660408201526105cc906105c781606081015b03601f1981018352826107b9565b610bcd565b905191817f4b5d781b1f4414459813c44d669c7821fcdec72a83b67c0303229be68d03ad05339280a38152f35b838080610607819434610bac565b335af1610612610b7d565b501561061e578061058b565b905163b12d13eb60e01b8152fd5b9051631a84bc4160e21b8152fd5b905163162908e360e11b8152fd5b509160803660031901126102d25761065f3661081e565b926106686107da565b926106716107f4565b9480511561075f578051341061074f5760018060a01b039383808080886020870151168651905af16106a1610b7d565b501561074157815180341161071c575b505081518151602082810191909152918201516001600160a01b0316604082015290957f4b5d781b1f4414459813c44d669c7821fcdec72a83b67c0303229be68d03ad059161070f9190879061070a81606081016105b9565b610c36565b9384925195169280a38152f35b84808061072a819434610bac565b335af1610735610b7d565b501561074157806106b1565b825163b12d13eb60e01b8152fd5b8151631a84bc4160e21b81528490fd5b815163162908e360e11b81528490fd5b608081019081106001600160401b0382111761078a57604052565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b0382111761078a57604052565b90601f801991011681019081106001600160401b0382111761078a57604052565b604435906001600160a01b03821682036107f057565b5f80fd5b606435906001600160a01b03821682036107f057565b35906001600160a01b03821682036107f057565b60409060031901126107f057604051906108378261079e565b6004358252602435826001600160a01b03821682036107f05760200152565b5f5b8381106108675750505f910152565b8181015183820152602001610858565b9060209161089081518092818552858086019101610856565b601f01601f1916010190565b346107f0575f3660031901126107f05760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b6001600160401b03811161078a5760051b60200190565b602435906001600160401b03821682036107f057565b35906001600160401b03821682036107f057565b6001600160401b03811161078a57601f01601f191660200190565b81601f820112156107f05780359061094982610917565b9261095760405194856107b9565b828452602083830101116107f057815f926020809301838601378301015290565b9190916101409081818503126107f057604051918201906001600160401b03918381108382111761078a57604052829481358452602082013560208501526109c260408301610903565b60408501526109d360608301610903565b60608501526109e460808301610903565b608085015260a082013560a08501526109ff60c0830161080a565b60c0850152610a1060e0830161080a565b60e0850152610100808301359081151582036107f05785015261012092838301359081116107f057610a429201610932565b910152565b60403660031901126107f0576004356001600160401b038082116107f057366023830112156107f057816004013590610a7f826108d6565b92610a8d60405194856107b9565b82845260208094016024809460051b830101913683116107f057848101915b838310610b20575050505081359081116107f057366023820112156107f05780600401358284610adb836108d6565b610ae860405191826107b9565b838152019160051b830101923684116107f057849201905b838210610b11578260405160018152f35b81358152908201908201610b00565b82358581116107f0578791610b3b8392893691870101610978565b815201920191610aac565b60203660031901126107f0576004356001600160401b0381116107f057610b71903690600401610978565b50602060405160018152f35b3d15610ba7573d90610b8e82610917565b91610b9c60405193846107b9565b82523d5f602084013e565b606090565b91908203918211610bb957565b634e487b7160e01b5f52601160045260245ffd5b604051610c3060748260208101947f000000000000000000000000000000000000000000000000000000000000000086523360601b6040830152426054830152610c208151809260208686019101610856565b81010360548101845201826107b9565b51902090565b906088610c309160405193849160208301967f000000000000000000000000000000000000000000000000000000000000000088526bffffffffffffffffffffffff19809260601b16604085015260601b166054830152426068830152610ca68151809260208686019101610856565b81010360688101845201826107b956fea2646970667358221220bcf8c8247692f5ff25383e7f0ab534bb9cd5e136781f237dab79ea5ee6f6fde564736f6c63430008140033",
    "sourceMap": "182:9833:15:-:0;;;;;;;;;;;;;-1:-1:-1;;182:9833:15;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;182:9833:15;;1536:18;1532:43;;1594:19;;182:9833;1623:33;1797:42;1776:63;;182:9833;;;;;;;;1594:19;182:9833;;;;;;;;;;;1776:63;182:9833;;;;;;;;;;;;;;;;;;;;;;;;;;1532:43;182:9833;;-1:-1:-1;;;1563:12:15;;;;;182:9833;-1:-1:-1;182:9833:15;;;;;;-1:-1:-1;182:9833:15;;;;;-1:-1:-1;182:9833:15;;;;-1:-1:-1;;;;;182:9833:15;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6040608081526004908136101561001f575b5050361561001d575f80fd5b005b5f803560e01c80631385ee161461064857806335535c2e1461053757806354fd4d50146104f25780635bf2f20d146103395780636b122fe01461040f57806388e5b2d91461040a57806391db0b7e1461040a578063ae0c4b1e146103c6578063b3b902d414610382578063b7f7e9a91461033e578063c0e08b9814610339578063c6ec5070146102d6578063c93844be14610236578063ce46e0461461021a578063e49617e114610215578063e60c350514610215578063e6c9714d1461014e5763f0ffa185146100f05750610011565b3461014b5760a036600319011261014b578235906001600160401b03821161014b575061012560209361014492369101610932565b61012d6108ed565b506101366107da565b61013e6107f4565b91610c36565b9051908152f35b80fd5b509034610211576060366003190112610211576001600160401b03833581811161020d5761017f9036908601610978565b926024359082821161014b575060209461019b91369101610932565b50838301517f00000000000000000000000000000000000000000000000000000000000000001492836101fe575b836101d9575b5050519015158152f35b606001519192501680159081156101f4575b50905f806101cf565b905042105f6101eb565b608081015182161593506101c9565b8380fd5b5080fd5b610b46565b5090346102115781600319360112610211576020905160018152f35b5091346102d25760203660031901126102d2578035906001600160401b03821161020d5761026691369101610932565b9082602082516102758161079e565b828152015280828051810103126102d257808051926102938461079e565b6020810151845201516001600160a01b038116810361020d576020838101918252915192518352516001600160a01b03169082015260409150f35b0390f35b8280fd5b5090346102115760203660031901126102115790818160206102ce94516102fc8161079e565b828152015280519161030d8361079e565b8083526020928301818152915190815290516001600160a01b0316918101919091529081906040820190565b61089c565b509034610211578160031936011261021157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461014b57606036600319011261014b578235906001600160401b03821161014b57506103b860209361014492369101610932565b6103c06108ed565b50610bcd565b509034610211578160031936011261021157517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b610a47565b503461014b578060031936011261014b57606080918351906104308261076f565b808252806020830152848201520152805161044a8161076f565b7f000000000000000000000000000000000000000000000000000000000000000081526102ce60208201923084528083016001815281519161048b8361079e565b601d83527f75696e7432353620616d6f756e742c206164647265737320706179656500000060208401526060850192835280519586956020875251602087015260018060a01b039051169085015251151560608401525160808084015260a0830190610877565b50903461021157816003193601126102115780516102ce916105138261079e565b60058252640312e302e360dc1b602083015251918291602083526020830190610877565b5090806003193601126102115761054d3661081e565b9283511561063a578351341061062c578280808060018060a01b036020890151168851905af161057b610b7d565b501561061e5783518034116105f9575b505080518351602082810191909152938401516001600160a01b031660408201526105cc906105c781606081015b03601f1981018352826107b9565b610bcd565b905191817f4b5d781b1f4414459813c44d669c7821fcdec72a83b67c0303229be68d03ad05339280a38152f35b838080610607819434610bac565b335af1610612610b7d565b501561061e578061058b565b905163b12d13eb60e01b8152fd5b9051631a84bc4160e21b8152fd5b905163162908e360e11b8152fd5b509160803660031901126102d25761065f3661081e565b926106686107da565b926106716107f4565b9480511561075f578051341061074f5760018060a01b039383808080886020870151168651905af16106a1610b7d565b501561074157815180341161071c575b505081518151602082810191909152918201516001600160a01b0316604082015290957f4b5d781b1f4414459813c44d669c7821fcdec72a83b67c0303229be68d03ad059161070f9190879061070a81606081016105b9565b610c36565b9384925195169280a38152f35b84808061072a819434610bac565b335af1610735610b7d565b501561074157806106b1565b825163b12d13eb60e01b8152fd5b8151631a84bc4160e21b81528490fd5b815163162908e360e11b81528490fd5b608081019081106001600160401b0382111761078a57604052565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b0382111761078a57604052565b90601f801991011681019081106001600160401b0382111761078a57604052565b604435906001600160a01b03821682036107f057565b5f80fd5b606435906001600160a01b03821682036107f057565b35906001600160a01b03821682036107f057565b60409060031901126107f057604051906108378261079e565b6004358252602435826001600160a01b03821682036107f05760200152565b5f5b8381106108675750505f910152565b8181015183820152602001610858565b9060209161089081518092818552858086019101610856565b601f01601f1916010190565b346107f0575f3660031901126107f05760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b6001600160401b03811161078a5760051b60200190565b602435906001600160401b03821682036107f057565b35906001600160401b03821682036107f057565b6001600160401b03811161078a57601f01601f191660200190565b81601f820112156107f05780359061094982610917565b9261095760405194856107b9565b828452602083830101116107f057815f926020809301838601378301015290565b9190916101409081818503126107f057604051918201906001600160401b03918381108382111761078a57604052829481358452602082013560208501526109c260408301610903565b60408501526109d360608301610903565b60608501526109e460808301610903565b608085015260a082013560a08501526109ff60c0830161080a565b60c0850152610a1060e0830161080a565b60e0850152610100808301359081151582036107f05785015261012092838301359081116107f057610a429201610932565b910152565b60403660031901126107f0576004356001600160401b038082116107f057366023830112156107f057816004013590610a7f826108d6565b92610a8d60405194856107b9565b82845260208094016024809460051b830101913683116107f057848101915b838310610b20575050505081359081116107f057366023820112156107f05780600401358284610adb836108d6565b610ae860405191826107b9565b838152019160051b830101923684116107f057849201905b838210610b11578260405160018152f35b81358152908201908201610b00565b82358581116107f0578791610b3b8392893691870101610978565b815201920191610aac565b60203660031901126107f0576004356001600160401b0381116107f057610b71903690600401610978565b50602060405160018152f35b3d15610ba7573d90610b8e82610917565b91610b9c60405193846107b9565b82523d5f602084013e565b606090565b91908203918211610bb957565b634e487b7160e01b5f52601160045260245ffd5b604051610c3060748260208101947f000000000000000000000000000000000000000000000000000000000000000086523360601b6040830152426054830152610c208151809260208686019101610856565b81010360548101845201826107b9565b51902090565b906088610c309160405193849160208301967f000000000000000000000000000000000000000000000000000000000000000088526bffffffffffffffffffffffff19809260601b16604085015260601b166054830152426068830152610ca68151809260208686019101610856565b81010360688101845201826107b956fea2646970667358221220bcf8c8247692f5ff25383e7f0ab534bb9cd5e136781f237dab79ea5ee6f6fde564736f6c63430008140033",
    "sourceMap": "182:9833:15:-:0;;;;;;;;;;;;-1:-1:-1;182:9833:15;;;;;;;;;;;;;;;;;;;;;;3651:10;182:9833;3651:10;;;2367;182:9833;2367:10;;;182:9833;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;182:9833:15;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;182:9833:15;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;7341:17;;;182:9833;7362:18;7341:39;:89;;;;182:9833;7341:187;;;182:9833;;;;;;;;;;7341:187;182:9833;7450:25;182:9833;7450:25;;-1:-1:-1;182:9833:15;7450:30;;;:77;;;;7341:187;;;;;;;7450:77;7512:15;;;-1:-1:-1;7450:77:15;;;7341:89;7400:25;;;182:9833;;;7400:30;;-1:-1:-1;7341:89:15;;182:9833;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8311:4;182:9833;;;;;;;;;;;-1:-1:-1;;182:9833:15;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;6069:34;;182:9833;;;;;;;;;;;:::i;:::-;;6069:34;;182:9833;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;-1:-1:-1;182:9833:15;;;;;;;;;;;;;;;;;-1:-1:-1;;182:9833:15;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;6536:80;;;182:9833;;;;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;293:40;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;;;-1:-1:-1;;182:9833:15;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;250:37;-1:-1:-1;;;;;182:9833:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;7746:18;182:9833;;;;7714:180;;7796:4;;182:9833;;7714:180;;;7826:4;182:9833;;;;;;;;:::i;:::-;;;;;;;;;;7714:180;;182:9833;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;182:9833:15;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;2193:16;2189:44;;182:9833;;2247:9;:23;2243:53;;182:9833;;;;;;;;;2367:10;;;182:9833;;;;2367:39;;;;;:::i;:::-;;2420:8;2416:40;;182:9833;;2247:9;;2510:23;2506:190;;182:9833;-1:-1:-1;;182:9833:15;;;;2367:10;2793:16;;;182:9833;;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;2757:138;;2793:16;182:9833;;;;2793:16;;4059;;2793;;;;;;:::i;:::-;2757:138;:::i;:::-;182:9833;;2929:10;;2911:29;2929:10;2911:29;;;182:9833;;;2506:190;2247:9;;;2597:23;2247:9;;;2597:23;:::i;:::-;2574:10;:51;;;;:::i;:::-;;2643:14;2639:46;;2506:190;;;2639:46;182:9833;;-1:-1:-1;;;2666:19:15;;;2243:53;182:9833;;-1:-1:-1;;;2279:17:15;;;2189:44;182:9833;;-1:-1:-1;;;2218:15:15;;;182:9833;-1:-1:-1;182:9833:15;;;-1:-1:-1;;182:9833:15;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;3477:16;3473:44;;182:9833;;3531:9;:23;3527:53;;182:9833;;;;;3651:10;;;;;;;;;182:9833;;;;3651:39;;;;;:::i;:::-;;3704:8;3700:40;;182:9833;;3531:9;;3794:23;3790:190;;182:9833;-1:-1:-1;;182:9833:15;;;;3651:10;4059:16;;;182:9833;;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;3651:10;;4219:24;;4020:183;;182:9833;;;4059:16;182:9833;;;;4059:16;182:9833;4059:16;4020:183;:::i;:::-;182:9833;;;;;;4219:24;;;182:9833;;;3790:190;3531:9;;;3881:23;3531:9;;;3881:23;:::i;:::-;3858:10;:51;;;;:::i;:::-;;3927:14;3923:46;;3790:190;;;3923:46;182:9833;;-1:-1:-1;;;3950:19:15;;;3527:53;182:9833;;-1:-1:-1;;;3563:17:15;;182:9833;;3563:17;3473:44;182:9833;;-1:-1:-1;;;3502:15:15;;182:9833;;3502:15;182:9833;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;:::o;:::-;;4059:16;;;182:9833;;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;182:9833:15;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;:::o;:::-;;;-1:-1:-1;;;;;182:9833:15;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;182:9833:15;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4059:16;182:9833;-1:-1:-1;;182:9833:15;;;;:::o;:::-;;;;;;-1:-1:-1;;182:9833:15;;;;;;;339:43;182:9833;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;182:9833:15;;;;;;:::o;:::-;;;-1:-1:-1;;;;;182:9833:15;;;;;;:::o;:::-;-1:-1:-1;;;;;182:9833:15;;;;4059:16;182:9833;-1:-1:-1;;182:9833:15;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;182:9833:15;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;182:9833:15;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9045:4;182:9833;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;182:9833:15;;;;;;-1:-1:-1;;;;;182:9833:15;;;;;;;;;;;:::i;:::-;;;;;8619:4;182:9833;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;182:9833:15;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;4553:367;182:9833;;4783:129;182:9833;4783:129;;;;4813:18;;182:9833;;4845:10;182:9833;;;;;;4869:15;182:9833;;;;;;;;;4783:129;182:9833;;;;;;:::i;:::-;;;4783:129;182:9833;4783:129;;;;;;;:::i;:::-;182:9833;4773:140;;4553:367;:::o;5324:438::-;;182:9833;5607:147;5324:438;182:9833;;5607:147;;;;;;5637:18;;182:9833;;;;;;;;;;;;;;;;;;;;5711:15;182:9833;;;;;;;;;5607:147;182:9833;;;;;;:::i;:::-;;;5607:147;182:9833;5607:147;;;;;;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "35193": [
        {
          "start": 987,
          "length": 32
        }
      ],
      "35195": [
        {
          "start": 851,
          "length": 32
        }
      ],
      "35197": [
        {
          "start": 418,
          "length": 32
        },
        {
          "start": 1100,
          "length": 32
        },
        {
          "start": 2227,
          "length": 32
        },
        {
          "start": 3037,
          "length": 32
        },
        {
          "start": 3146,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ATTESTATION_SCHEMA()": "5bf2f20d",
    "EAS_CONTRACT()": "ae0c4b1e",
    "SCHEMA_REGISTRY()": "b7f7e9a9",
    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
    "checkObligation((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": "e6c9714d",
    "decodeObligationData(bytes)": "c93844be",
    "doObligation((uint256,address))": "35535c2e",
    "doObligationFor((uint256,address),address,address)": "1385ee16",
    "doObligationForRaw(bytes,uint64,address,address,bytes32)": "f0ffa185",
    "doObligationRaw(bytes,uint64,bytes32)": "b3b902d4",
    "getAttestationSchema()": "c0e08b98",
    "getObligationData(bytes32)": "c6ec5070",
    "getSchema()": "6b122fe0",
    "isPayable()": "ce46e046",
    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_schemaRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSchema\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFromThisAttester\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"payment\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"PaymentMade\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ATTESTATION_SCHEMA\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EAS_CONTRACT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SCHEMA_REGISTRY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ETHPaymentObligation.Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ETHPaymentObligation.Attestation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"demandHash\",\"type\":\"bytes32\"}],\"name\":\"checkObligation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"decodeObligationData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"internalType\":\"struct ETHPaymentObligation.ObligationData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"internalType\":\"struct ETHPaymentObligation.ObligationData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"doObligation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"internalType\":\"struct ETHPaymentObligation.ObligationData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"doObligationFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"doObligationForRaw\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"doObligationRaw\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAttestationSchema\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getObligationData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"internalType\":\"struct ETHPaymentObligation.ObligationData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct ETHPaymentObligation.SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ETHPaymentObligation.Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ETHPaymentObligation.Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ETHPaymentObligation.Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The attestation to process\"},\"returns\":{\"_0\":\"Always true for valid payments\"}},\"checkObligation((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)\":{\"params\":{\"demand\":\"Encoded demand data (not used for ETH payments)\",\"demandHash\":\"Hash of the demand (not used for ETH payments)\",\"obligation\":\"The attestation representing the obligation\"},\"returns\":{\"_0\":\"True if the obligation is satisfied\"}},\"decodeObligationData(bytes)\":{\"params\":{\"data\":\"Encoded obligation data\"},\"returns\":{\"_0\":\"The decoded ObligationData struct\"}},\"doObligation((uint256,address))\":{\"params\":{\"data\":\"The obligation data containing amount and payee\"},\"returns\":{\"uid_\":\"The UID of the created attestation\"}},\"doObligationFor((uint256,address),address,address)\":{\"params\":{\"data\":\"The obligation data containing amount and payee\",\"payer\":\"The address making the payment\",\"recipient\":\"The recipient of the attestation\"},\"returns\":{\"uid_\":\"The UID of the created attestation\"}},\"doObligationForRaw(bytes,uint64,address,address,bytes32)\":{\"params\":{\"data\":\"Encoded obligation data\",\"expirationTime\":\"Expiration timestamp\",\"payer\":\"The address making the payment\",\"recipient\":\"The recipient of the attestation\",\"refUID\":\"Reference UID for linking attestations\"},\"returns\":{\"uid_\":\"The UID of the created attestation\"}},\"doObligationRaw(bytes,uint64,bytes32)\":{\"params\":{\"data\":\"Encoded obligation data\",\"expirationTime\":\"Expiration timestamp (0 for no expiration)\",\"refUID\":\"Reference UID for linking attestations\"},\"returns\":{\"uid_\":\"The UID of the created attestation\"}},\"getAttestationSchema()\":{\"returns\":{\"_0\":\"The schema UID\"}},\"getObligationData(bytes32)\":{\"params\":{\"uid\":\"The attestation UID\"},\"returns\":{\"_0\":\"The decoded ObligationData struct\"}},\"getSchema()\":{\"returns\":{\"_0\":\"The schema record\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Always true for ETH payment obligations\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The attestations to process\",\"values\":\"ETH values for each attestation\"},\"returns\":{\"_0\":\"Always true for valid payments\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The attestations to revoke\",\"values\":\"ETH values for each revocation\"},\"returns\":{\"_0\":\"Always true\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The attestation to revoke\"},\"returns\":{\"_0\":\"Always true\"}},\"version()\":{\"returns\":{\"_0\":\"Version string\"}}},\"title\":\"ETHPaymentObligation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Process an attestation (placeholder for EAS resolver interface)\"},\"checkObligation((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)\":{\"notice\":\"Check if an obligation is satisfied\"},\"decodeObligationData(bytes)\":{\"notice\":\"Decode obligation data from bytes\"},\"doObligation((uint256,address))\":{\"notice\":\"Execute ETH payment obligation with caller as payer\"},\"doObligationFor((uint256,address),address,address)\":{\"notice\":\"Execute ETH payment obligation on behalf of another address\"},\"doObligationForRaw(bytes,uint64,address,address,bytes32)\":{\"notice\":\"Create an attestation on behalf of another address\"},\"doObligationRaw(bytes,uint64,bytes32)\":{\"notice\":\"Create an attestation with raw data\"},\"getAttestationSchema()\":{\"notice\":\"Returns the attestation schema UID\"},\"getObligationData(bytes32)\":{\"notice\":\"Get obligation data from attestation UID (simplified)\"},\"getSchema()\":{\"notice\":\"Get the attestation schema\"},\"isPayable()\":{\"notice\":\"Check if the contract accepts ETH payments\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Process multiple attestations (placeholder for EAS resolver interface)\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Revoke multiple attestations (placeholder for EAS resolver interface)\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Revoke an attestation (placeholder for EAS resolver interface)\"},\"version()\":{\"notice\":\"Get contract version\"}},\"notice\":\"Contract for handling ETH payment obligations with EAS attestations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/obligations/ETHPaymentObligation.sol\":\"ETHPaymentObligation\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\"],\"viaIR\":true},\"sources\":{\"script/obligations/ETHPaymentObligation.sol\":{\"keccak256\":\"0x1aab7cf3d75202b1368d408d85e520f3e078ab750b5174fb94532953cea3defe\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e4260c64ab8eb4e19db6c440bc290173ffeea6d4bcd6978337028ad6aa7bccf6\",\"dweb:/ipfs/QmSEGFW4pmZB8HfsCFFjJLcMkmHPsBtBfSxVnHKsefipRp\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_eas",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_schemaRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessDenied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AttestationRevoked"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadlineExpired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ETHTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientETH"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEAS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSchema"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotFromThisAttester"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPayable"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "payment",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PaymentMade",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ATTESTATION_SCHEMA",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EAS_CONTRACT",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SCHEMA_REGISTRY",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ETHPaymentObligation.Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "attest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ETHPaymentObligation.Attestation",
              "name": "obligation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "demand",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "demandHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkObligation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "decodeObligationData",
          "outputs": [
            {
              "internalType": "struct ETHPaymentObligation.ObligationData",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "payee",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ETHPaymentObligation.ObligationData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "payee",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "doObligation",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ETHPaymentObligation.ObligationData",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "payee",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "doObligationFor",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "doObligationForRaw",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "doObligationRaw",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "uid_",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAttestationSchema",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getObligationData",
          "outputs": [
            {
              "internalType": "struct ETHPaymentObligation.ObligationData",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "payee",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "struct ETHPaymentObligation.SchemaRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isPayable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ETHPaymentObligation.Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiAttest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ETHPaymentObligation.Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiRevoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ETHPaymentObligation.Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The attestation to process"
            },
            "returns": {
              "_0": "Always true for valid payments"
            }
          },
          "checkObligation((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": {
            "params": {
              "demand": "Encoded demand data (not used for ETH payments)",
              "demandHash": "Hash of the demand (not used for ETH payments)",
              "obligation": "The attestation representing the obligation"
            },
            "returns": {
              "_0": "True if the obligation is satisfied"
            }
          },
          "decodeObligationData(bytes)": {
            "params": {
              "data": "Encoded obligation data"
            },
            "returns": {
              "_0": "The decoded ObligationData struct"
            }
          },
          "doObligation((uint256,address))": {
            "params": {
              "data": "The obligation data containing amount and payee"
            },
            "returns": {
              "uid_": "The UID of the created attestation"
            }
          },
          "doObligationFor((uint256,address),address,address)": {
            "params": {
              "data": "The obligation data containing amount and payee",
              "payer": "The address making the payment",
              "recipient": "The recipient of the attestation"
            },
            "returns": {
              "uid_": "The UID of the created attestation"
            }
          },
          "doObligationForRaw(bytes,uint64,address,address,bytes32)": {
            "params": {
              "data": "Encoded obligation data",
              "expirationTime": "Expiration timestamp",
              "payer": "The address making the payment",
              "recipient": "The recipient of the attestation",
              "refUID": "Reference UID for linking attestations"
            },
            "returns": {
              "uid_": "The UID of the created attestation"
            }
          },
          "doObligationRaw(bytes,uint64,bytes32)": {
            "params": {
              "data": "Encoded obligation data",
              "expirationTime": "Expiration timestamp (0 for no expiration)",
              "refUID": "Reference UID for linking attestations"
            },
            "returns": {
              "uid_": "The UID of the created attestation"
            }
          },
          "getAttestationSchema()": {
            "returns": {
              "_0": "The schema UID"
            }
          },
          "getObligationData(bytes32)": {
            "params": {
              "uid": "The attestation UID"
            },
            "returns": {
              "_0": "The decoded ObligationData struct"
            }
          },
          "getSchema()": {
            "returns": {
              "_0": "The schema record"
            }
          },
          "isPayable()": {
            "returns": {
              "_0": "Always true for ETH payment obligations"
            }
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The attestations to process",
              "values": "ETH values for each attestation"
            },
            "returns": {
              "_0": "Always true for valid payments"
            }
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The attestations to revoke",
              "values": "ETH values for each revocation"
            },
            "returns": {
              "_0": "Always true"
            }
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The attestation to revoke"
            },
            "returns": {
              "_0": "Always true"
            }
          },
          "version()": {
            "returns": {
              "_0": "Version string"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Process an attestation (placeholder for EAS resolver interface)"
          },
          "checkObligation((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": {
            "notice": "Check if an obligation is satisfied"
          },
          "decodeObligationData(bytes)": {
            "notice": "Decode obligation data from bytes"
          },
          "doObligation((uint256,address))": {
            "notice": "Execute ETH payment obligation with caller as payer"
          },
          "doObligationFor((uint256,address),address,address)": {
            "notice": "Execute ETH payment obligation on behalf of another address"
          },
          "doObligationForRaw(bytes,uint64,address,address,bytes32)": {
            "notice": "Create an attestation on behalf of another address"
          },
          "doObligationRaw(bytes,uint64,bytes32)": {
            "notice": "Create an attestation with raw data"
          },
          "getAttestationSchema()": {
            "notice": "Returns the attestation schema UID"
          },
          "getObligationData(bytes32)": {
            "notice": "Get obligation data from attestation UID (simplified)"
          },
          "getSchema()": {
            "notice": "Get the attestation schema"
          },
          "isPayable()": {
            "notice": "Check if the contract accepts ETH payments"
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Process multiple attestations (placeholder for EAS resolver interface)"
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Revoke multiple attestations (placeholder for EAS resolver interface)"
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Revoke an attestation (placeholder for EAS resolver interface)"
          },
          "version()": {
            "notice": "Get contract version"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@eas/=lib/eas-contracts/contracts/",
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "script/obligations/ETHPaymentObligation.sol": "ETHPaymentObligation"
      },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "script/obligations/ETHPaymentObligation.sol": {
        "keccak256": "0x1aab7cf3d75202b1368d408d85e520f3e078ab750b5174fb94532953cea3defe",
        "urls": [
          "bzz-raw://e4260c64ab8eb4e19db6c440bc290173ffeea6d4bcd6978337028ad6aa7bccf6",
          "dweb:/ipfs/QmSEGFW4pmZB8HfsCFFjJLcMkmHPsBtBfSxVnHKsefipRp"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 15
} as const;